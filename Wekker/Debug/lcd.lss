
lcd.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00004394  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000020  00802000  00004394  00004428  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000000a9  00802020  00802020  00004448  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00004448  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000044a4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000005b8  00000000  00000000  000044e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000149b2  00000000  00000000  00004a9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000050ad  00000000  00000000  0001944e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00003678  00000000  00000000  0001e4fb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000012fc  00000000  00000000  00021b74  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000661b  00000000  00000000  00022e70  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00007ca3  00000000  00000000  0002948b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000518  00000000  00000000  0003112e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 56 0e 	jmp	0x1cac	; 0x1cac <__ctors_end>
       4:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
       8:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
       c:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      10:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      14:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      18:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      1c:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      20:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      24:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      28:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      2c:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      30:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      34:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      38:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      3c:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      40:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      44:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      48:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      4c:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      50:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      54:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      58:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      5c:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      60:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      64:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      68:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      6c:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      70:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      74:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      78:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      7c:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      80:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      84:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      88:	0c 94 1a 1b 	jmp	0x3634	; 0x3634 <__vector_34>
      8c:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      90:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      94:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      98:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      9c:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      a0:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      a4:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      a8:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      ac:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      b0:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      b4:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      b8:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      bc:	0c 94 ab 19 	jmp	0x3356	; 0x3356 <__vector_47>
      c0:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      c4:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      c8:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      cc:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      d0:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      d4:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      d8:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      dc:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      e0:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      e4:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      e8:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      ec:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      f0:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      f4:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      f8:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
      fc:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     100:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     104:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     108:	0c 94 91 1a 	jmp	0x3522	; 0x3522 <__vector_66>
     10c:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     110:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     114:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     118:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     11c:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     120:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     124:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     128:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     12c:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     130:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     134:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     138:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     13c:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     140:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     144:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     148:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     14c:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     150:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     154:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     158:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     15c:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     160:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     164:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     168:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     16c:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     170:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     174:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     178:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     17c:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     180:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     184:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     188:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     18c:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     190:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     194:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     198:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     19c:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     1a0:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     1a4:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     1a8:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     1ac:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     1b0:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     1b4:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     1b8:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     1bc:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     1c0:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     1c4:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     1c8:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     1cc:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     1d0:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     1d4:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     1d8:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     1dc:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     1e0:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     1e4:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     1e8:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     1ec:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     1f0:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     1f4:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     1f8:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__bad_interrupt>
     1fc:	37 12       	cpse	r3, r23
     1fe:	37 12       	cpse	r3, r23
     200:	37 12       	cpse	r3, r23
     202:	f6 12       	cpse	r15, r22
     204:	f6 12       	cpse	r15, r22
     206:	61 12       	cpse	r6, r17
     208:	73 12       	cpse	r7, r19
     20a:	8a 12       	cpse	r8, r26
     20c:	99 12       	cpse	r9, r25
     20e:	a8 12       	cpse	r10, r24
     210:	c3 12       	cpse	r12, r19
     212:	f6 12       	cpse	r15, r22
     214:	f6 12       	cpse	r15, r22
     216:	f6 12       	cpse	r15, r22
     218:	de 12       	cpse	r13, r30
     21a:	d7 1c       	adc	r13, r7
     21c:	f0 1c       	adc	r15, r0
     21e:	d4 1c       	adc	r13, r4
     220:	04 1d       	adc	r16, r4
     222:	0e 1d       	adc	r16, r14
     224:	18 1d       	adc	r17, r8
     226:	22 1d       	adc	r18, r2
     228:	d0 1c       	adc	r13, r0
     22a:	cc 1c       	adc	r12, r12
     22c:	c8 1c       	adc	r12, r8
     22e:	c4 1c       	adc	r12, r4

00000230 <__trampolines_start>:
     230:	0c 94 8a 12 	jmp	0x2514	; 0x2514 <ucg_com_SendCmdSeq+0xfa>
     234:	0c 94 99 12 	jmp	0x2532	; 0x2532 <ucg_com_SendCmdSeq+0x118>
     238:	0c 94 de 12 	jmp	0x25bc	; 0x25bc <ucg_com_SendCmdSeq+0x1a2>
     23c:	0c 94 cc 1c 	jmp	0x3998	; 0x3998 <ucg_comm_xmega+0x36>
     240:	0c 94 0b 19 	jmp	0x3216	; 0x3216 <ucg_dev_rotate90>
     244:	0c 94 f0 1c 	jmp	0x39e0	; 0x39e0 <ucg_comm_xmega+0x7e>
     248:	0c 94 c8 1c 	jmp	0x3990	; 0x3990 <ucg_comm_xmega+0x2e>
     24c:	0c 94 22 1d 	jmp	0x3a44	; 0x3a44 <ucg_comm_xmega+0xe2>
     250:	0c 94 61 12 	jmp	0x24c2	; 0x24c2 <ucg_com_SendCmdSeq+0xa8>
     254:	0c 94 d7 1c 	jmp	0x39ae	; 0x39ae <ucg_comm_xmega+0x4c>
     258:	0c 94 a8 12 	jmp	0x2550	; 0x2550 <ucg_com_SendCmdSeq+0x136>
     25c:	0c 94 73 12 	jmp	0x24e6	; 0x24e6 <ucg_com_SendCmdSeq+0xcc>
     260:	0c 94 04 1d 	jmp	0x3a08	; 0x3a08 <ucg_comm_xmega+0xa6>
     264:	0c 94 cf 14 	jmp	0x299e	; 0x299e <ucg_ext_st7735_18>
     268:	0c 94 b7 15 	jmp	0x2b6e	; 0x2b6e <ucg_font_calc_vref_font>
     26c:	0c 94 1f 1c 	jmp	0x383e	; 0x383e <ucg_Putc>
     270:	0c 94 47 15 	jmp	0x2a8e	; 0x2a8e <ucg_dev_st7735_18x128x160>
     274:	0c 94 c3 12 	jmp	0x2586	; 0x2586 <ucg_com_SendCmdSeq+0x16c>
     278:	0c 94 b1 1c 	jmp	0x3962	; 0x3962 <ucg_comm_xmega>
     27c:	0c 94 37 12 	jmp	0x246e	; 0x246e <ucg_com_SendCmdSeq+0x54>
     280:	0c 94 d4 1c 	jmp	0x39a8	; 0x39a8 <ucg_comm_xmega+0x46>
     284:	0c 94 18 1d 	jmp	0x3a30	; 0x3a30 <ucg_comm_xmega+0xce>
     288:	0c 94 22 13 	jmp	0x2644	; 0x2644 <ucg_ext_none>
     28c:	0c 94 0e 1d 	jmp	0x3a1c	; 0x3a1c <ucg_comm_xmega+0xba>
     290:	0c 94 c4 1c 	jmp	0x3988	; 0x3988 <ucg_comm_xmega+0x26>
     294:	0c 94 f6 12 	jmp	0x25ec	; 0x25ec <ucg_com_SendCmdSeq+0x1d2>
     298:	0c 94 d0 1c 	jmp	0x39a0	; 0x39a0 <ucg_comm_xmega+0x3e>

0000029c <__trampolines_end>:
     29c:	f4 10       	cpse	r15, r4
     29e:	10 10       	cpse	r1, r0
     2a0:	28 f5       	brcc	.+74     	; 0x2ec <ucg_st7735_set_pos_dir1_seq+0x4>
	...

000002a3 <ucg_st7735_set_pos_dir3_seq>:
     2a3:	f4 11 36 80 11 36 80 10 2a a0 00 00 a0 ff 00 a0     ..6..6..*.......
     2b3:	00 00 a0 ff 00 10 2b b0 00 00 b0 ff 00 62 00 9f     ......+......b..
     2c3:	10 2c 70 00                                         .,p.

000002c7 <ucg_st7735_set_pos_dir2_seq>:
     2c7:	f4 11 36 40 11 36 40 10 2a a0 00 00 a0 ff 00 62     ..6@.6@.*......b
     2d7:	00 7f 10 2b b8 01 00 b0 ff 00 62 00 9f 10 2c 70     ...+......b...,p
	...

000002e8 <ucg_st7735_set_pos_dir1_seq>:
     2e8:	f4 11 36 00 10 2a a0 00 00 a0 ff 00 a0 00 00 a0     ..6..*..........
     2f8:	ff 00 10 2b b0 00 00 b0 ff 00 62 00 9f 10 2c 70     ...+......b...,p
	...

00000309 <ucg_st7735_set_pos_dir0_seq>:
     309:	f4 11 36 00 10 2a a0 00 00 a0 ff 00 62 00 7f 10     ..6..*......b...
     319:	2b b0 00 00 b0 ff 00 62 00 9f 10 2c 70 00           +......b...,p.

00000327 <ucg_st7735_set_pos_seq>:
     327:	f4 11 36 00 10 2a a0 00 00 a0 ff 00 62 00 7f 10     ..6..*......b...
     337:	2b b0 00 00 b0 ff 00 62 00 9f 10 2c 70 00           +......b...,p.

00000345 <ucg_tft_128x160_st7735_init_seq>:
     345:	fd f1 f5 80 05 f0 80 05 f1 80 32 f4 10 11 80 0a     ..........2.....
     355:	10 13 10 20 11 3a 06 10 29 11 36 00 14 2a 00 00     ... .:..).6..*..
     365:	00 7f 14 2b 00 00 00 9f 10 2c f5 00                 ...+.....,..

00000371 <ucg_font_ncenB18_hf>:
     371:	bf 01 04 03 05 05 01 04 06 1d 1d fd fb 12 fb 12     ................
     381:	fd 03 9c 08 6b 20 09 a7 9f f3 f1 ff 10 00 21 15     ....k ........!.
     391:	a7 9f f3 91 cf 94 b4 19 da ab b0 78 a0 99 92 9a     ...........x....
     3a1:	79 74 00 22 0e a8 1f f4 31 12 d1 3f 89 89 c7 bf     yt."....1..?....
     3b1:	01 23 2c ae 1f f7 f1 5c 44 50 44 50 44 50 44 50     .#,....\DPDPDPDP
     3c1:	44 ea 80 e6 80 4a 44 50 44 50 44 50 44 ea 80 e6     D....JDPDPDPD...
     3d1:	80 4a 44 50 44 50 44 50 44 50 44 1e 0f 24 35 ae     .JDPDPDPDPD..$5.
     3e1:	1f f7 71 12 1d 7b 35 11 23 24 12 42 32 12 42 32     ..q..{5.#$.B2.B2
     3f1:	12 c2 22 46 c6 f0 20 ee 40 ee 20 f0 2e a2 46 24     .."F.. .@. ...F$
     401:	84 45 cc 08 45 cc 08 45 8c 90 48 c8 d4 69 74 7a     .E..E..E..H..itz
     411:	54 00 25 3e b5 9f fa f1 a7 54 73 14 22 12 72 33     T.%>.....Ts.".r3
     421:	23 72 34 41 72 43 31 82 33 41 82 33 31 a2 22 41     #r4ArC1.3A.31."A
     431:	b2 43 f2 40 32 b4 22 14 a2 22 33 91 22 34 91 22     .C.@2.".."3."4."
     441:	43 81 32 33 91 32 33 81 52 22 91 62 f3 f8 11 00     C.23.23.R".b....
     451:	26 32 b6 1f fb f1 af ea 01 46 a6 87 a4 87 a4 87     &2.......F......
     461:	a4 49 c4 ef 21 ea 21 cc 47 68 6c 66 6a 86 d8 48     .I..!.!.Ghlfj..H
     471:	31 09 a3 3a 23 2b 8a 21 ab 89 29 3a 10 bb a9 c7     1..:#+.!..):....
     481:	0f 01 27 0b a6 1f f3 11 0a e9 3d 3e 07 28 15 a8     ..'.......=>.(..
     491:	1f f4 b1 0c 93 52 26 25 26 b5 9f a9 13 93 53 17     .....R&%&.....S.
     4a1:	0f 02 29 16 a8 1f f4 31 8a d3 4c 4e 4c 6c 6a 5f     ..)....1..LNLlj_
     4b1:	89 49 89 49 29 8b 87 03 2a 1b ab 9f f5 71 3a 38     .I.I)...*....q:8
     4c1:	25 12 22 32 11 31 54 56 34 11 31 22 12 22 35 38     %."2.1TV4.1"."58
     4d1:	8f 7f 0c 2b 12 ae 1f f7 f1 9f 0a eb ee a0 e4 a0     ...+............
     4e1:	4e 58 f7 f8 00 2c 0e a7 9f f3 f1 ef 66 4a 6a 88     NX...,......fJj.
     4f1:	a4 32 06 2d 0c a8 1f f4 f1 97 26 ee f1 0c 00 2e     .2.-......&.....
     501:	0d a7 9f f3 f1 ef 66 4a 6a e6 d1 01 2f 15 a9 9f     ......fJj.../...
     511:	f4 71 20 a7 4c 4e 99 9c 32 39 65 72 ca e4 d4 63     .q .LN..29er...c
     521:	06 30 27 ae 1f f7 f1 9c 70 64 6a 68 1b 22 12 22     .0'.....pdjh."."
     531:	12 22 12 22 12 22 12 22 12 22 12 22 12 22 12 22     ."."."."."."."."
     541:	9a a1 ad 46 06 e9 f1 00 31 11 ae 1f f7 f1 9c ee     ...F....1.......
     551:	94 ff 5f 9a 1d cc e3 18 00 32 21 ae 1f f7 f1 ba     .._......2!.....
     561:	4e 86 68 88 86 1f 09 91 8e 92 6e 2a 15 25 16 34     N.h.......n*.%.4
     571:	25 73 40 73 40 73 40 8f 63 00 33 23 ae 1f f7 f1     %s@s@s@.c.3#....
     581:	bc 4e 86 68 11 0d 1f 09 8d 0e 52 0f 0f 49 91 10     .N.h......R..I..
     591:	91 10 91 10 91 4c 0d 09 91 d9 e3 1c 00 34 22 ae     .....L.......4".
     5a1:	1f f7 f1 8d ec 28 65 43 3b 09 ba 10 32 11 2a 19     .....(eC;...2.*.
     5b1:	2a 19 22 21 a2 83 92 83 42 52 86 07 f1 b8 05 35     *."!....BR.....5
     5c1:	22 ae 1f f7 f1 f6 80 e6 60 e8 40 2a 3a 8b ba 99     ".......`.@*:...
     5d1:	29 a9 59 52 36 52 24 44 24 44 24 44 43 42 63 f6     ).YR6R$D$D$DCBc.
     5e1:	78 36 27 ae 1f f7 f1 bc 6e 46 6a 86 68 86 47 42     x6'.....nFj.h.GB
     5f1:	a4 14 54 25 34 44 33 44 24 44 24 44 24 44 24 44     ..T%4D3D$D$D$D$D
     601:	34 43 43 24 64 f6 38 07 37 1e ae 1f f7 f1 f4 a0     4CC$d.8.7.......
     611:	e4 a0 e4 80 46 4e 26 4e 28 6c 74 76 74 76 94 25     ....FN&N(ltvtv.%
     621:	29 6f e5 f1 04 00 38 25 ae 1f f7 f1 9c 70 64 6a     )o....8%.....pdj
     631:	68 8f 68 86 4a c4 0e ed 0e a2 26 6c 86 4a a6 48     h.h.J.....&l.J.H
     641:	c6 46 c6 46 c6 84 86 e4 ec 71 0e 39 26 ae 1f f7     .F.F.....q.9&...
     651:	f1 da 8c 84 68 0d 11 09 11 09 11 09 11 09 11 cd     ....h...........
     661:	10 0d 49 15 05 29 91 10 0d 37 43 34 53 32 73 f5     ..I..)...7C4S2s.
     671:	78 3a 12 a7 9f f3 f1 76 a6 a4 66 1e c9 4c 49 cd     x:.....v..f..LI.
     681:	3c 3a 00 3b 13 a7 9f f3 f1 76 a6 a4 66 1e c9 4c     <:.;.....v..f..L
     691:	49 0d 91 54 c6 00 3c 11 ae 1f f7 f1 3f 10 25 e4     I..T..<.....?.%.
     6a1:	29 31 8f e5 f1 14 00 3d 14 ae 1f f7 f1 ff e4 a0     )1.....=........
     6b1:	e4 a0 1e c1 41 c9 41 3d fe 0e 00 3e 10 ae 1f f7     ....A.A=...>....
     6c1:	f1 5f 09 f3 29 21 4f e5 f1 15 00 3f 1b ad 9f f6     ._..)!O....?....
     6d1:	f1 cc 4c 86 13 1a 1a 21 4a ca 2d 45 65 e5 d1 4d     ..L....!J.-Ee..M
     6e1:	16 56 ce e3 16 00 40 3b b4 1f fa f1 87 a7 54 92     .V....@;......T.
     6f1:	aa 84 85 54 8c c8 c8 4c d0 88 88 cc cc 48 c8 ac     ...T...L.....H..
     701:	91 10 19 9a 91 10 99 19 92 10 99 19 0a 11 99 99     ................
     711:	11 11 19 21 11 12 a1 b0 92 07 1a 8d 5b 79 20 8f     ...!........[y .
     721:	1f 41 2e b3 9f f9 f1 37 f2 20 f2 10 f4 00 e4 11     .A.....7. ......
     731:	d4 11 c4 22 b4 31 b4 31 a4 42 94 51 94 07 83 62     ...".1.1.B.Q...b
     741:	74 71 74 71 64 82 44 83 24 47 07 f1 f8 0a 00 42     tqtqd.D.$G.....B
     751:	2c b3 9f f9 f1 d3 03 43 a2 32 aa 2a aa 2a aa 2a     ,......C.2.*.*.*
     761:	aa 2a 66 44 74 07 84 54 64 ac c8 8a c8 8a c8 8a     .*fDt..Td.......
     771:	c8 8a c8 8a a8 6a 0e ee f1 25 00 43 26 b3 9f f9     .....j...%.C&...
     781:	f1 17 27 62 44 45 84 43 94 32 a4 32 b4 21 b5 21     ..'bDE.C.2.2.!.!
     791:	e5 bd 07 a0 8d a1 0d a2 8c a2 8c a3 12 bd c7 a7     ................
     7a1:	00 44 28 b4 1f fa f1 17 07 a5 44 84 64 bc a3 a2     .D(.......D.d...
     7b1:	a3 a2 2b a2 2b a2 2b a2 2b a2 2b a2 2b a2 a3 a2     ..+.+.+.+.+.+...
     7c1:	a3 22 e3 11 d9 41 3d 7e 02 45 2e b2 1f f9 f1 a3     ."...A=~.E......
     7d1:	83 83 28 ee a4 08 a3 08 a3 88 62 a2 88 22 69 24     ..(.......b.."i$
     7e1:	0f 24 69 24 89 22 89 22 09 a3 08 a3 08 a3 e8 a4     .$i$."."........
     7f1:	d8 1c 1c c4 e3 13 00 46 28 b1 9f f8 f1 f5 c1 41     .......F(......A
     801:	10 15 11 9d 10 61 10 61 10 51 4c 10 51 20 8d e0     .....a.a.QL.Q ..
     811:	81 20 8d 20 51 20 51 20 35 6f 0f e2 f1 0d 00 47     . . Q Q 5o.....G
     821:	2e b4 1f fa f1 77 27 72 44 55 84 53 94 42 a4 42     .....w'rDU.S.B.B
     831:	b4 31 b5 31 f5 00 f5 00 f5 00 75 26 85 44 84 44     .1.1......u&.D.D
     841:	84 54 74 54 74 8c 24 24 6f e2 f1 31 00 48 33 b5     .TtTt.$$o..1.H3.
     851:	9f fa f1 77 07 31 07 41 74 64 74 64 74 64 74 64     ...w.1.Atdtdtdtd
     861:	74 64 74 64 74 64 07 07 61 74 64 74 64 74 64 74     tdtdtd..atdtdtdt
     871:	64 74 64 74 64 74 64 74 44 07 31 07 f1 f8 05 00     dtdtdtdtD.1.....
     881:	49 10 aa 1f f5 71 71 10 44 c6 ff 1f 1d c4 63 06     I....qq.D.....c.
     891:	4a 19 b0 1f f8 f1 f1 41 28 31 ff 95 14 11 8f a6     J......A(1......
     8a1:	88 c4 c6 84 e8 ee f1 18 00 4b 30 b5 9f fa f1 77     .........K0....w
     8b1:	07 41 56 84 72 74 82 64 92 54 a2 44 b2 34 c2 24     .AV.rt.d.T.D.4.$
     8c1:	c3 14 b5 07 a4 15 a5 34 95 44 85 54 75 54 75 64     .......4.D.TuTud
     8d1:	65 74 35 07 41 07 f1 f8 01 4c 1a b1 9f f8 f1 f5     et5.A....L......
     8e1:	41 2c 35 ff 87 41 84 41 84 41 74 42 54 24 07 07     A,5..A.A.AtBT$..
     8f1:	f1 78 0b 4d 47 b8 1f fc f1 4f 2d 8f 28 cb ea cc     .x.MG....O-.(...
     901:	ea 22 c8 22 e6 22 c8 22 a8 24 c8 42 a6 42 c8 42     .".".".".$.B.B.B
     911:	88 42 c8 42 68 44 c8 62 66 62 c8 62 48 62 c8 62     .B.BhD.bfb.bHb.b
     921:	28 64 c8 82 26 82 c8 82 8a c8 a2 a6 c8 a2 a6 a8     (d..&...........
     931:	a6 a4 88 8a 82 0e e2 f1 17 00 4e 34 b6 1f fb f1     ..........N4....
     941:	d7 76 47 85 73 85 81 76 81 67 81 11 56 81 21 46     .vG.s..v.g..V.!F
     951:	81 31 45 81 41 35 81 51 25 81 51 16 81 61 87 71     .1E.A5.Q%.Q..a.q
     961:	86 81 85 91 84 a1 73 a3 52 97 f1 f8 25 00 4f 2c     ......s.R...%.O,
     971:	b5 9f fa f1 d7 c7 34 84 74 64 74 54 94 44 94 34     ......4.tdtT.D.4
     981:	95 25 95 25 95 25 95 25 95 25 95 35 94 44 94 54     .%.%.%.%.%.5.D.T
     991:	74 64 74 84 34 c4 f7 f8 1d 00 50 22 b2 1f f9 f1     tdt.4.....P"....
     9a1:	a3 83 33 aa 22 32 22 b2 1a b2 1a b2 1a b2 1a 32     ..3."2"........2
     9b1:	22 aa a2 03 3a 72 7e 7c 20 8f 0f 01 51 3b b5 9f     "...:r~| ...Q;..
     9c1:	fa f1 d7 c7 34 84 74 64 74 54 94 44 94 34 95 25     ....4.tdtT.D.4.%
     9d1:	95 25 95 25 95 25 95 25 15 35 35 26 23 44 45 22     .%.%.%.%.55&#DE"
     9e1:	54 44 22 63 54 12 83 34 c4 07 f2 30 f3 30 24 f1     TD"cT..4...0.0$.
     9f1:	00 f5 10 f5 20 33 00 52 31 b5 9f fa f1 77 07 a6     .... 3.R1....w..
     a01:	44 85 54 75 54 75 54 75 54 75 54 84 44 94 07 c2     D.TuTuTuTuT.D...
     a11:	34 a4 44 94 44 94 44 85 54 84 54 25 41 64 24 41     4.D.D.D.T.T%Ad$A
     a21:	64 36 07 42 f4 f8 0d 00 53 2b b0 1f f8 f1 ad 49     d6.B....S+.....I
     a31:	d4 10 91 a0 cc a0 cc 64 0c 61 cc e5 c1 dc 01 d9     .......d.a......
     a41:	01 dd c1 e4 49 24 49 e8 88 e4 88 a4 0c d5 50 c8     ....I$I.......P.
     a51:	3d 9e 02 54 21 b2 1f f9 f1 a3 83 03 91 19 9a 11     =..T!...........
     a61:	21 22 91 28 aa 90 28 aa 90 28 aa 40 72 fe c7 07     !".(..(..(.@r...
     a71:	f1 f8 0a 00 55 2f b5 9f fa f1 77 07 41 47 84 63     ....U/....w.AG.c
     a81:	94 71 94 71 94 71 94 71 94 71 94 71 94 71 94 71     .q.q.q.q.q.q.q.q
     a91:	94 71 94 71 94 71 94 71 84 91 74 91 36 c2 07 f1     .q.q.q.q..t.6...
     aa1:	f8 1d 00 56 2d b3 9f f9 f1 cb 83 a0 13 c2 21 42     ...V-.........!B
     ab1:	31 ba 38 ba 38 32 41 aa 48 aa 48 22 51 9a 58 9a     1.8.82A.H.H"Q.X.
     ac1:	58 12 61 8a 68 8a 70 7a 00 7a 08 79 10 79 7c 0e     X.a.h.pz.z.y.y|.
     ad1:	57 42 ba 1f fd f1 9f 1d 44 1c 84 9c 50 91 0d 51     WB......D...P..Q
     ae1:	91 89 51 51 c5 51 51 c5 51 11 09 d2 d8 44 d2 44     ..QQ.QQ.Q....D.D
     af1:	d0 44 d2 44 90 88 52 88 50 c4 52 c4 50 c4 52 c4     .D.D..R.P.R.P.R.
     b01:	18 17 51 53 51 53 91 8f c9 03 c8 c9 03 c8 c9 e3     ..QSQS..........
     b11:	df 00 58 2d b4 1f fa f1 07 07 42 36 85 62 65 72     ..X-......B6.ber
     b21:	46 92 35 b2 15 d2 e6 f5 10 f5 10 e5 d6 12 b5 32     F.5............2
     b31:	a5 51 85 52 75 72 55 92 25 56 07 f2 f8 14 00 59     .Q.RurU.%V.....Y
     b41:	22 b2 1f f9 f1 9b 83 20 13 42 29 ba 30 32 39 aa     "...... .B).029.
     b51:	40 22 49 9a 50 12 59 8a 60 6b 72 7e 7c 10 8f af     @"I.P.Y.`kr~|...
     b61:	00 5a 24 b1 9f f8 f1 f9 c1 cd 58 8d 58 51 1c 55     .Z$.......X.XQ.U
     b71:	58 31 e3 62 c6 c5 8c eb 82 08 63 08 45 ea 46 0e     X1.b......c.E.F.
     b81:	0e e2 f1 16 00 5b 0e a8 1f f4 31 32 99 da ff 7f     .....[....12....
     b91:	65 0f 02 5c 1b ac 1f f6 71 2d 3a 39 3a 39 3a 39     e..\....q-:9:9:9
     ba1:	3a 39 3a 39 3a 39 3a 39 3a 39 2a 8f 0b 00 5d 0e     :9:9:9:9:9*...].
     bb1:	a8 1f f4 31 b2 da ff ff c4 1e 04 00 5e 19 af 9f     ...1........^...
     bc1:	f7 f1 99 b4 30 2d a9 88 a4 88 a0 90 9c 90 98 2a     ....0-.........*
     bd1:	31 79 fc bf 01 5f 0d ac 1f f6 f1 ff 7f 7c f0 60     1y..._.......|.`
     be1:	18 00 60 0e a7 9f f3 51 0f 4d 4d 89 c9 e3 ef 00     ..`....Q.MM.....
     bf1:	61 1f af 9f f7 f1 7f 71 10 46 43 c4 48 8a b4 6e     a......q.FC.H..n
     c01:	82 88 86 11 0d 11 0d 11 4d c9 89 cd 3c 9e 00 62     ........M...<..b
     c11:	21 b1 9f f8 f1 b1 35 bf a8 b3 99 2a 62 36 44 46     !.....5....*b6DF
     c21:	43 46 43 46 43 46 43 36 44 45 54 34 15 72 8f 0f     CFCFCFC6DET4.r..
     c31:	63 1c ae 1f f7 f1 bf 3b 08 1a 22 21 22 19 13 21     c......;.."!"..!
     c41:	e5 96 2e 84 2e 86 48 ea 20 1e d7 00 64 24 b1 9f     ......H. ...d$..
     c51:	f8 f1 2b 6b be ab a0 9a 31 22 2a 1a a3 21 a3 21     ..+k....1"*..!.!
     c61:	a3 21 a3 21 23 1a 23 22 aa 9a b1 ab b0 c7 5b 00     .!.!#.#"......[.
     c71:	65 1d af 9f f7 f1 7f 64 37 34 c4 66 6c 84 8c e2     e......d74.fl...
     c81:	e0 82 96 98 2e 86 2e 88 48 ee 1e 8f 00 66 18 ac     ........H....f..
     c91:	1f f6 f1 c4 68 84 66 84 8d 0c 21 d9 81 14 21 ff     ....h.f...!...!.
     ca1:	d9 41 3c 8e 00 67 27 af 9f f7 f1 bf 9d 3a 98 21     .A<..g'......:.!
     cb1:	21 62 43 44 43 44 43 c4 84 ec 4e 78 f8 60 ec 80     !bCDCDC...Nx.`..
     cc1:	e8 a0 46 6e 44 52 64 4e e8 60 06 00 68 15 b2 1f     ..FnDRdN.`..h...
     cd1:	f9 f1 1b 73 7e 52 47 71 56 53 c5 ff bf 79 8f 2f     ...s~RGqVS...y./
     ce1:	00 69 13 a9 9f f4 31 16 a3 22 93 87 b3 e2 7f 73     .i....1..".....s
     cf1:	10 8f 05 00 6a 15 ab 9f f5 71 2b 48 47 28 0f 6d     ....j....q+HG(.m
     d01:	c7 ff 37 22 43 22 53 64 00 6b 24 b1 9f f8 f1 b1     ..7"C"Sd.k$.....
     d11:	35 3f 39 22 1a 23 92 a3 11 24 91 3c 88 3c 10 24     5?9".#...$.<.<.$
     d21:	a1 a3 21 23 a2 62 72 10 71 10 8f a7 00 6c 0e a9     ..!#.br.q....l..
     d31:	9f f4 b1 b4 e2 ff df 1c c4 63 01 6d 28 b9 9f fc     .........c.m(...
     d41:	f1 ff 7f 60 42 44 47 61 62 56 62 52 45 c4 8a 88     ...`BDGabVbRE...
     d51:	15 11 2b 22 56 44 ac 88 58 11 b1 22 62 73 62 72     ..+"VD..X.."bsbr
     d61:	8f 3f 03 6e 14 b2 1f f9 f1 ff 99 49 1d c5 59 4d     .?.n.......I..YM
     d71:	15 ff ff e6 3d be 00 6f 1e af 9f f7 f1 7f 64 37     ....=..o......d7
     d81:	34 c4 66 6c 84 8c 82 8c 82 8c 82 8c 64 6c 86 88     4.fl........dl..
     d91:	68 9d 3d 5e 01 70 24 b1 9f f8 f1 ff d2 a2 ce 66     h.=^.p$........f
     da1:	8a 11 d9 10 19 0d 19 0d 19 0d 19 0d d9 50 11 91     .............P..
     db1:	cd 14 45 1d 35 b7 07 91 00 71 24 b0 1f f8 f1 ff     ..E.5....q$.....
     dc1:	a2 28 88 64 42 86 8a 66 8c 84 8c 84 8c 84 8c 84     .(.dB..f........
     dd1:	8c 66 8c 86 a8 68 c6 ac 82 98 a7 07 01 72 16 ac     .f...h.......r..
     de1:	1f f6 f1 2f 4d 66 28 4a 2a 48 68 64 08 f9 d9 41     .../Mf(J*Hhd...A
     df1:	3c 8e 00 73 1f ab 9f f5 f1 e7 15 31 32 23 52 22     <..s.......12#R"
     e01:	53 21 56 07 32 07 52 16 61 13 62 12 43 22 11 f6     S!V.2.R.a.b.C"..
     e11:	58 03 74 17 aa 1f f5 f1 20 50 dd 18 d1 81 0c 19     X.t..... P......
     e21:	7f 13 42 13 63 45 8f 1d 00 75 15 b2 1f f9 f1 ff     ..B.cE...u......
     e31:	d9 89 15 ff ff aa a6 ec 82 ae c4 1e 5f 00 76 1f     ............_.v.
     e41:	b1 9f f8 f1 ff f2 20 a6 86 2e 8c 4a 8c 2a 90 46     ...... ....J.*.F
     e51:	90 26 94 42 94 22 b8 98 7c 5c 1e df 00 77 2f b8     .&.B."..|\...w/.
     e61:	1f fc f1 ff bf 39 08 31 a9 a1 a2 8a 62 15 46 63     .....9.1....b.Fc
     e71:	23 46 13 41 13 47 13 41 13 48 21 42 21 48 11 43     #F.A.G.A.H!B!H.C
     e81:	11 5a 54 4a 45 3c 36 2c 27 8f bf 03 78 21 b2 1f     .ZTJE<6,'...x!..
     e91:	f9 f1 ff d9 41 4c 51 95 5c 8d 64 85 ac 35 3d 00     ....ALQ.\.d..5=.
     ea1:	b5 ad 44 a5 4c 9d 54 51 cd 41 3c be 00 79 24 b1     ..D.L.TQ.A<..y$.
     eb1:	9f f8 f1 ff f2 c6 86 4c 8c 2a 8e 48 90 26 92 44     .......L.*.H.&.D
     ec1:	94 22 d6 98 9a 7c 5c 1e 40 52 28 92 44 f2 96 18     ."...|\.@R(.D...
     ed1:	00 7a 1f ac 1f f6 f1 2f 0f 28 86 28 84 2a 82 4a     .z...../.(.(.*.J
     ee1:	62 ea d8 d5 84 14 45 14 49 10 4d 1c d0 e3 02 00     b.....E.I.M.....
     ef1:	7b 13 a8 1f f4 b1 1b 92 da af d4 89 4d ed 33 b9     {...........M.3.
     f01:	79 10 00 7c 0d af 9f f7 f1 d9 f0 fe ff 3d 9e 01     y..|.........=..
     f11:	7d 14 a8 1f f4 31 9a 13 9b da 67 72 52 52 fb 95     }....1....grRR..
     f21:	d0 3c 14 00 7e 15 af 9f f7 f1 ff 9b a9 28 93 99     .<..~........(..
     f31:	83 9a 11 ab a8 79 fc 23 00 a0 09 a7 9f f3 f1 ff     .....y.#........
     f41:	10 00 a1 14 a7 9f f3 f1 68 a6 a4 66 1e 28 2c 6a     ........h..f.(,j
     f51:	68 6f 4a da 8c 00 a2 24 ae 1f f7 f1 5f 04 07 9a     hoJ....$...._...
     f61:	cd 30 a9 99 89 90 21 89 23 89 a3 08 a4 88 24 8b     .0....!.#.....$.
     f71:	21 0b a2 91 8a b0 8a c7 1d 00 a3 25 af 9f f7 f1     !..........%....
     f81:	59 21 89 dc 08 15 09 15 8d 18 2d cb 83 41 5a c6     Y!........-..AZ.
     f91:	ab 42 ac 24 44 0e 26 44 0e 64 66 ea f1 06 00 a4     .B.$D.&D.df.....
     fa1:	23 ae 1f f7 f1 cf 44 48 44 0e 6a 0e 86 d6 8c 8d     #.....DHD.j.....
     fb1:	8c 8d 8c 8d 8c cd 0c 0d 1d cc 1c 94 88 90 c8 e3     ................
     fc1:	4b 00 a5 2b b3 9f f9 f1 cb 03 99 93 3a a9 3a b1     K..+........:.:.
     fd1:	2a b9 2a c1 1a c9 1a d1 0a d9 83 c8 83 5a 7a 00     *.*..........Zz.
     fe1:	da 83 5a 7a 00 7a 00 72 db 83 79 7c 0a a6 0f ae     ..Zz.z.r..y|....
     ff1:	1f f7 f1 c1 ec be c7 70 76 bf c7 03 a7 29 ad 9f     .......pv....)..
    1001:	f6 f1 ae 2e 66 4a 66 4a 46 8c b4 f0 2a a6 46 8a     ....fJfJF...*.F.
    1011:	64 6a 84 4a a6 46 c8 22 ae 74 56 4c 28 6a 28 6a     dj.J.F.".tVL(j(j
    1021:	26 ae 1e 39 00 a8 10 ac 1f f6 71 2e 24 43 c2 8d     &..9......q.$C..
    1031:	90 3c fe 7f 05 a9 36 b5 9f fa f1 d7 c7 07 84 74     .<....6........t
    1041:	64 b2 52 42 36 42 22 33 ba 0a 12 11 19 15 11 19     d.RB6B"3........
    1051:	15 11 19 15 11 19 15 91 99 8a 51 42 13 23 24 54     ..........QB.#$T
    1061:	24 25 2b 46 47 78 40 7c 8f df 01 aa 16 aa 1f f5     $%+FGx@|........
    1071:	71 42 25 32 28 64 a3 c9 d0 c4 3c dc 41 3c fe 16     qB%2(d....<.A<..
    1081:	00 ab 17 ad 9f f6 f1 7f 36 32 34 32 34 32 34 32     ........62424242
    1091:	36 32 36 32 36 32 8f 1f ac 10 ad 9f f6 f1 7f 73     626262.........s
    10a1:	40 72 40 ab 7b fc 1a 00 ad 0c a8 1f f4 f1 97 26     @r@.{..........&
    10b1:	ee f1 0c 00 ae 38 b5 9f fa f1 d7 c7 07 84 74 64     .....8........td
    10c1:	b2 52 22 47 6a 74 24 23 24 22 24 23 24 22 64 25     .R"Gjt$#$"$#$"d%
    10d1:	22 24 21 26 22 24 22 25 22 24 22 25 a3 23 11 92     "$!&"$"%"$"%.#..
    10e1:	11 29 59 31 3a c2 03 e2 7b fc 0e 00 af 0e aa 1f     .)Y1:...{.......
    10f1:	f5 71 7b 10 72 10 8f ff 67 00 b0 14 a9 9f f4 b1     .q{.r...g.......
    1101:	25 12 51 24 21 24 21 24 a2 88 1e ff 18 00 b1 17     %.Q$!$!$........
    1111:	ae 1f f7 f1 bf 14 56 77 50 72 50 27 ac 1e ec a0     ......VwPrP'....
    1121:	e4 a0 1e 4f 01 b2 14 a8 1f f4 31 2a 11 99 90 91     ...O......1*....
    1131:	90 91 9a d2 4d c4 7b 7c 07 b3 18 a8 1f f4 31 2a     ....M.{|......1*
    1141:	11 99 90 11 93 12 22 1b 93 90 91 10 19 a9 c7 87     ......".........
    1151:	00 b4 0d a7 9f f3 51 0a cd 0c a9 c7 3f 01 b5 1e     ......Q.....?...
    1161:	b2 1f f9 f1 ff d9 cd 0d 15 ff 7f 55 53 75 10 41     ...........USu.A
    1171:	15 42 62 23 0f 21 0f 40 4e 0f 20 0e b6 34 b2 1f     .Bb#.!.@N. ..4..
    1181:	f9 f1 bb 03 9b 83 90 a9 83 90 a1 03 91 a1 03 91     ................
    1191:	a1 03 91 a9 83 90 a9 83 90 39 93 d1 91 d1 91 d1     .........9......
    11a1:	91 d1 91 d1 91 d1 91 d1 91 d1 91 c1 83 7a 7c 01     .............z|.
    11b1:	b7 0b a7 9f f3 f1 93 a1 ed 71 0c b8 0d a7 9f f3     .........q......
    11c1:	f1 3f 88 8a 5a 25 42 02 b9 0e a8 1f f4 b1 12 22     .?..Z%B........"
    11d1:	d3 1f d9 e3 43 00 ba 17 ab 9f f5 71 3a 26 23 b3     ....C......q:&#.
    11e1:	64 66 64 66 46 d9 3c f0 81 3c fe 25 00 bb 18 ad     dfdfF.<..<.%....
    11f1:	9f f6 f1 7f 33 32 36 32 36 32 36 32 34 32 34 32     ....326262624242
    1201:	34 32 8f df 00 bc 34 b5 9f fa f1 97 ca 28 05 55     42....4......(.U
    1211:	ca 89 ca 89 8a c9 4a 09 4b c9 c8 09 c9 cc c9 08     ......J.K.......
    1221:	4d 59 c8 d0 ca 48 88 0a 85 88 ca 88 48 ca 28 14     MY...H......H.(.
    1231:	3a 10 93 94 93 a4 c7 6f 00 bd 33 b5 9f fa f1 97     :......o..3.....
    1241:	ca 28 05 55 ca 89 ca 89 8a c9 4a 09 4b 49 94 09     .(.U......J.KI..
    1251:	89 84 4c c9 88 c8 c8 58 88 c8 48 ca 0d aa 94 93     ..L....X..H.....
    1261:	94 93 94 93 09 13 bb 92 bb c7 4f 00 be 3a b5 9f     ..........O..:..
    1271:	fa f1 77 85 52 22 73 52 32 62 b2 52 b2 62 92 63     ..w.R"sR2b.R.b.c
    1281:	c2 42 e2 32 8a 64 44 64 86 44 26 84 a6 4a 64 22     .B.2.dDd.D&..Jd"
    1291:	64 65 24 44 65 44 44 65 44 24 65 14 0a 1d 88 49     de$DeDDeD$e....I
    12a1:	ca 49 d2 e3 37 00 bf 19 ad 9f f6 f1 cf 27 0b 2b     .I..7........'.+
    12b1:	e7 d1 c9 8a 4a 6e c9 48 86 09 0d 1b 31 1b 00 c0     ....Jn.H....1...
    12c1:	36 b3 9f b9 e4 41 e6 41 e6 41 e6 61 e4 91 c9 83     6....A.A.A.a....
    12d1:	c8 43 d0 03 90 47 50 47 10 8b d0 c6 d0 c6 90 0a     .C...GPG........
    12e1:	51 46 51 1e 0c 8a d1 c5 d1 c5 91 09 12 0d 92 1c     QFQ.............
    12f1:	1d c4 e3 2b 00 c1 36 b3 9f b9 e5 21 e6 01 e6 01     ...+..6....!....
    1301:	e4 21 e4 91 c9 83 c8 43 d0 03 90 47 50 47 10 8b     .!.....C...GPG..
    1311:	d0 c6 d0 c6 90 0a 51 46 51 1e 0c 8a d1 c5 d1 c5     ......QFQ.......
    1321:	91 09 12 0d 92 1c 1d c4 e3 2b 00 c2 35 b3 9f f9     .........+..5...
    1331:	a1 e5 21 c8 45 84 85 e4 d1 c8 83 c8 43 d0 03 90     ..!.E.......C...
    1341:	47 50 47 10 8b d0 c6 d0 c6 90 0a 51 46 51 1e 0c     GPG........QFQ..
    1351:	8a d1 c5 d1 c5 91 09 12 0d 92 1c 1d c4 e3 2b 00     ..............+.
    1361:	c3 33 b3 9f f9 b1 98 89 bd 8d 99 47 24 0f 22 0f     .3.........G$.".
    1371:	41 0f 40 1e 41 1d 41 2c 42 1b 43 1b 43 2a 44 19     A.@.A.A,B.C.C*D.
    1381:	45 79 30 28 46 17 47 17 47 26 48 34 48 72 74 10     Ey0(F.G.G&H4Hrt.
    1391:	8f af 00 c4 34 b3 9f f9 41 47 66 47 66 47 e6 b1     ....4...AGfGfG..
    13a1:	93 07 91 87 a0 07 20 8f a0 8e 20 16 a1 8d a1 8d     ...... ... .....
    13b1:	21 15 a2 8c a2 3c 18 14 a3 8b a3 8b 23 13 24 1a     !....<......#.$.
    13c1:	24 39 3a 88 c7 57 00 c5 35 b3 9f 19 c9 45 a4 83     $9:..W..5....E..
    13d1:	a2 45 c4 e9 51 c9 83 c8 43 d0 03 90 47 50 47 10     .E..Q...C...GPG.
    13e1:	8b d0 c6 d0 c6 90 0a 51 46 51 1e 0c 8a d1 c5 d1     .......QFQ......
    13f1:	c5 91 09 12 0d 92 1c 1d c4 e3 2b 00 c6 42 ba 1f     ..........+..B..
    1401:	fd f1 5f 1f 1c 90 4a 90 8d 4a d0 49 8a 10 46 8a     .._...J..J.I..F.
    1411:	10 06 ca 10 c5 04 ca 10 c5 0a d1 c8 0a 1d 88 4a     ...............J
    1421:	d1 88 1e 10 45 8a 11 45 8a 11 06 c9 11 06 c9 11     ....E..E........
    1431:	c6 08 d2 89 0c 92 4d 18 1d 1c c4 e3 6f 01 c7 2c     ......M.....o..,
    1441:	b3 9f f9 f1 17 27 62 44 45 84 43 94 32 a4 32 b4     .....'bDE.C.2.2.
    1451:	21 b5 21 e5 bd 07 a0 8d a1 0d a2 8c a2 8c a3 12     !.!.............
    1461:	3d 8f 07 99 07 99 07 11 27 04 c8 36 b2 1f b9 e4     =.......'..6....
    1471:	21 e6 21 e6 41 e4 41 e4 61 0f 0e a2 b8 93 22 8c     !.!.A.A.a.....".
    1481:	22 8c 22 8a 89 22 8a a4 91 3c 90 a4 91 24 8a 24     ".".."...<...$.$
    1491:	8a 24 8c 22 8c 22 8c a2 93 62 73 70 10 8f 4f 00     .$."."...bsp..O.
    14a1:	c9 34 b2 1f 99 e5 01 c6 c7 e5 01 e4 81 0f 0e a2     .4..............
    14b1:	b8 93 22 8c 22 8c 22 8a 89 22 8a a4 91 3c 90 a4     ..".".".."...<..
    14c1:	91 24 8a 24 8a 24 8c 22 8c 22 8c a2 93 62 73 70     .$.$.$."."...bsp
    14d1:	10 8f 4f 00 ca 35 b2 1f f9 61 e5 01 a8 45 64 85     ..O..5...a...Ed.
    14e1:	e4 21 0f 0e a2 b8 93 22 8c 22 8c 22 8a 89 22 8a     .!....."."."..".
    14f1:	a4 91 3c 90 a4 91 24 8a 24 8a 24 8c 22 8c 22 8c     ..<...$.$.$.".".
    1501:	a2 93 62 73 70 10 8f 4f 00 cb 34 b2 1f f9 01 47     ..bsp..O..4....G
    1511:	46 47 46 47 e6 11 1f 1c 44 71 27 45 18 45 18 45     FGFG....Dq'E.E.E
    1521:	14 13 45 14 49 23 79 20 49 23 49 14 49 14 49 18     ..E.I#y I#I.I.I.
    1531:	45 18 45 18 45 27 c5 e6 e0 20 1e 9f 00 cc 12 aa     E.E.E'... ......
    1541:	1f 35 04 57 2a 3f 08 22 e3 ff 8f 0e e2 31 03 cd     .5.W*?.".....1..
    1551:	15 aa 1f f5 e4 c6 c6 e4 e4 21 0e 82 c8 f8 ff a3     .........!......
    1561:	83 78 cc 00 ce 15 aa 1f d5 e5 a8 44 64 84 84 0f     .x.........Dd...
    1571:	82 c8 f8 ff a3 83 78 cc 00 cf 13 aa 1f 75 47 f6     ......x......uG.
    1581:	1e ee 20 88 8c ff 3f 3a 88 c7 0c 00 d0 29 b4 1f     .. ...?:.....)..
    1591:	fa f1 17 07 a5 44 84 64 bc a3 a2 a3 a2 2b a2 2b     .....D.d.....+.+
    15a1:	39 10 2a a2 2b a2 2b a2 2b a2 a3 a2 a3 22 e3 11     9.*.+.+.+...."..
    15b1:	d9 41 3d 7e 02 d1 39 b6 1f fb 31 9c 09 3f 8f 99     .A=~..9...1..?..
    15c1:	47 61 77 54 38 57 18 68 17 78 16 18 61 15 18 62     GawT8W.h.x..a..b
    15d1:	14 18 53 14 18 54 13 18 55 12 18 65 11 18 76 18     ..S..T..U..e..v.
    15e1:	67 18 58 18 49 18 3a 37 2a 75 19 8f 5f 02 d2 34     g.X.I.:7*u.._..4
    15f1:	b5 9f da e4 81 e6 81 e6 a1 e4 a1 e4 d1 1d d3 10     ................
    1601:	d2 91 d1 51 51 12 51 d2 54 96 54 96 54 96 54 96     ...QQ.Q.T.T.T.T.
    1611:	54 96 54 d6 50 12 51 52 d1 91 d1 11 d2 10 df e3     T.T.P.QR........
    1621:	77 00 d3 33 b5 9f fa d1 c8 c3 cc 83 c8 c3 c8 23     w..3...........#
    1631:	3c a6 21 a4 23 a3 a3 a2 24 a2 a4 a9 2c a9 2c a9     <.!.#...$...,.,.
    1641:	2c a9 2c a9 2c a9 ac a1 24 a2 a4 a2 23 a3 23 a4     ,.,.,...$...#.#.
    1651:	21 be c7 ef 00 d4 34 b5 9f fa 51 c8 c3 d0 43 88     !.....4...Q...C.
    1661:	88 0b c9 23 3a a6 21 a4 23 a3 a3 a2 24 a2 a4 a9     ...#:.!.#...$...
    1671:	2c a9 2c a9 2c a9 2c a9 2c a9 ac a1 24 a2 a4 a2     ,.,.,.,.,...$...
    1681:	23 a3 23 a4 21 be c7 ef 00 d5 31 b5 9f fa 31 9b     #.#.!.....1...1.
    1691:	89 be 8e 99 47 75 4c 43 48 47 46 47 45 49 44 49     ....GuLCHGFGEIDI
    16a1:	53 59 52 59 52 59 52 59 52 59 52 59 43 49 44 49     SYRYRYRYRYRYCIDI
    16b1:	45 47 46 47 48 43 7c 8f df 01 d6 32 b5 9f fa 81     EGFGHC|....2....
    16c1:	67 86 67 86 67 e6 31 3d a6 21 a4 23 a3 a3 a2 24     g.g.g.1=.!.#...$
    16d1:	a2 a4 a9 2c a9 2c a9 2c a9 2c a9 2c a9 ac a1 24     ...,.,.,.,.,...$
    16e1:	a2 a4 a2 23 a3 23 a4 21 be c7 ef 00 d7 1e ae 1f     ...#.#.!........
    16f1:	f7 f1 5f 09 8a 8c cd 0c 4d 8d cc 59 92 52 da 8d     .._.....M..Y.R..
    1701:	4c 0d cd 8c 8d 08 ca e3 29 00 d8 34 b5 9f fa f1     L.......)..4....
    1711:	d7 47 62 34 14 52 74 64 74 54 74 46 64 12 34 55     .Gb4.RtdtTtFd.4U
    1721:	22 8d 64 4a 6a 84 4a 4a a4 4a 2a c4 4a ee 6a 0a     ".dJj.JJ.J*.J.j.
    1731:	89 28 89 ea 88 ec 68 64 58 85 dd e3 77 00 d9 37     .(....hdX...w..7
    1741:	b5 9f fa e4 81 e6 81 e6 a1 e4 a1 e4 11 1c 04 1d     ................
    1751:	11 8e 51 c6 51 c6 51 c6 51 c6 51 c6 51 c6 51 c6     ..Q.Q.Q.Q.Q.Q.Q.
    1761:	51 c6 51 c6 51 c6 51 c6 51 c6 51 06 d2 45 da cc     Q.Q.Q.Q.Q.Q..E..
    1771:	1e c4 e3 77 00 da 37 b5 9f da e5 61 e6 41 e6 41     ...w..7....a.A.A
    1781:	e4 61 e4 51 1c 04 1d 11 8e 51 c6 51 c6 51 c6 51     .a.Q.....Q.Q.Q.Q
    1791:	c6 51 c6 51 c6 51 c6 51 c6 51 c6 51 c6 51 c6 51     .Q.Q.Q.Q.Q.Q.Q.Q
    17a1:	c6 51 06 d2 45 da cc 1e c4 e3 77 00 db 37 b5 9f     .Q..E.....w..7..
    17b1:	fa 51 c8 c3 d0 43 88 88 0b c9 43 1f 04 1d 11 8e     .Q...C....C.....
    17c1:	51 c6 51 c6 51 c6 51 c6 51 c6 51 c6 51 c6 51 c6     Q.Q.Q.Q.Q.Q.Q.Q.
    17d1:	51 c6 51 c6 51 c6 51 c6 51 06 d2 45 da cc 1e c4     Q.Q.Q.Q.Q..E....
    17e1:	e3 77 00 dc 35 b5 9f fa 81 67 86 67 86 67 e6 31     .w..5....g.g.g.1
    17f1:	3a 08 3a 22 1c a3 8c a3 8c a3 8c a3 8c a3 8c a3     :.:"............
    1801:	8c a3 8c a3 8c a3 8c a3 8c a3 8c a3 8c a3 0c a4     ................
    1811:	8b b4 99 3d 88 c7 ef 00 dd 27 b2 1f b9 e5 01 c6     ...=.....'......
    1821:	c7 e5 01 e4 41 0f 82 4c 08 a5 c8 c4 c8 e4 88 04     ....A..L........
    1831:	89 24 49 44 49 64 8d ad c9 f9 f1 41 3c be 02 de     .$IDId.....A<...
    1841:	23 b2 1f f9 f1 a3 03 59 72 e6 07 74 44 55 5c 15     #......Yr..tDU\.
    1851:	51 15 51 15 51 15 51 31 aa 3a 18 24 67 7c 20 8f     Q.Q.Q.Q1.:.$g| .
    1861:	0f 01 df 28 b0 1f f8 f1 ad 21 09 d9 10 3f 9a a2     ...(.....!...?..
    1871:	19 a3 a0 23 62 45 43 45 43 45 43 45 43 45 43 45     ...#bECECECECECE
    1881:	43 35 44 11 42 62 51 8f 97 00 e0 24 af 9f f7 f1     C5D.BbQ....$....
    1891:	91 f4 6a 71 79 b8 83 30 1a 22 46 52 a4 75 13 44     ..jqy..0."FR.u.D
    18a1:	34 8c 68 88 68 88 68 4a 4e 6c e6 f1 04 00 e1 24     4.h.h.hJNl.....$
    18b1:	af 9f f7 f1 9d f0 ec b0 7a d0 83 30 1a 22 46 52     ........z..0."FR
    18c1:	a4 75 13 44 34 8c 68 88 68 88 68 4a 4e 6c e6 f1     .u.D4.h.h.hJNl..
    18d1:	04 00 e2 26 af 9f f7 f1 59 f4 6c a5 8c 9c 94 3c     ...&....Y.l....<
    18e1:	d4 41 18 0d 11 23 29 d2 ba 09 22 1a 46 34 44 34     .A...#)...".F4D4
    18f1:	44 34 25 27 36 f3 78 02 e3 25 af 9f f7 f1 a3 99     D4%'6.x..%......
    1901:	b8 bb 98 79 74 07 61 34 44 8c a4 48 eb 26 88 68     ...yt.a4D..H.&.h
    1911:	18 d1 10 d1 10 d1 94 9c d8 cc e3 09 00 e4 26 af     ..............&.
    1921:	9f f7 f1 93 99 b1 99 b1 99 79 54 07 61 34 44 8c     .........yT.a4D.
    1931:	a4 48 eb 26 88 68 18 d1 10 d1 10 d1 94 9c d8 cc     .H.&.h..........
    1941:	e3 09 00 e5 27 af 9f f7 f1 d5 ac 84 68 4c a8 84     ....'.......hL..
    1951:	ec 3c e0 41 18 0d 11 23 29 d2 ba 09 22 1a 46 34     .<.A...#)...".F4
    1961:	44 34 44 34 25 27 36 f3 78 02 e6 2a b7 9f fb f1     D4D4%'6.x..*....
    1971:	ff 5f 9e 98 91 18 2d 2a a2 19 22 9b 2c a3 9a 38     ._....-*..".,..8
    1981:	38 a1 a1 25 a2 25 aa 0b 21 aa 0b 29 91 20 12 b2     8..%.%..!..). ..
    1991:	ba c7 cf 01 e7 1f ae 1f f7 f1 bf 3b 08 1a 22 21     ...........;.."!
    19a1:	22 19 13 21 e5 96 2e 84 2e 86 48 ea 20 32 78 b1     "..!......H. 2x.
    19b1:	24 19 00 e8 21 af 9f f7 f1 91 f4 6a 71 79 50 bb     $...!......jqyP.
    19c1:	a1 21 36 63 23 64 14 07 17 b4 c4 74 31 74 41 44     .!6c#d.....t1tAD
    19d1:	72 f7 78 04 e9 21 af 9f f7 f1 a5 f0 ec 5a 79 60     r.x..!.......Zy`
    19e1:	bb a1 21 36 63 23 64 14 07 17 b4 c4 74 31 74 41     ..!6c#d.....t1tA
    19f1:	44 72 f7 78 04 ea 24 af 9f f7 f1 59 f4 6c a5 8c     Dr.x..$....Y.l..
    1a01:	9c 94 3c a0 dd d0 10 9b b1 11 32 8a 83 0b 5a 62     ..<.......2...Zb
    1a11:	ba 18 ba 20 22 b9 7b 3c 02 eb 23 af 9f f7 f1 9b     ... ".{<..#.....
    1a21:	65 33 63 33 f3 e8 ec 86 86 d8 8c 8d 90 51 1c 5c     e3c3.........Q.\
    1a31:	d0 12 d3 c5 d0 05 11 c9 dd e3 11 00 ec 12 a9 9f     ................
    1a41:	f4 31 95 5b 27 28 6c c5 ff e6 20 1e 0b 00 ed 13     .1.['(l... .....
    1a51:	a9 9f f4 b1 16 9b 1a 53 0f 60 c5 ff e6 20 1e 0b     .......S.`... ..
    1a61:	00 ee 14 a9 9f f4 b1 8e 9b aa 51 21 25 69 c5 ff     ..........Q!%i..
    1a71:	e6 20 1e 0b 00 ef 15 a9 9f f4 71 33 32 31 32 31     . ........q32121
    1a81:	32 0f 64 c5 ff e6 20 1e 0b 00 f0 27 af 9f f7 f1     2.d... ....'....
    1a91:	81 3c c0 c8 24 2d a5 cc f4 e0 41 d4 d0 10 9b b1     .<..$-....A.....
    1aa1:	11 32 0a 32 0a 32 0a 32 92 b1 19 22 a2 75 f6 78     .2.2.2.2...".u.x
    1ab1:	05 f1 1a b2 1f f9 f1 c7 33 a1 a7 31 f3 a8 4d ea     ........3..1..M.
    1ac1:	28 ce 6a aa f8 ff 37 ef f1 05 00 f2 23 af 9f f7     (.j...7.....#...
    1ad1:	f1 91 f4 6a 71 79 50 bb a1 21 36 63 23 64 14 64     ...jqyP..!6c#d.d
    1ae1:	14 64 14 64 24 63 33 44 44 eb ec f1 0a 00 f3 23     .d.d$c3DD......#
    1af1:	af 9f f7 f1 a5 f0 ec ac b0 3c b0 dd d0 10 9b b1     .........<......
    1b01:	11 32 0a 32 0a 32 0a 32 92 b1 19 22 a2 75 f6 78     .2.2.2.2...".u.x
    1b11:	05 f4 25 af 9f f7 f1 59 f4 6c a5 8c 9c 94 3c a0     ..%....Y.l....<.
    1b21:	dd d0 10 9b b1 11 32 0a 32 0a 32 0a 32 92 b1 19     ......2.2.2.2...
    1b31:	22 a2 75 f6 78 05 f5 24 af 9f f7 f1 ab 99 b8 bb     ".u.x..$........
    1b41:	98 79 94 76 43 43 6c c6 46 c8 28 c8 28 c8 28 c8     .y.vCCl.F.(.(.(.
    1b51:	48 c6 66 88 88 d6 d9 e3 15 00 f6 25 af 9f f7 f1     H.f........%....
    1b61:	93 99 b1 99 b1 99 79 84 76 43 43 6c c6 46 c8 28     ......y.vCCl.F.(
    1b71:	c8 28 c8 28 c8 48 c6 66 88 88 d6 d9 e3 15 00 f7     .(.(.H.f........
    1b81:	13 ae 1f f7 f1 9f 0a ab 47 75 50 72 50 8f 4a 58     ........GuPrP.JX
    1b91:	3d 3e f8 29 af 9f f7 f1 6f c3 a3 03 cf 86 86 d8     =>.)....o.......
    1ba1:	0c 45 8c 10 45 b0 09 a1 a0 09 a1 20 89 21 19 89     .E..E...... .!..
    1bb1:	99 a9 21 a2 99 b3 8c 0e 8f 47 0b f9 1f b2 1f f9     ..!......G......
    1bc1:	f1 4b 79 88 79 88 79 08 79 10 79 d0 9b 1b 2a fe     .Ky.y.y.y.y...*.
    1bd1:	ff aa a6 ec 82 ae c4 1e 5f 00 fa 1e b2 1f f9 f1     ........_.......
    1be1:	63 79 80 f1 79 00 79 00 79 e8 9b 1b 2a fe ff aa     cy..y.y.y...*...
    1bf1:	a6 ec 82 ae c4 1e 5f 00 fb 1e b2 1f f9 f1 db 78     ......_........x
    1c01:	88 f1 62 19 51 29 79 c0 9b 1b 2a fe ff aa a6 ec     ..b.Q)y...*.....
    1c11:	82 ae c4 1e 5f 00 fc 1c b2 1f f9 f1 a7 33 93 33     ...._........3.3
    1c21:	93 33 f3 68 6f 6e a8 f8 ff ab 9a b2 0b ba 12 7b     .3.hon.........{
    1c31:	7c 01 fd 28 b1 9f f8 f1 3b f1 e9 71 f5 a0 37 36     |..(....;..q..76
    1c41:	64 62 54 71 44 82 34 91 24 a2 14 b1 c6 d4 e4 e3     dbTqD.4.$.......
    1c51:	f2 00 92 42 91 24 92 b7 c4 00 fe 25 b1 9f f8 f1     ...B.$.....%....
    1c61:	b1 35 bf a8 b3 99 62 44 36 44 46 43 46 43 46 43     .5....bD6DFCFCFC
    1c71:	46 43 36 54 44 64 33 45 51 47 cd ed 41 24 00 ff     FC6TDd3EQG..A$..
    1c81:	29 b1 9f f8 f1 37 0b 67 06 67 e6 11 de d8 90 89     )....7.g.g......
    1c91:	51 c5 11 09 d2 44 92 88 52 c4 1a 53 93 8f cb 03     Q....D..R..S....
    1ca1:	48 0a 45 92 48 de 12 03 00 00 00                    H.E.H......

00001cac <__ctors_end>:
    1cac:	11 24       	eor	r1, r1
    1cae:	1f be       	out	0x3f, r1	; 63
    1cb0:	cf ef       	ldi	r28, 0xFF	; 255
    1cb2:	cd bf       	out	0x3d, r28	; 61
    1cb4:	df e5       	ldi	r29, 0x5F	; 95
    1cb6:	de bf       	out	0x3e, r29	; 62
    1cb8:	00 e0       	ldi	r16, 0x00	; 0
    1cba:	0c bf       	out	0x3c, r16	; 60

00001cbc <__do_copy_data>:
    1cbc:	10 e2       	ldi	r17, 0x20	; 32
    1cbe:	a0 e0       	ldi	r26, 0x00	; 0
    1cc0:	b0 e2       	ldi	r27, 0x20	; 32
    1cc2:	e4 e9       	ldi	r30, 0x94	; 148
    1cc4:	f3 e4       	ldi	r31, 0x43	; 67
    1cc6:	00 e0       	ldi	r16, 0x00	; 0
    1cc8:	0b bf       	out	0x3b, r16	; 59
    1cca:	02 c0       	rjmp	.+4      	; 0x1cd0 <__do_copy_data+0x14>
    1ccc:	07 90       	elpm	r0, Z+
    1cce:	0d 92       	st	X+, r0
    1cd0:	a0 32       	cpi	r26, 0x20	; 32
    1cd2:	b1 07       	cpc	r27, r17
    1cd4:	d9 f7       	brne	.-10     	; 0x1ccc <__do_copy_data+0x10>

00001cd6 <__do_clear_bss>:
    1cd6:	20 e2       	ldi	r18, 0x20	; 32
    1cd8:	a0 e2       	ldi	r26, 0x20	; 32
    1cda:	b0 e2       	ldi	r27, 0x20	; 32
    1cdc:	01 c0       	rjmp	.+2      	; 0x1ce0 <.do_clear_bss_start>

00001cde <.do_clear_bss_loop>:
    1cde:	1d 92       	st	X+, r1

00001ce0 <.do_clear_bss_start>:
    1ce0:	a9 3c       	cpi	r26, 0xC9	; 201
    1ce2:	b2 07       	cpc	r27, r18
    1ce4:	e1 f7       	brne	.-8      	; 0x1cde <.do_clear_bss_loop>
    1ce6:	0e 94 ea 1b 	call	0x37d4	; 0x37d4 <main>
    1cea:	0c 94 c8 21 	jmp	0x4390	; 0x4390 <_exit>

00001cee <__bad_interrupt>:
    1cee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00001cf2 <Config32MHzClock_Ext16M>:
 *
 * \return void
 */
void Config32MHzClock_Ext16M(void)
{
  OSC.XOSCCTRL = OSC_FRQRANGE_12TO16_gc |                   // Select frequency range
    1cf2:	e0 e5       	ldi	r30, 0x50	; 80
    1cf4:	f0 e0       	ldi	r31, 0x00	; 0
    1cf6:	8b ec       	ldi	r24, 0xCB	; 203
    1cf8:	82 83       	std	Z+2, r24	; 0x02
                 OSC_XOSCSEL_XTAL_16KCLK_gc;                // Select start-up time
  OSC.CTRL |= OSC_XOSCEN_bm;                                // Enable oscillator
    1cfa:	80 81       	ld	r24, Z
    1cfc:	88 60       	ori	r24, 0x08	; 8
    1cfe:	80 83       	st	Z, r24
  while ( ! (OSC.STATUS & OSC_XOSCRDY_bm) );                // Wait for oscillator is ready
    1d00:	81 81       	ldd	r24, Z+1	; 0x01
    1d02:	83 ff       	sbrs	r24, 3
    1d04:	fd cf       	rjmp	.-6      	; 0x1d00 <Config32MHzClock_Ext16M+0xe>

  OSC.PLLCTRL = OSC_PLLSRC_XOSC_gc | (OSC_PLLFAC_gm & 2);   // Select PLL source and multipl. factor
    1d06:	e0 e5       	ldi	r30, 0x50	; 80
    1d08:	f0 e0       	ldi	r31, 0x00	; 0
    1d0a:	82 ec       	ldi	r24, 0xC2	; 194
    1d0c:	85 83       	std	Z+5, r24	; 0x05
  OSC.CTRL |= OSC_PLLEN_bm;                                 // Enable PLL
    1d0e:	80 81       	ld	r24, Z
    1d10:	80 61       	ori	r24, 0x10	; 16
    1d12:	80 83       	st	Z, r24
  while ( ! (OSC.STATUS & OSC_PLLRDY_bm) );                 // Wait for PLL is ready
    1d14:	81 81       	ldd	r24, Z+1	; 0x01
    1d16:	84 ff       	sbrs	r24, 4
    1d18:	fd cf       	rjmp	.-6      	; 0x1d14 <Config32MHzClock_Ext16M+0x22>

  CCP = CCP_IOREG_gc;                                       // Security signature to modify clock
    1d1a:	88 ed       	ldi	r24, 0xD8	; 216
    1d1c:	84 bf       	out	0x34, r24	; 52
  CLK.CTRL = CLK_SCLKSEL_PLL_gc;                            // Select system clock source
    1d1e:	84 e0       	ldi	r24, 0x04	; 4
    1d20:	80 93 40 00 	sts	0x0040, r24	; 0x800040 <__TEXT_REGION_LENGTH__+0x700040>
  OSC.CTRL &= ~OSC_RC2MEN_bm;                               // Turn off 2MHz internal oscillator
    1d24:	e0 e5       	ldi	r30, 0x50	; 80
    1d26:	f0 e0       	ldi	r31, 0x00	; 0
    1d28:	80 81       	ld	r24, Z
    1d2a:	8e 7f       	andi	r24, 0xFE	; 254
    1d2c:	80 83       	st	Z, r24
  OSC.CTRL &= ~OSC_RC32MEN_bm;                              // Turn off 32MHz internal oscillator
    1d2e:	80 81       	ld	r24, Z
    1d30:	8d 7f       	andi	r24, 0xFD	; 253
    1d32:	80 83       	st	Z, r24
    1d34:	08 95       	ret

00001d36 <ucg_DrawBox>:
*/

#include "ucg.h"

void ucg_DrawBox(ucg_t *ucg, ucg_int_t x, ucg_int_t y, ucg_int_t w, ucg_int_t h)
{
    1d36:	af 92       	push	r10
    1d38:	bf 92       	push	r11
    1d3a:	cf 92       	push	r12
    1d3c:	df 92       	push	r13
    1d3e:	ef 92       	push	r14
    1d40:	ff 92       	push	r15
    1d42:	0f 93       	push	r16
    1d44:	1f 93       	push	r17
    1d46:	cf 93       	push	r28
    1d48:	df 93       	push	r29
    1d4a:	7c 01       	movw	r14, r24
    1d4c:	6b 01       	movw	r12, r22
    1d4e:	ea 01       	movw	r28, r20
    1d50:	59 01       	movw	r10, r18
  while( h > 0 )
    1d52:	10 16       	cp	r1, r16
    1d54:	11 06       	cpc	r1, r17
    1d56:	64 f4       	brge	.+24     	; 0x1d70 <ucg_DrawBox+0x3a>
    1d58:	04 0f       	add	r16, r20
    1d5a:	15 1f       	adc	r17, r21
  {
    ucg_DrawHLine(ucg, x, y, w);
    1d5c:	95 01       	movw	r18, r10
    1d5e:	ae 01       	movw	r20, r28
    1d60:	b6 01       	movw	r22, r12
    1d62:	c7 01       	movw	r24, r14
    1d64:	0e 94 e9 18 	call	0x31d2	; 0x31d2 <ucg_DrawHLine>
    h--;
    y++;
    1d68:	21 96       	adiw	r28, 0x01	; 1

#include "ucg.h"

void ucg_DrawBox(ucg_t *ucg, ucg_int_t x, ucg_int_t y, ucg_int_t w, ucg_int_t h)
{
  while( h > 0 )
    1d6a:	c0 17       	cp	r28, r16
    1d6c:	d1 07       	cpc	r29, r17
    1d6e:	b1 f7       	brne	.-20     	; 0x1d5c <ucg_DrawBox+0x26>
  {
    ucg_DrawHLine(ucg, x, y, w);
    h--;
    y++;
  }  
}
    1d70:	df 91       	pop	r29
    1d72:	cf 91       	pop	r28
    1d74:	1f 91       	pop	r17
    1d76:	0f 91       	pop	r16
    1d78:	ff 90       	pop	r15
    1d7a:	ef 90       	pop	r14
    1d7c:	df 90       	pop	r13
    1d7e:	cf 90       	pop	r12
    1d80:	bf 90       	pop	r11
    1d82:	af 90       	pop	r10
    1d84:	08 95       	ret

00001d86 <ucg_ClearScreen>:
  - clear the screen with black color
  - reset clip range to max
  - set draw color to white
*/
void ucg_ClearScreen(ucg_t *ucg)
{
    1d86:	0f 93       	push	r16
    1d88:	1f 93       	push	r17
    1d8a:	cf 93       	push	r28
    1d8c:	df 93       	push	r29
    1d8e:	ec 01       	movw	r28, r24
  ucg_SetColor(ucg, 0, 0, 0, 0);
    1d90:	00 e0       	ldi	r16, 0x00	; 0
    1d92:	20 e0       	ldi	r18, 0x00	; 0
    1d94:	40 e0       	ldi	r20, 0x00	; 0
    1d96:	60 e0       	ldi	r22, 0x00	; 0
    1d98:	0e 94 fc 18 	call	0x31f8	; 0x31f8 <ucg_SetColor>
  ucg_SetMaxClipRange(ucg);
    1d9c:	ce 01       	movw	r24, r28
    1d9e:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <ucg_SetMaxClipRange>
  ucg_DrawBox(ucg, 0, 0, ucg_GetWidth(ucg), ucg_GetHeight(ucg));
    1da2:	0b 81       	ldd	r16, Y+3	; 0x03
    1da4:	1c 81       	ldd	r17, Y+4	; 0x04
    1da6:	29 81       	ldd	r18, Y+1	; 0x01
    1da8:	3a 81       	ldd	r19, Y+2	; 0x02
    1daa:	40 e0       	ldi	r20, 0x00	; 0
    1dac:	50 e0       	ldi	r21, 0x00	; 0
    1dae:	60 e0       	ldi	r22, 0x00	; 0
    1db0:	70 e0       	ldi	r23, 0x00	; 0
    1db2:	ce 01       	movw	r24, r28
    1db4:	0e 94 9b 0e 	call	0x1d36	; 0x1d36 <ucg_DrawBox>
  ucg_SetColor(ucg, 0, 255, 255, 255);
    1db8:	0f ef       	ldi	r16, 0xFF	; 255
    1dba:	2f ef       	ldi	r18, 0xFF	; 255
    1dbc:	4f ef       	ldi	r20, 0xFF	; 255
    1dbe:	60 e0       	ldi	r22, 0x00	; 0
    1dc0:	ce 01       	movw	r24, r28
    1dc2:	0e 94 fc 18 	call	0x31f8	; 0x31f8 <ucg_SetColor>
}
    1dc6:	df 91       	pop	r29
    1dc8:	cf 91       	pop	r28
    1dca:	1f 91       	pop	r17
    1dcc:	0f 91       	pop	r16
    1dce:	08 95       	ret

00001dd0 <ucg_ccs_init>:
/*
  Setup change from "start" to "end" with a specified amount of "steps".
  After calling this procedure, ccs->current will contain the "start" value.
*/
void ucg_ccs_init(ucg_ccs_t *ccs, uint8_t start, uint8_t end, ucg_int_t steps)
{
    1dd0:	1f 93       	push	r17
    1dd2:	cf 93       	push	r28
    1dd4:	df 93       	push	r29
    1dd6:	fc 01       	movw	r30, r24
    1dd8:	16 2f       	mov	r17, r22
  ccs->start = start;
    1dda:	61 83       	std	Z+1, r22	; 0x01
  ccs->num = end-start;
    1ddc:	c4 2f       	mov	r28, r20
    1dde:	d0 e0       	ldi	r29, 0x00	; 0
    1de0:	c6 1b       	sub	r28, r22
    1de2:	d1 09       	sbc	r29, r1
    1de4:	c4 83       	std	Z+4, r28	; 0x04
    1de6:	d5 83       	std	Z+5, r29	; 0x05
  ccs->den = steps-1;
    1de8:	21 50       	subi	r18, 0x01	; 1
    1dea:	31 09       	sbc	r19, r1
    1dec:	20 87       	std	Z+8, r18	; 0x08
    1dee:	31 87       	std	Z+9, r19	; 0x09
  ccs->dir = 1;
    1df0:	81 e0       	ldi	r24, 0x01	; 1
    1df2:	90 e0       	ldi	r25, 0x00	; 0
    1df4:	82 83       	std	Z+2, r24	; 0x02
    1df6:	93 83       	std	Z+3, r25	; 0x03
  
  ccs->quot = ccs->num / ccs->den;
    1df8:	ce 01       	movw	r24, r28
    1dfa:	b9 01       	movw	r22, r18
    1dfc:	0e 94 55 1d 	call	0x3aaa	; 0x3aaa <__divmodhi4>
    1e00:	66 83       	std	Z+6, r22	; 0x06
    1e02:	77 83       	std	Z+7, r23	; 0x07
  if ( ccs->num < 0 )
    1e04:	dd 23       	and	r29, r29
    1e06:	4c f4       	brge	.+18     	; 0x1e1a <ucg_ccs_init+0x4a>
  {
    ccs->num = -ccs->num;
    1e08:	d1 95       	neg	r29
    1e0a:	c1 95       	neg	r28
    1e0c:	d1 09       	sbc	r29, r1
    1e0e:	c4 83       	std	Z+4, r28	; 0x04
    1e10:	d5 83       	std	Z+5, r29	; 0x05
    ccs->dir = -1;
    1e12:	8f ef       	ldi	r24, 0xFF	; 255
    1e14:	9f ef       	ldi	r25, 0xFF	; 255
    1e16:	82 83       	std	Z+2, r24	; 0x02
    1e18:	93 83       	std	Z+3, r25	; 0x03
  }
  ccs->rem = ccs->num % ccs->den;
    1e1a:	84 81       	ldd	r24, Z+4	; 0x04
    1e1c:	95 81       	ldd	r25, Z+5	; 0x05
    1e1e:	b9 01       	movw	r22, r18
    1e20:	0e 94 55 1d 	call	0x3aaa	; 0x3aaa <__divmodhi4>
    1e24:	82 87       	std	Z+10, r24	; 0x0a
    1e26:	93 87       	std	Z+11, r25	; 0x0b
  
  ccs->frac = ccs->den/2;
    1e28:	c9 01       	movw	r24, r18
    1e2a:	99 23       	and	r25, r25
    1e2c:	0c f4       	brge	.+2      	; 0x1e30 <ucg_ccs_init+0x60>
    1e2e:	01 96       	adiw	r24, 0x01	; 1
    1e30:	95 95       	asr	r25
    1e32:	87 95       	ror	r24
    1e34:	84 87       	std	Z+12, r24	; 0x0c
    1e36:	95 87       	std	Z+13, r25	; 0x0d
  ccs->current = start;
    1e38:	10 83       	st	Z, r17
}
    1e3a:	df 91       	pop	r29
    1e3c:	cf 91       	pop	r28
    1e3e:	1f 91       	pop	r17
    1e40:	08 95       	ret

00001e42 <ucg_ccs_step>:
/*
  Make one step towards the "end" value. 
  ccs->curront will contain the updated value.
*/
void ucg_ccs_step(ucg_ccs_t *ccs)
{
    1e42:	fc 01       	movw	r30, r24
  
  ccs->current += ccs->quot;
    1e44:	20 81       	ld	r18, Z
    1e46:	86 81       	ldd	r24, Z+6	; 0x06
    1e48:	28 0f       	add	r18, r24
    1e4a:	20 83       	st	Z, r18
  ccs->frac += ccs->rem;
    1e4c:	44 85       	ldd	r20, Z+12	; 0x0c
    1e4e:	55 85       	ldd	r21, Z+13	; 0x0d
    1e50:	82 85       	ldd	r24, Z+10	; 0x0a
    1e52:	93 85       	ldd	r25, Z+11	; 0x0b
    1e54:	84 0f       	add	r24, r20
    1e56:	95 1f       	adc	r25, r21
    1e58:	84 87       	std	Z+12, r24	; 0x0c
    1e5a:	95 87       	std	Z+13, r25	; 0x0d
  if ( ccs->frac >= ccs->den )
    1e5c:	40 85       	ldd	r20, Z+8	; 0x08
    1e5e:	51 85       	ldd	r21, Z+9	; 0x09
    1e60:	84 17       	cp	r24, r20
    1e62:	95 07       	cpc	r25, r21
    1e64:	3c f0       	brlt	.+14     	; 0x1e74 <ucg_ccs_step+0x32>
  {
    ccs->current += ccs->dir;
    1e66:	32 81       	ldd	r19, Z+2	; 0x02
    1e68:	23 0f       	add	r18, r19
    1e6a:	20 83       	st	Z, r18
    ccs->frac -= ccs->den;
    1e6c:	84 1b       	sub	r24, r20
    1e6e:	95 0b       	sbc	r25, r21
    1e70:	84 87       	std	Z+12, r24	; 0x0c
    1e72:	95 87       	std	Z+13, r25	; 0x0d
    1e74:	08 95       	ret

00001e76 <ucg_ccs_seek>:
  
  Seek to the specified "pos"ition.
  "pos" must be between 0 and "end"-1
*/
void ucg_ccs_seek(ucg_ccs_t *ccs, ucg_int_t pos)
{
    1e76:	cf 93       	push	r28
    1e78:	df 93       	push	r29
    1e7a:	fc 01       	movw	r30, r24
  ucg_int_t p;
  ccs->current = ccs->quot;
  ccs->current *= pos;
    1e7c:	46 81       	ldd	r20, Z+6	; 0x06
    1e7e:	46 9f       	mul	r20, r22
    1e80:	40 2d       	mov	r20, r0
    1e82:	11 24       	eor	r1, r1
    1e84:	40 83       	st	Z, r20
  p = ccs->rem * pos  + ccs->den/2;
    1e86:	c0 85       	ldd	r28, Z+8	; 0x08
    1e88:	d1 85       	ldd	r29, Z+9	; 0x09
    1e8a:	82 85       	ldd	r24, Z+10	; 0x0a
    1e8c:	93 85       	ldd	r25, Z+11	; 0x0b
    1e8e:	68 9f       	mul	r22, r24
    1e90:	90 01       	movw	r18, r0
    1e92:	69 9f       	mul	r22, r25
    1e94:	30 0d       	add	r19, r0
    1e96:	78 9f       	mul	r23, r24
    1e98:	30 0d       	add	r19, r0
    1e9a:	11 24       	eor	r1, r1
    1e9c:	ce 01       	movw	r24, r28
    1e9e:	dd 23       	and	r29, r29
    1ea0:	0c f4       	brge	.+2      	; 0x1ea4 <ucg_ccs_seek+0x2e>
    1ea2:	01 96       	adiw	r24, 0x01	; 1
    1ea4:	95 95       	asr	r25
    1ea6:	87 95       	ror	r24
    1ea8:	28 0f       	add	r18, r24
    1eaa:	39 1f       	adc	r19, r25
  if ( ccs->dir >= 0 )
    1eac:	82 81       	ldd	r24, Z+2	; 0x02
    1eae:	93 81       	ldd	r25, Z+3	; 0x03
    1eb0:	99 23       	and	r25, r25
    1eb2:	3c f0       	brlt	.+14     	; 0x1ec2 <ucg_ccs_seek+0x4c>
    ccs->current += p / ccs->den;
    1eb4:	c9 01       	movw	r24, r18
    1eb6:	be 01       	movw	r22, r28
    1eb8:	0e 94 55 1d 	call	0x3aaa	; 0x3aaa <__divmodhi4>
    1ebc:	46 0f       	add	r20, r22
    1ebe:	40 83       	st	Z, r20
    1ec0:	06 c0       	rjmp	.+12     	; 0x1ece <ucg_ccs_seek+0x58>
  else
    ccs->current -= p / ccs->den;
    1ec2:	c9 01       	movw	r24, r18
    1ec4:	be 01       	movw	r22, r28
    1ec6:	0e 94 55 1d 	call	0x3aaa	; 0x3aaa <__divmodhi4>
    1eca:	46 1b       	sub	r20, r22
    1ecc:	40 83       	st	Z, r20
  ccs->frac = p % ccs->den;
    1ece:	c9 01       	movw	r24, r18
    1ed0:	be 01       	movw	r22, r28
    1ed2:	0e 94 55 1d 	call	0x3aaa	; 0x3aaa <__divmodhi4>
    1ed6:	84 87       	std	Z+12, r24	; 0x0c
    1ed8:	95 87       	std	Z+13, r25	; 0x0d
  ccs->current += ccs->start;
    1eda:	90 81       	ld	r25, Z
    1edc:	81 81       	ldd	r24, Z+1	; 0x01
    1ede:	89 0f       	add	r24, r25
    1ee0:	80 83       	st	Z, r24
}
    1ee2:	df 91       	pop	r29
    1ee4:	cf 91       	pop	r28
    1ee6:	08 95       	ret

00001ee8 <ucg_clip_is_x_visible>:
  if ( ucg_clip_l90fx(ucg) == 0 )
      return 0;
  ucg->arg.pixel_skip = ucg->arg.offset & 0x07;
  ucg->arg.bitmap += (ucg->arg.offset >>3);
  return 1;
}
    1ee8:	fc 01       	movw	r30, r24
    1eea:	23 89       	ldd	r18, Z+19	; 0x13
    1eec:	34 89       	ldd	r19, Z+20	; 0x14
    1eee:	e4 5a       	subi	r30, 0xA4	; 164
    1ef0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ef2:	40 81       	ld	r20, Z
    1ef4:	51 81       	ldd	r21, Z+1	; 0x01
    1ef6:	24 1b       	sub	r18, r20
    1ef8:	35 0b       	sbc	r19, r21
    1efa:	52 f0       	brmi	.+20     	; 0x1f10 <ucg_clip_is_x_visible+0x28>
    1efc:	34 96       	adiw	r30, 0x04	; 4
    1efe:	81 e0       	ldi	r24, 0x01	; 1
    1f00:	90 e0       	ldi	r25, 0x00	; 0
    1f02:	40 81       	ld	r20, Z
    1f04:	51 81       	ldd	r21, Z+1	; 0x01
    1f06:	24 17       	cp	r18, r20
    1f08:	35 07       	cpc	r19, r21
    1f0a:	24 f0       	brlt	.+8      	; 0x1f14 <ucg_clip_is_x_visible+0x2c>
    1f0c:	80 e0       	ldi	r24, 0x00	; 0
    1f0e:	08 95       	ret
    1f10:	80 e0       	ldi	r24, 0x00	; 0
    1f12:	90 e0       	ldi	r25, 0x00	; 0
    1f14:	08 95       	ret

00001f16 <ucg_clip_is_y_visible>:
    1f16:	fc 01       	movw	r30, r24
    1f18:	25 89       	ldd	r18, Z+21	; 0x15
    1f1a:	36 89       	ldd	r19, Z+22	; 0x16
    1f1c:	e2 5a       	subi	r30, 0xA2	; 162
    1f1e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f20:	40 81       	ld	r20, Z
    1f22:	51 81       	ldd	r21, Z+1	; 0x01
    1f24:	24 1b       	sub	r18, r20
    1f26:	35 0b       	sbc	r19, r21
    1f28:	52 f0       	brmi	.+20     	; 0x1f3e <ucg_clip_is_y_visible+0x28>
    1f2a:	34 96       	adiw	r30, 0x04	; 4
    1f2c:	81 e0       	ldi	r24, 0x01	; 1
    1f2e:	90 e0       	ldi	r25, 0x00	; 0
    1f30:	40 81       	ld	r20, Z
    1f32:	51 81       	ldd	r21, Z+1	; 0x01
    1f34:	24 17       	cp	r18, r20
    1f36:	35 07       	cpc	r19, r21
    1f38:	24 f0       	brlt	.+8      	; 0x1f42 <ucg_clip_is_y_visible+0x2c>
    1f3a:	80 e0       	ldi	r24, 0x00	; 0
    1f3c:	08 95       	ret
    1f3e:	80 e0       	ldi	r24, 0x00	; 0
    1f40:	90 e0       	ldi	r25, 0x00	; 0
    1f42:	08 95       	ret

00001f44 <ucg_clip_intersection>:
    1f44:	cf 93       	push	r28
    1f46:	df 93       	push	r29
    1f48:	dc 01       	movw	r26, r24
    1f4a:	ed 91       	ld	r30, X+
    1f4c:	fc 91       	ld	r31, X
    1f4e:	e2 17       	cp	r30, r18
    1f50:	f3 07       	cpc	r31, r19
    1f52:	ac f4       	brge	.+42     	; 0x1f7e <ucg_clip_intersection+0x3a>
    1f54:	eb 01       	movw	r28, r22
    1f56:	a8 81       	ld	r26, Y
    1f58:	b9 81       	ldd	r27, Y+1	; 0x01
    1f5a:	4a 17       	cp	r20, r26
    1f5c:	5b 07       	cpc	r21, r27
    1f5e:	94 f4       	brge	.+36     	; 0x1f84 <ucg_clip_intersection+0x40>
    1f60:	e4 17       	cp	r30, r20
    1f62:	f5 07       	cpc	r31, r21
    1f64:	1c f4       	brge	.+6      	; 0x1f6c <ucg_clip_intersection+0x28>
    1f66:	fc 01       	movw	r30, r24
    1f68:	40 83       	st	Z, r20
    1f6a:	51 83       	std	Z+1, r21	; 0x01
    1f6c:	2a 17       	cp	r18, r26
    1f6e:	3b 07       	cpc	r19, r27
    1f70:	64 f4       	brge	.+24     	; 0x1f8a <ucg_clip_intersection+0x46>
    1f72:	db 01       	movw	r26, r22
    1f74:	2d 93       	st	X+, r18
    1f76:	3c 93       	st	X, r19
    1f78:	81 e0       	ldi	r24, 0x01	; 1
    1f7a:	90 e0       	ldi	r25, 0x00	; 0
    1f7c:	08 c0       	rjmp	.+16     	; 0x1f8e <ucg_clip_intersection+0x4a>
    1f7e:	80 e0       	ldi	r24, 0x00	; 0
    1f80:	90 e0       	ldi	r25, 0x00	; 0
    1f82:	05 c0       	rjmp	.+10     	; 0x1f8e <ucg_clip_intersection+0x4a>
    1f84:	80 e0       	ldi	r24, 0x00	; 0
    1f86:	90 e0       	ldi	r25, 0x00	; 0
    1f88:	02 c0       	rjmp	.+4      	; 0x1f8e <ucg_clip_intersection+0x4a>
    1f8a:	81 e0       	ldi	r24, 0x01	; 1
    1f8c:	90 e0       	ldi	r25, 0x00	; 0
    1f8e:	df 91       	pop	r29
    1f90:	cf 91       	pop	r28
    1f92:	08 95       	ret

00001f94 <ucg_clip_is_pixel_visible>:
    1f94:	cf 93       	push	r28
    1f96:	df 93       	push	r29
    1f98:	ec 01       	movw	r28, r24
    1f9a:	0e 94 74 0f 	call	0x1ee8	; 0x1ee8 <ucg_clip_is_x_visible>
    1f9e:	00 97       	sbiw	r24, 0x00	; 0
    1fa0:	51 f0       	breq	.+20     	; 0x1fb6 <ucg_clip_is_pixel_visible+0x22>
    1fa2:	ce 01       	movw	r24, r28
    1fa4:	0e 94 8b 0f 	call	0x1f16	; 0x1f16 <ucg_clip_is_y_visible>
    1fa8:	31 e0       	ldi	r19, 0x01	; 1
    1faa:	20 e0       	ldi	r18, 0x00	; 0
    1fac:	89 2b       	or	r24, r25
    1fae:	09 f4       	brne	.+2      	; 0x1fb2 <ucg_clip_is_pixel_visible+0x1e>
    1fb0:	30 e0       	ldi	r19, 0x00	; 0
    1fb2:	83 2f       	mov	r24, r19
    1fb4:	92 2f       	mov	r25, r18
    1fb6:	df 91       	pop	r29
    1fb8:	cf 91       	pop	r28
    1fba:	08 95       	ret

00001fbc <ucg_clip_l90fx>:
    1fbc:	ef 92       	push	r14
    1fbe:	ff 92       	push	r15
    1fc0:	0f 93       	push	r16
    1fc2:	1f 93       	push	r17
    1fc4:	cf 93       	push	r28
    1fc6:	df 93       	push	r29
    1fc8:	00 d0       	rcall	.+0      	; 0x1fca <ucg_clip_l90fx+0xe>
    1fca:	1f 92       	push	r1
    1fcc:	cd b7       	in	r28, 0x3d	; 61
    1fce:	de b7       	in	r29, 0x3e	; 62
    1fd0:	8c 01       	movw	r16, r24
    1fd2:	fc 01       	movw	r30, r24
    1fd4:	16 8e       	std	Z+30, r1	; 0x1e
    1fd6:	17 8e       	std	Z+31, r1	; 0x1f
    1fd8:	e4 8c       	ldd	r14, Z+28	; 0x1c
    1fda:	f5 8c       	ldd	r15, Z+29	; 0x1d
    1fdc:	f1 e0       	ldi	r31, 0x01	; 1
    1fde:	ef 16       	cp	r14, r31
    1fe0:	f1 04       	cpc	r15, r1
    1fe2:	09 f4       	brne	.+2      	; 0x1fe6 <ucg_clip_l90fx+0x2a>
    1fe4:	47 c0       	rjmp	.+142    	; 0x2074 <ucg_clip_l90fx+0xb8>
    1fe6:	1c f4       	brge	.+6      	; 0x1fee <ucg_clip_l90fx+0x32>
    1fe8:	ef 28       	or	r14, r15
    1fea:	61 f0       	breq	.+24     	; 0x2004 <ucg_clip_l90fx+0x48>
    1fec:	ed c0       	rjmp	.+474    	; 0x21c8 <ucg_clip_l90fx+0x20c>
    1fee:	52 e0       	ldi	r21, 0x02	; 2
    1ff0:	e5 16       	cp	r14, r21
    1ff2:	f1 04       	cpc	r15, r1
    1ff4:	09 f4       	brne	.+2      	; 0x1ff8 <ucg_clip_l90fx+0x3c>
    1ff6:	75 c0       	rjmp	.+234    	; 0x20e2 <ucg_clip_l90fx+0x126>
    1ff8:	83 e0       	ldi	r24, 0x03	; 3
    1ffa:	e8 16       	cp	r14, r24
    1ffc:	f1 04       	cpc	r15, r1
    1ffe:	09 f4       	brne	.+2      	; 0x2002 <ucg_clip_l90fx+0x46>
    2000:	aa c0       	rjmp	.+340    	; 0x2156 <ucg_clip_l90fx+0x19a>
    2002:	e2 c0       	rjmp	.+452    	; 0x21c8 <ucg_clip_l90fx+0x20c>
    2004:	0e 94 8b 0f 	call	0x1f16	; 0x1f16 <ucg_clip_is_y_visible>
    2008:	00 97       	sbiw	r24, 0x00	; 0
    200a:	09 f4       	brne	.+2      	; 0x200e <ucg_clip_l90fx+0x52>
    200c:	df c0       	rjmp	.+446    	; 0x21cc <ucg_clip_l90fx+0x210>
    200e:	f8 01       	movw	r30, r16
    2010:	83 89       	ldd	r24, Z+19	; 0x13
    2012:	94 89       	ldd	r25, Z+20	; 0x14
    2014:	89 83       	std	Y+1, r24	; 0x01
    2016:	9a 83       	std	Y+2, r25	; 0x02
    2018:	22 8d       	ldd	r18, Z+26	; 0x1a
    201a:	33 8d       	ldd	r19, Z+27	; 0x1b
    201c:	82 0f       	add	r24, r18
    201e:	93 1f       	adc	r25, r19
    2020:	8b 83       	std	Y+3, r24	; 0x03
    2022:	9c 83       	std	Y+4, r25	; 0x04
    2024:	e4 5a       	subi	r30, 0xA4	; 164
    2026:	ff 4f       	sbci	r31, 0xFF	; 255
    2028:	40 81       	ld	r20, Z
    202a:	51 81       	ldd	r21, Z+1	; 0x01
    202c:	34 96       	adiw	r30, 0x04	; 4
    202e:	20 81       	ld	r18, Z
    2030:	31 81       	ldd	r19, Z+1	; 0x01
    2032:	24 0f       	add	r18, r20
    2034:	35 1f       	adc	r19, r21
    2036:	be 01       	movw	r22, r28
    2038:	6d 5f       	subi	r22, 0xFD	; 253
    203a:	7f 4f       	sbci	r23, 0xFF	; 255
    203c:	ce 01       	movw	r24, r28
    203e:	01 96       	adiw	r24, 0x01	; 1
    2040:	0e 94 a2 0f 	call	0x1f44	; 0x1f44 <ucg_clip_intersection>
    2044:	00 97       	sbiw	r24, 0x00	; 0
    2046:	09 f4       	brne	.+2      	; 0x204a <ucg_clip_l90fx+0x8e>
    2048:	c1 c0       	rjmp	.+386    	; 0x21cc <ucg_clip_l90fx+0x210>
    204a:	29 81       	ldd	r18, Y+1	; 0x01
    204c:	3a 81       	ldd	r19, Y+2	; 0x02
    204e:	f8 01       	movw	r30, r16
    2050:	83 89       	ldd	r24, Z+19	; 0x13
    2052:	94 89       	ldd	r25, Z+20	; 0x14
    2054:	a9 01       	movw	r20, r18
    2056:	48 1b       	sub	r20, r24
    2058:	59 0b       	sbc	r21, r25
    205a:	46 8f       	std	Z+30, r20	; 0x1e
    205c:	57 8f       	std	Z+31, r21	; 0x1f
    205e:	23 8b       	std	Z+19, r18	; 0x13
    2060:	34 8b       	std	Z+20, r19	; 0x14
    2062:	8b 81       	ldd	r24, Y+3	; 0x03
    2064:	9c 81       	ldd	r25, Y+4	; 0x04
    2066:	82 1b       	sub	r24, r18
    2068:	93 0b       	sbc	r25, r19
    206a:	82 8f       	std	Z+26, r24	; 0x1a
    206c:	93 8f       	std	Z+27, r25	; 0x1b
    206e:	81 e0       	ldi	r24, 0x01	; 1
    2070:	90 e0       	ldi	r25, 0x00	; 0
    2072:	ac c0       	rjmp	.+344    	; 0x21cc <ucg_clip_l90fx+0x210>
    2074:	0e 94 74 0f 	call	0x1ee8	; 0x1ee8 <ucg_clip_is_x_visible>
    2078:	00 97       	sbiw	r24, 0x00	; 0
    207a:	09 f4       	brne	.+2      	; 0x207e <ucg_clip_l90fx+0xc2>
    207c:	a7 c0       	rjmp	.+334    	; 0x21cc <ucg_clip_l90fx+0x210>
    207e:	f8 01       	movw	r30, r16
    2080:	85 89       	ldd	r24, Z+21	; 0x15
    2082:	96 89       	ldd	r25, Z+22	; 0x16
    2084:	89 83       	std	Y+1, r24	; 0x01
    2086:	9a 83       	std	Y+2, r25	; 0x02
    2088:	22 8d       	ldd	r18, Z+26	; 0x1a
    208a:	33 8d       	ldd	r19, Z+27	; 0x1b
    208c:	82 0f       	add	r24, r18
    208e:	93 1f       	adc	r25, r19
    2090:	8b 83       	std	Y+3, r24	; 0x03
    2092:	9c 83       	std	Y+4, r25	; 0x04
    2094:	e2 5a       	subi	r30, 0xA2	; 162
    2096:	ff 4f       	sbci	r31, 0xFF	; 255
    2098:	40 81       	ld	r20, Z
    209a:	51 81       	ldd	r21, Z+1	; 0x01
    209c:	34 96       	adiw	r30, 0x04	; 4
    209e:	20 81       	ld	r18, Z
    20a0:	31 81       	ldd	r19, Z+1	; 0x01
    20a2:	24 0f       	add	r18, r20
    20a4:	35 1f       	adc	r19, r21
    20a6:	be 01       	movw	r22, r28
    20a8:	6d 5f       	subi	r22, 0xFD	; 253
    20aa:	7f 4f       	sbci	r23, 0xFF	; 255
    20ac:	ce 01       	movw	r24, r28
    20ae:	01 96       	adiw	r24, 0x01	; 1
    20b0:	0e 94 a2 0f 	call	0x1f44	; 0x1f44 <ucg_clip_intersection>
    20b4:	00 97       	sbiw	r24, 0x00	; 0
    20b6:	09 f4       	brne	.+2      	; 0x20ba <ucg_clip_l90fx+0xfe>
    20b8:	89 c0       	rjmp	.+274    	; 0x21cc <ucg_clip_l90fx+0x210>
    20ba:	29 81       	ldd	r18, Y+1	; 0x01
    20bc:	3a 81       	ldd	r19, Y+2	; 0x02
    20be:	f8 01       	movw	r30, r16
    20c0:	85 89       	ldd	r24, Z+21	; 0x15
    20c2:	96 89       	ldd	r25, Z+22	; 0x16
    20c4:	a9 01       	movw	r20, r18
    20c6:	48 1b       	sub	r20, r24
    20c8:	59 0b       	sbc	r21, r25
    20ca:	46 8f       	std	Z+30, r20	; 0x1e
    20cc:	57 8f       	std	Z+31, r21	; 0x1f
    20ce:	25 8b       	std	Z+21, r18	; 0x15
    20d0:	36 8b       	std	Z+22, r19	; 0x16
    20d2:	8b 81       	ldd	r24, Y+3	; 0x03
    20d4:	9c 81       	ldd	r25, Y+4	; 0x04
    20d6:	82 1b       	sub	r24, r18
    20d8:	93 0b       	sbc	r25, r19
    20da:	82 8f       	std	Z+26, r24	; 0x1a
    20dc:	93 8f       	std	Z+27, r25	; 0x1b
    20de:	c7 01       	movw	r24, r14
    20e0:	75 c0       	rjmp	.+234    	; 0x21cc <ucg_clip_l90fx+0x210>
    20e2:	0e 94 8b 0f 	call	0x1f16	; 0x1f16 <ucg_clip_is_y_visible>
    20e6:	00 97       	sbiw	r24, 0x00	; 0
    20e8:	09 f4       	brne	.+2      	; 0x20ec <ucg_clip_l90fx+0x130>
    20ea:	70 c0       	rjmp	.+224    	; 0x21cc <ucg_clip_l90fx+0x210>
    20ec:	f8 01       	movw	r30, r16
    20ee:	83 89       	ldd	r24, Z+19	; 0x13
    20f0:	94 89       	ldd	r25, Z+20	; 0x14
    20f2:	01 96       	adiw	r24, 0x01	; 1
    20f4:	8b 83       	std	Y+3, r24	; 0x03
    20f6:	9c 83       	std	Y+4, r25	; 0x04
    20f8:	22 8d       	ldd	r18, Z+26	; 0x1a
    20fa:	33 8d       	ldd	r19, Z+27	; 0x1b
    20fc:	82 1b       	sub	r24, r18
    20fe:	93 0b       	sbc	r25, r19
    2100:	89 83       	std	Y+1, r24	; 0x01
    2102:	9a 83       	std	Y+2, r25	; 0x02
    2104:	e4 5a       	subi	r30, 0xA4	; 164
    2106:	ff 4f       	sbci	r31, 0xFF	; 255
    2108:	40 81       	ld	r20, Z
    210a:	51 81       	ldd	r21, Z+1	; 0x01
    210c:	34 96       	adiw	r30, 0x04	; 4
    210e:	20 81       	ld	r18, Z
    2110:	31 81       	ldd	r19, Z+1	; 0x01
    2112:	24 0f       	add	r18, r20
    2114:	35 1f       	adc	r19, r21
    2116:	be 01       	movw	r22, r28
    2118:	6d 5f       	subi	r22, 0xFD	; 253
    211a:	7f 4f       	sbci	r23, 0xFF	; 255
    211c:	ce 01       	movw	r24, r28
    211e:	01 96       	adiw	r24, 0x01	; 1
    2120:	0e 94 a2 0f 	call	0x1f44	; 0x1f44 <ucg_clip_intersection>
    2124:	00 97       	sbiw	r24, 0x00	; 0
    2126:	09 f4       	brne	.+2      	; 0x212a <ucg_clip_l90fx+0x16e>
    2128:	51 c0       	rjmp	.+162    	; 0x21cc <ucg_clip_l90fx+0x210>
    212a:	8b 81       	ldd	r24, Y+3	; 0x03
    212c:	9c 81       	ldd	r25, Y+4	; 0x04
    212e:	29 81       	ldd	r18, Y+1	; 0x01
    2130:	3a 81       	ldd	r19, Y+2	; 0x02
    2132:	ac 01       	movw	r20, r24
    2134:	42 1b       	sub	r20, r18
    2136:	53 0b       	sbc	r21, r19
    2138:	f8 01       	movw	r30, r16
    213a:	42 8f       	std	Z+26, r20	; 0x1a
    213c:	53 8f       	std	Z+27, r21	; 0x1b
    213e:	01 97       	sbiw	r24, 0x01	; 1
    2140:	23 89       	ldd	r18, Z+19	; 0x13
    2142:	34 89       	ldd	r19, Z+20	; 0x14
    2144:	28 1b       	sub	r18, r24
    2146:	39 0b       	sbc	r19, r25
    2148:	26 8f       	std	Z+30, r18	; 0x1e
    214a:	37 8f       	std	Z+31, r19	; 0x1f
    214c:	83 8b       	std	Z+19, r24	; 0x13
    214e:	94 8b       	std	Z+20, r25	; 0x14
    2150:	81 e0       	ldi	r24, 0x01	; 1
    2152:	90 e0       	ldi	r25, 0x00	; 0
    2154:	3b c0       	rjmp	.+118    	; 0x21cc <ucg_clip_l90fx+0x210>
    2156:	c8 01       	movw	r24, r16
    2158:	0e 94 74 0f 	call	0x1ee8	; 0x1ee8 <ucg_clip_is_x_visible>
    215c:	00 97       	sbiw	r24, 0x00	; 0
    215e:	b1 f1       	breq	.+108    	; 0x21cc <ucg_clip_l90fx+0x210>
    2160:	f8 01       	movw	r30, r16
    2162:	85 89       	ldd	r24, Z+21	; 0x15
    2164:	96 89       	ldd	r25, Z+22	; 0x16
    2166:	01 96       	adiw	r24, 0x01	; 1
    2168:	8b 83       	std	Y+3, r24	; 0x03
    216a:	9c 83       	std	Y+4, r25	; 0x04
    216c:	22 8d       	ldd	r18, Z+26	; 0x1a
    216e:	33 8d       	ldd	r19, Z+27	; 0x1b
    2170:	82 1b       	sub	r24, r18
    2172:	93 0b       	sbc	r25, r19
    2174:	89 83       	std	Y+1, r24	; 0x01
    2176:	9a 83       	std	Y+2, r25	; 0x02
    2178:	e2 5a       	subi	r30, 0xA2	; 162
    217a:	ff 4f       	sbci	r31, 0xFF	; 255
    217c:	40 81       	ld	r20, Z
    217e:	51 81       	ldd	r21, Z+1	; 0x01
    2180:	34 96       	adiw	r30, 0x04	; 4
    2182:	20 81       	ld	r18, Z
    2184:	31 81       	ldd	r19, Z+1	; 0x01
    2186:	24 0f       	add	r18, r20
    2188:	35 1f       	adc	r19, r21
    218a:	be 01       	movw	r22, r28
    218c:	6d 5f       	subi	r22, 0xFD	; 253
    218e:	7f 4f       	sbci	r23, 0xFF	; 255
    2190:	ce 01       	movw	r24, r28
    2192:	01 96       	adiw	r24, 0x01	; 1
    2194:	0e 94 a2 0f 	call	0x1f44	; 0x1f44 <ucg_clip_intersection>
    2198:	00 97       	sbiw	r24, 0x00	; 0
    219a:	c1 f0       	breq	.+48     	; 0x21cc <ucg_clip_l90fx+0x210>
    219c:	8b 81       	ldd	r24, Y+3	; 0x03
    219e:	9c 81       	ldd	r25, Y+4	; 0x04
    21a0:	29 81       	ldd	r18, Y+1	; 0x01
    21a2:	3a 81       	ldd	r19, Y+2	; 0x02
    21a4:	ac 01       	movw	r20, r24
    21a6:	42 1b       	sub	r20, r18
    21a8:	53 0b       	sbc	r21, r19
    21aa:	f8 01       	movw	r30, r16
    21ac:	42 8f       	std	Z+26, r20	; 0x1a
    21ae:	53 8f       	std	Z+27, r21	; 0x1b
    21b0:	01 97       	sbiw	r24, 0x01	; 1
    21b2:	25 89       	ldd	r18, Z+21	; 0x15
    21b4:	36 89       	ldd	r19, Z+22	; 0x16
    21b6:	28 1b       	sub	r18, r24
    21b8:	39 0b       	sbc	r19, r25
    21ba:	26 8f       	std	Z+30, r18	; 0x1e
    21bc:	37 8f       	std	Z+31, r19	; 0x1f
    21be:	85 8b       	std	Z+21, r24	; 0x15
    21c0:	96 8b       	std	Z+22, r25	; 0x16
    21c2:	81 e0       	ldi	r24, 0x01	; 1
    21c4:	90 e0       	ldi	r25, 0x00	; 0
    21c6:	02 c0       	rjmp	.+4      	; 0x21cc <ucg_clip_l90fx+0x210>
    21c8:	81 e0       	ldi	r24, 0x01	; 1
    21ca:	90 e0       	ldi	r25, 0x00	; 0
    21cc:	24 96       	adiw	r28, 0x04	; 4
    21ce:	cd bf       	out	0x3d, r28	; 61
    21d0:	de bf       	out	0x3e, r29	; 62
    21d2:	df 91       	pop	r29
    21d4:	cf 91       	pop	r28
    21d6:	1f 91       	pop	r17
    21d8:	0f 91       	pop	r16
    21da:	ff 90       	pop	r15
    21dc:	ef 90       	pop	r14
    21de:	08 95       	ret

000021e0 <ucg_clip_l90se>:
  return 1;
}
*/

ucg_int_t ucg_clip_l90se(ucg_t *ucg)
{
    21e0:	ef 92       	push	r14
    21e2:	ff 92       	push	r15
    21e4:	0f 93       	push	r16
    21e6:	1f 93       	push	r17
    21e8:	cf 93       	push	r28
    21ea:	df 93       	push	r29
    21ec:	8c 01       	movw	r16, r24
  uint8_t i;
  if ( ucg_clip_l90fx(ucg) == 0 )
    21ee:	0e 94 de 0f 	call	0x1fbc	; 0x1fbc <ucg_clip_l90fx>
    21f2:	00 97       	sbiw	r24, 0x00	; 0
    21f4:	91 f0       	breq	.+36     	; 0x221a <ucg_clip_l90se+0x3a>
    21f6:	e8 01       	movw	r28, r16
    21f8:	e2 96       	adiw	r28, 0x32	; 50
    21fa:	78 01       	movw	r14, r16
    21fc:	8c e5       	ldi	r24, 0x5C	; 92
    21fe:	e8 0e       	add	r14, r24
    2200:	f1 1c       	adc	r15, r1
      return 0;
  for ( i = 0; i < 3; i++ )
  {
    ucg_ccs_seek(ucg->arg.ccs_line+i, ucg->arg.offset);
    2202:	f8 01       	movw	r30, r16
    2204:	66 8d       	ldd	r22, Z+30	; 0x1e
    2206:	77 8d       	ldd	r23, Z+31	; 0x1f
    2208:	ce 01       	movw	r24, r28
    220a:	0e 94 3b 0f 	call	0x1e76	; 0x1e76 <ucg_ccs_seek>
    220e:	2e 96       	adiw	r28, 0x0e	; 14
ucg_int_t ucg_clip_l90se(ucg_t *ucg)
{
  uint8_t i;
  if ( ucg_clip_l90fx(ucg) == 0 )
      return 0;
  for ( i = 0; i < 3; i++ )
    2210:	ce 15       	cp	r28, r14
    2212:	df 05       	cpc	r29, r15
    2214:	b1 f7       	brne	.-20     	; 0x2202 <ucg_clip_l90se+0x22>
  {
    ucg_ccs_seek(ucg->arg.ccs_line+i, ucg->arg.offset);
  }  
  return 1;
    2216:	81 e0       	ldi	r24, 0x01	; 1
    2218:	90 e0       	ldi	r25, 0x00	; 0
}
    221a:	df 91       	pop	r29
    221c:	cf 91       	pop	r28
    221e:	1f 91       	pop	r17
    2220:	0f 91       	pop	r16
    2222:	ff 90       	pop	r15
    2224:	ef 90       	pop	r14
    2226:	08 95       	ret

00002228 <ucg_com_PowerDown>:

void ucg_com_SendCmdDataSequence(ucg_t *ucg, uint16_t cnt, const uint8_t *byte_ptr, uint8_t cd_line_status_at_end)
{
  ucg->com_cb(ucg, UCG_COM_MSG_SEND_CD_DATA_SEQUENCE, cnt, (uint8_t *)byte_ptr);
  ucg_com_SetCDLineStatus(ucg, cd_line_status_at_end);	// ensure that the status is set correctly for the CD line */
}
    2228:	cf 93       	push	r28
    222a:	df 93       	push	r29
    222c:	ec 01       	movw	r28, r24
    222e:	fc 01       	movw	r30, r24
    2230:	ed 56       	subi	r30, 0x6D	; 109
    2232:	ff 4f       	sbci	r31, 0xFF	; 255
    2234:	80 81       	ld	r24, Z
    2236:	83 ff       	sbrs	r24, 3
    2238:	0a c0       	rjmp	.+20     	; 0x224e <ucg_com_PowerDown+0x26>
    223a:	e9 89       	ldd	r30, Y+17	; 0x11
    223c:	fa 89       	ldd	r31, Y+18	; 0x12
    223e:	20 e0       	ldi	r18, 0x00	; 0
    2240:	30 e0       	ldi	r19, 0x00	; 0
    2242:	40 e0       	ldi	r20, 0x00	; 0
    2244:	50 e0       	ldi	r21, 0x00	; 0
    2246:	6b e0       	ldi	r22, 0x0B	; 11
    2248:	70 e0       	ldi	r23, 0x00	; 0
    224a:	ce 01       	movw	r24, r28
    224c:	19 95       	eicall
    224e:	cd 56       	subi	r28, 0x6D	; 109
    2250:	df 4f       	sbci	r29, 0xFF	; 255
    2252:	88 81       	ld	r24, Y
    2254:	87 7f       	andi	r24, 0xF7	; 247
    2256:	88 83       	st	Y, r24
    2258:	df 91       	pop	r29
    225a:	cf 91       	pop	r28
    225c:	08 95       	ret

0000225e <ucg_com_PowerUp>:
    225e:	0f 93       	push	r16
    2260:	1f 93       	push	r17
    2262:	cf 93       	push	r28
    2264:	df 93       	push	r29
    2266:	00 d0       	rcall	.+0      	; 0x2268 <ucg_com_PowerUp+0xa>
    2268:	1f 92       	push	r1
    226a:	cd b7       	in	r28, 0x3d	; 61
    226c:	de b7       	in	r29, 0x3e	; 62
    226e:	8c 01       	movw	r16, r24
    2270:	69 83       	std	Y+1, r22	; 0x01
    2272:	7a 83       	std	Y+2, r23	; 0x02
    2274:	4b 83       	std	Y+3, r20	; 0x03
    2276:	5c 83       	std	Y+4, r21	; 0x04
    2278:	0e 94 14 11 	call	0x2228	; 0x2228 <ucg_com_PowerDown>
    227c:	f8 01       	movw	r30, r16
    227e:	ee 56       	subi	r30, 0x6E	; 110
    2280:	ff 4f       	sbci	r31, 0xFF	; 255
    2282:	10 82       	st	Z, r1
    2284:	d8 01       	movw	r26, r16
    2286:	51 96       	adiw	r26, 0x11	; 17
    2288:	ed 91       	ld	r30, X+
    228a:	fc 91       	ld	r31, X
    228c:	52 97       	sbiw	r26, 0x12	; 18
    228e:	9e 01       	movw	r18, r28
    2290:	2f 5f       	subi	r18, 0xFF	; 255
    2292:	3f 4f       	sbci	r19, 0xFF	; 255
    2294:	40 e0       	ldi	r20, 0x00	; 0
    2296:	50 e0       	ldi	r21, 0x00	; 0
    2298:	6a e0       	ldi	r22, 0x0A	; 10
    229a:	70 e0       	ldi	r23, 0x00	; 0
    229c:	c8 01       	movw	r24, r16
    229e:	19 95       	eicall
    22a0:	00 97       	sbiw	r24, 0x00	; 0
    22a2:	31 f0       	breq	.+12     	; 0x22b0 <ucg_com_PowerUp+0x52>
    22a4:	f8 01       	movw	r30, r16
    22a6:	ed 56       	subi	r30, 0x6D	; 109
    22a8:	ff 4f       	sbci	r31, 0xFF	; 255
    22aa:	20 81       	ld	r18, Z
    22ac:	28 60       	ori	r18, 0x08	; 8
    22ae:	20 83       	st	Z, r18
    22b0:	24 96       	adiw	r28, 0x04	; 4
    22b2:	cd bf       	out	0x3d, r28	; 61
    22b4:	de bf       	out	0x3e, r29	; 62
    22b6:	df 91       	pop	r29
    22b8:	cf 91       	pop	r28
    22ba:	1f 91       	pop	r17
    22bc:	0f 91       	pop	r16
    22be:	08 95       	ret

000022c0 <ucg_com_SetLineStatus>:
    22c0:	1f 93       	push	r17
    22c2:	cf 93       	push	r28
    22c4:	df 93       	push	r29
    22c6:	ec 01       	movw	r28, r24
    22c8:	14 2f       	mov	r17, r20
    22ca:	61 11       	cpse	r22, r1
    22cc:	23 c0       	rjmp	.+70     	; 0x2314 <ucg_com_SetLineStatus+0x54>
    22ce:	fc 01       	movw	r30, r24
    22d0:	ee 56       	subi	r30, 0x6E	; 110
    22d2:	ff 4f       	sbci	r31, 0xFF	; 255
    22d4:	80 81       	ld	r24, Z
    22d6:	84 23       	and	r24, r20
    22d8:	29 f0       	breq	.+10     	; 0x22e4 <ucg_com_SetLineStatus+0x24>
    22da:	31 96       	adiw	r30, 0x01	; 1
    22dc:	80 81       	ld	r24, Z
    22de:	84 23       	and	r24, r20
    22e0:	48 13       	cpse	r20, r24
    22e2:	37 c0       	rjmp	.+110    	; 0x2352 <ucg_com_SetLineStatus+0x92>
    22e4:	62 2f       	mov	r22, r18
    22e6:	70 e0       	ldi	r23, 0x00	; 0
    22e8:	e9 89       	ldd	r30, Y+17	; 0x11
    22ea:	fa 89       	ldd	r31, Y+18	; 0x12
    22ec:	20 e0       	ldi	r18, 0x00	; 0
    22ee:	30 e0       	ldi	r19, 0x00	; 0
    22f0:	40 e0       	ldi	r20, 0x00	; 0
    22f2:	50 e0       	ldi	r21, 0x00	; 0
    22f4:	ce 01       	movw	r24, r28
    22f6:	19 95       	eicall
    22f8:	fe 01       	movw	r30, r28
    22fa:	ed 56       	subi	r30, 0x6D	; 109
    22fc:	ff 4f       	sbci	r31, 0xFF	; 255
    22fe:	81 2f       	mov	r24, r17
    2300:	80 95       	com	r24
    2302:	90 81       	ld	r25, Z
    2304:	89 23       	and	r24, r25
    2306:	80 83       	st	Z, r24
    2308:	ce 56       	subi	r28, 0x6E	; 110
    230a:	df 4f       	sbci	r29, 0xFF	; 255
    230c:	88 81       	ld	r24, Y
    230e:	18 2b       	or	r17, r24
    2310:	18 83       	st	Y, r17
    2312:	1f c0       	rjmp	.+62     	; 0x2352 <ucg_com_SetLineStatus+0x92>
    2314:	fc 01       	movw	r30, r24
    2316:	ee 56       	subi	r30, 0x6E	; 110
    2318:	ff 4f       	sbci	r31, 0xFF	; 255
    231a:	80 81       	ld	r24, Z
    231c:	84 23       	and	r24, r20
    231e:	21 f0       	breq	.+8      	; 0x2328 <ucg_com_SetLineStatus+0x68>
    2320:	31 96       	adiw	r30, 0x01	; 1
    2322:	80 81       	ld	r24, Z
    2324:	84 23       	and	r24, r20
    2326:	a9 f4       	brne	.+42     	; 0x2352 <ucg_com_SetLineStatus+0x92>
    2328:	46 2f       	mov	r20, r22
    232a:	50 e0       	ldi	r21, 0x00	; 0
    232c:	62 2f       	mov	r22, r18
    232e:	70 e0       	ldi	r23, 0x00	; 0
    2330:	e9 89       	ldd	r30, Y+17	; 0x11
    2332:	fa 89       	ldd	r31, Y+18	; 0x12
    2334:	20 e0       	ldi	r18, 0x00	; 0
    2336:	30 e0       	ldi	r19, 0x00	; 0
    2338:	ce 01       	movw	r24, r28
    233a:	19 95       	eicall
    233c:	fe 01       	movw	r30, r28
    233e:	ed 56       	subi	r30, 0x6D	; 109
    2340:	ff 4f       	sbci	r31, 0xFF	; 255
    2342:	80 81       	ld	r24, Z
    2344:	81 2b       	or	r24, r17
    2346:	80 83       	st	Z, r24
    2348:	ce 56       	subi	r28, 0x6E	; 110
    234a:	df 4f       	sbci	r29, 0xFF	; 255
    234c:	88 81       	ld	r24, Y
    234e:	18 2b       	or	r17, r24
    2350:	18 83       	st	Y, r17
    2352:	df 91       	pop	r29
    2354:	cf 91       	pop	r28
    2356:	1f 91       	pop	r17
    2358:	08 95       	ret

0000235a <ucg_com_SetResetLineStatus>:
    235a:	2d e0       	ldi	r18, 0x0D	; 13
    235c:	44 e0       	ldi	r20, 0x04	; 4
    235e:	0e 94 60 11 	call	0x22c0	; 0x22c0 <ucg_com_SetLineStatus>
    2362:	08 95       	ret

00002364 <ucg_com_SetCSLineStatus>:
    2364:	2e e0       	ldi	r18, 0x0E	; 14
    2366:	42 e0       	ldi	r20, 0x02	; 2
    2368:	0e 94 60 11 	call	0x22c0	; 0x22c0 <ucg_com_SetLineStatus>
    236c:	08 95       	ret

0000236e <ucg_com_SetCDLineStatus>:
    236e:	2f e0       	ldi	r18, 0x0F	; 15
    2370:	41 e0       	ldi	r20, 0x01	; 1
    2372:	0e 94 60 11 	call	0x22c0	; 0x22c0 <ucg_com_SetLineStatus>
    2376:	08 95       	ret

00002378 <ucg_com_DelayMicroseconds>:
    2378:	ab 01       	movw	r20, r22
    237a:	dc 01       	movw	r26, r24
    237c:	51 96       	adiw	r26, 0x11	; 17
    237e:	ed 91       	ld	r30, X+
    2380:	fc 91       	ld	r31, X
    2382:	52 97       	sbiw	r26, 0x12	; 18
    2384:	20 e0       	ldi	r18, 0x00	; 0
    2386:	30 e0       	ldi	r19, 0x00	; 0
    2388:	6c e0       	ldi	r22, 0x0C	; 12
    238a:	70 e0       	ldi	r23, 0x00	; 0
    238c:	19 95       	eicall
    238e:	08 95       	ret

00002390 <ucg_com_DelayMilliseconds>:
    2390:	0f 93       	push	r16
    2392:	1f 93       	push	r17
    2394:	cf 93       	push	r28
    2396:	df 93       	push	r29
    2398:	8c 01       	movw	r16, r24
    239a:	eb 01       	movw	r28, r22
    239c:	20 97       	sbiw	r28, 0x00	; 0
    239e:	39 f0       	breq	.+14     	; 0x23ae <ucg_com_DelayMilliseconds+0x1e>
    23a0:	68 ee       	ldi	r22, 0xE8	; 232
    23a2:	73 e0       	ldi	r23, 0x03	; 3
    23a4:	c8 01       	movw	r24, r16
    23a6:	0e 94 bc 11 	call	0x2378	; 0x2378 <ucg_com_DelayMicroseconds>
    23aa:	21 97       	sbiw	r28, 0x01	; 1
    23ac:	c9 f7       	brne	.-14     	; 0x23a0 <ucg_com_DelayMilliseconds+0x10>
    23ae:	df 91       	pop	r29
    23b0:	cf 91       	pop	r28
    23b2:	1f 91       	pop	r17
    23b4:	0f 91       	pop	r16
    23b6:	08 95       	ret

000023b8 <ucg_com_SendByte>:
    23b8:	46 2f       	mov	r20, r22
    23ba:	50 e0       	ldi	r21, 0x00	; 0
    23bc:	dc 01       	movw	r26, r24
    23be:	51 96       	adiw	r26, 0x11	; 17
    23c0:	ed 91       	ld	r30, X+
    23c2:	fc 91       	ld	r31, X
    23c4:	52 97       	sbiw	r26, 0x12	; 18
    23c6:	20 e0       	ldi	r18, 0x00	; 0
    23c8:	30 e0       	ldi	r19, 0x00	; 0
    23ca:	60 e1       	ldi	r22, 0x10	; 16
    23cc:	70 e0       	ldi	r23, 0x00	; 0
    23ce:	19 95       	eicall
    23d0:	08 95       	ret

000023d2 <ucg_com_SendStringP>:
    23d2:	ef 92       	push	r14
    23d4:	ff 92       	push	r15
    23d6:	0f 93       	push	r16
    23d8:	1f 93       	push	r17
    23da:	cf 93       	push	r28
    23dc:	df 93       	push	r29
    23de:	7c 01       	movw	r14, r24
    23e0:	eb 01       	movw	r28, r22
    23e2:	8a 01       	movw	r16, r20
    23e4:	20 97       	sbiw	r28, 0x00	; 0
    23e6:	91 f0       	breq	.+36     	; 0x240c <ucg_com_SendStringP+0x3a>
    23e8:	f8 01       	movw	r30, r16
    23ea:	44 91       	lpm	r20, Z
    23ec:	50 e0       	ldi	r21, 0x00	; 0
    23ee:	d7 01       	movw	r26, r14
    23f0:	51 96       	adiw	r26, 0x11	; 17
    23f2:	ed 91       	ld	r30, X+
    23f4:	fc 91       	ld	r31, X
    23f6:	52 97       	sbiw	r26, 0x12	; 18
    23f8:	20 e0       	ldi	r18, 0x00	; 0
    23fa:	30 e0       	ldi	r19, 0x00	; 0
    23fc:	60 e1       	ldi	r22, 0x10	; 16
    23fe:	70 e0       	ldi	r23, 0x00	; 0
    2400:	c7 01       	movw	r24, r14
    2402:	19 95       	eicall
    2404:	0f 5f       	subi	r16, 0xFF	; 255
    2406:	1f 4f       	sbci	r17, 0xFF	; 255
    2408:	21 97       	sbiw	r28, 0x01	; 1
    240a:	71 f7       	brne	.-36     	; 0x23e8 <ucg_com_SendStringP+0x16>
    240c:	df 91       	pop	r29
    240e:	cf 91       	pop	r28
    2410:	1f 91       	pop	r17
    2412:	0f 91       	pop	r16
    2414:	ff 90       	pop	r15
    2416:	ef 90       	pop	r14
    2418:	08 95       	ret

0000241a <ucg_com_SendCmdSeq>:
}


//void ucg_com_SendCmdSeq(ucg_t *ucg, const ucg_pgm_uint8_t *data)
void ucg_com_SendCmdSeq(ucg_t *ucg, const ucg_pgm_uint8_t *data)
{
    241a:	7f 92       	push	r7
    241c:	8f 92       	push	r8
    241e:	9f 92       	push	r9
    2420:	af 92       	push	r10
    2422:	bf 92       	push	r11
    2424:	cf 92       	push	r12
    2426:	df 92       	push	r13
    2428:	ef 92       	push	r14
    242a:	ff 92       	push	r15
    242c:	0f 93       	push	r16
    242e:	1f 93       	push	r17
    2430:	cf 93       	push	r28
    2432:	df 93       	push	r29
    2434:	7c 01       	movw	r14, r24
    2436:	8b 01       	movw	r16, r22
	    break;
	  case 1:
	    ucg_com_SetCSLineStatus(ucg, lo&1);
	    break;
	  case 3:
	    ucg->com_cfg_cd = lo;
    2438:	6c 01       	movw	r12, r24
    243a:	84 e9       	ldi	r24, 0x94	; 148
    243c:	c8 0e       	add	r12, r24
    243e:	d1 1c       	adc	r13, r1
	ucg_com_SetCDLineStatus(ucg, (ucg->com_cfg_cd)&1 );
	ucg_com_SendStringP(ucg, lo, data+1);
	data+=1+lo;      
	break;
      case 7:	/* note: 0x070 is used to set data line status */
	ucg_com_SetCDLineStatus(ucg, ((ucg->com_cfg_cd>>1)&1)^1 );
    2440:	77 24       	eor	r7, r7
    2442:	73 94       	inc	r7
  uint8_t hi;
  uint8_t lo;

  for(;;)
  {
    b = ucg_pgm_read(data);
    2444:	f8 01       	movw	r30, r16
    2446:	64 91       	lpm	r22, Z
    //b = *data;
    hi = (b) >> 4;
    2448:	d6 2f       	mov	r29, r22
    244a:	d2 95       	swap	r29
    244c:	df 70       	andi	r29, 0x0F	; 15
    lo = (b) & 0x0f;
    244e:	c6 2f       	mov	r28, r22
    2450:	cf 70       	andi	r28, 0x0F	; 15
    switch( hi )
    2452:	8d 2f       	mov	r24, r29
    2454:	90 e0       	ldi	r25, 0x00	; 0
    2456:	fc 01       	movw	r30, r24
    2458:	31 97       	sbiw	r30, 0x01	; 1
    245a:	ef 30       	cpi	r30, 0x0F	; 15
    245c:	f1 05       	cpc	r31, r1
    245e:	08 f0       	brcs	.+2      	; 0x2462 <ucg_com_SendCmdSeq+0x48>
    2460:	c5 c0       	rjmp	.+394    	; 0x25ec <ucg_com_SendCmdSeq+0x1d2>
    2462:	88 27       	eor	r24, r24
    2464:	e2 50       	subi	r30, 0x02	; 2
    2466:	ff 4f       	sbci	r31, 0xFF	; 255
    2468:	8f 4f       	sbci	r24, 0xFF	; 255
    246a:	0c 94 69 1d 	jmp	0x3ad2	; 0x3ad2 <__tablejump2__>
      case 0:
	return;		/* end marker */
      case 1:
      case 2:
      case 3:
	ucg_com_SendCmdArg(ucg, data+1, hi, lo);
    246e:	48 01       	movw	r8, r16
    2470:	ff ef       	ldi	r31, 0xFF	; 255
    2472:	8f 1a       	sub	r8, r31
    2474:	9f 0a       	sbc	r9, r31

*/

static void ucg_com_SendCmdArg(ucg_t *ucg, const ucg_pgm_uint8_t *data, uint8_t cmd_cnt, uint8_t arg_cnt)
{
  ucg_com_SetCDLineStatus(ucg, (ucg->com_cfg_cd>>1)&1 );
    2476:	f6 01       	movw	r30, r12
    2478:	60 81       	ld	r22, Z
    247a:	66 95       	lsr	r22
    247c:	61 70       	andi	r22, 0x01	; 1
    247e:	c7 01       	movw	r24, r14
    2480:	0e 94 b7 11 	call	0x236e	; 0x236e <ucg_com_SetCDLineStatus>
  ucg_com_SendStringP(ucg, cmd_cnt, data);
    2484:	ad 2e       	mov	r10, r29
    2486:	b1 2c       	mov	r11, r1
    2488:	a4 01       	movw	r20, r8
    248a:	b5 01       	movw	r22, r10
    248c:	c7 01       	movw	r24, r14
    248e:	0e 94 e9 11 	call	0x23d2	; 0x23d2 <ucg_com_SendStringP>
  if ( arg_cnt > 0 )
    2492:	cc 23       	and	r28, r28
    2494:	71 f0       	breq	.+28     	; 0x24b2 <ucg_com_SendCmdSeq+0x98>
  {
    data += cmd_cnt;
    2496:	a8 0c       	add	r10, r8
    2498:	b9 1c       	adc	r11, r9
    ucg_com_SetCDLineStatus(ucg, (ucg->com_cfg_cd)&1 );
    249a:	f6 01       	movw	r30, r12
    249c:	60 81       	ld	r22, Z
    249e:	61 70       	andi	r22, 0x01	; 1
    24a0:	c7 01       	movw	r24, r14
    24a2:	0e 94 b7 11 	call	0x236e	; 0x236e <ucg_com_SetCDLineStatus>
    ucg_com_SendStringP(ucg, arg_cnt, data);
    24a6:	6c 2f       	mov	r22, r28
    24a8:	70 e0       	ldi	r23, 0x00	; 0
    24aa:	a5 01       	movw	r20, r10
    24ac:	c7 01       	movw	r24, r14
    24ae:	0e 94 e9 11 	call	0x23d2	; 0x23d2 <ucg_com_SendStringP>
	return;		/* end marker */
      case 1:
      case 2:
      case 3:
	ucg_com_SendCmdArg(ucg, data+1, hi, lo);
	data+=1+hi+lo;
    24b2:	8d 2f       	mov	r24, r29
    24b4:	90 e0       	ldi	r25, 0x00	; 0
    24b6:	01 96       	adiw	r24, 0x01	; 1
    24b8:	8c 0f       	add	r24, r28
    24ba:	91 1d       	adc	r25, r1
    24bc:	08 0f       	add	r16, r24
    24be:	19 1f       	adc	r17, r25
	break;
    24c0:	c1 cf       	rjmp	.-126    	; 0x2444 <ucg_com_SendCmdSeq+0x2a>
      case 6:
	ucg_com_SetCDLineStatus(ucg, (ucg->com_cfg_cd)&1 );
    24c2:	f6 01       	movw	r30, r12
    24c4:	60 81       	ld	r22, Z
    24c6:	61 70       	andi	r22, 0x01	; 1
    24c8:	c7 01       	movw	r24, r14
    24ca:	0e 94 b7 11 	call	0x236e	; 0x236e <ucg_com_SetCDLineStatus>
	ucg_com_SendStringP(ucg, lo, data+1);
    24ce:	a8 01       	movw	r20, r16
    24d0:	4f 5f       	subi	r20, 0xFF	; 255
    24d2:	5f 4f       	sbci	r21, 0xFF	; 255
    24d4:	d0 e0       	ldi	r29, 0x00	; 0
    24d6:	be 01       	movw	r22, r28
    24d8:	c7 01       	movw	r24, r14
    24da:	0e 94 e9 11 	call	0x23d2	; 0x23d2 <ucg_com_SendStringP>
	data+=1+lo;      
    24de:	21 96       	adiw	r28, 0x01	; 1
    24e0:	0c 0f       	add	r16, r28
    24e2:	1d 1f       	adc	r17, r29
	break;
    24e4:	af cf       	rjmp	.-162    	; 0x2444 <ucg_com_SendCmdSeq+0x2a>
      case 7:	/* note: 0x070 is used to set data line status */
	ucg_com_SetCDLineStatus(ucg, ((ucg->com_cfg_cd>>1)&1)^1 );
    24e6:	f6 01       	movw	r30, r12
    24e8:	60 81       	ld	r22, Z
    24ea:	66 95       	lsr	r22
    24ec:	61 70       	andi	r22, 0x01	; 1
    24ee:	67 25       	eor	r22, r7
    24f0:	c7 01       	movw	r24, r14
    24f2:	0e 94 b7 11 	call	0x236e	; 0x236e <ucg_com_SetCDLineStatus>
	if ( lo > 0 )
    24f6:	cc 23       	and	r28, r28
    24f8:	41 f0       	breq	.+16     	; 0x250a <ucg_com_SendCmdSeq+0xf0>
	  ucg_com_SendStringP(ucg, lo, data+1);
    24fa:	6c 2f       	mov	r22, r28
    24fc:	70 e0       	ldi	r23, 0x00	; 0
    24fe:	a8 01       	movw	r20, r16
    2500:	4f 5f       	subi	r20, 0xFF	; 255
    2502:	5f 4f       	sbci	r21, 0xFF	; 255
    2504:	c7 01       	movw	r24, r14
    2506:	0e 94 e9 11 	call	0x23d2	; 0x23d2 <ucg_com_SendStringP>
	data+=1+lo;      
    250a:	d0 e0       	ldi	r29, 0x00	; 0
    250c:	21 96       	adiw	r28, 0x01	; 1
    250e:	0c 0f       	add	r16, r28
    2510:	1d 1f       	adc	r17, r29
	break;
    2512:	98 cf       	rjmp	.-208    	; 0x2444 <ucg_com_SendCmdSeq+0x2a>
      case 8:
	data++;
	b = ucg_pgm_read(data);
    2514:	f8 01       	movw	r30, r16
    2516:	31 96       	adiw	r30, 0x01	; 1
    2518:	e4 91       	lpm	r30, Z
	//b = *data;
	ucg_com_DelayMilliseconds(ucg, (((uint16_t)lo)<<8) + b );
    251a:	6c 2f       	mov	r22, r28
    251c:	70 e0       	ldi	r23, 0x00	; 0
    251e:	76 2f       	mov	r23, r22
    2520:	66 27       	eor	r22, r22
    2522:	6e 0f       	add	r22, r30
    2524:	71 1d       	adc	r23, r1
    2526:	c7 01       	movw	r24, r14
    2528:	0e 94 c8 11 	call	0x2390	; 0x2390 <ucg_com_DelayMilliseconds>
	data++;
    252c:	0e 5f       	subi	r16, 0xFE	; 254
    252e:	1f 4f       	sbci	r17, 0xFF	; 255
	break;
    2530:	89 cf       	rjmp	.-238    	; 0x2444 <ucg_com_SendCmdSeq+0x2a>
      case 9:
	data++;
	b = ucg_pgm_read(data);
    2532:	f8 01       	movw	r30, r16
    2534:	31 96       	adiw	r30, 0x01	; 1
    2536:	e4 91       	lpm	r30, Z
	//b = *data;
	ucg_com_DelayMicroseconds(ucg, (((uint16_t)lo)<<8) + b );
    2538:	6c 2f       	mov	r22, r28
    253a:	70 e0       	ldi	r23, 0x00	; 0
    253c:	76 2f       	mov	r23, r22
    253e:	66 27       	eor	r22, r22
    2540:	6e 0f       	add	r22, r30
    2542:	71 1d       	adc	r23, r1
    2544:	c7 01       	movw	r24, r14
    2546:	0e 94 bc 11 	call	0x2378	; 0x2378 <ucg_com_DelayMicroseconds>
	data++;
    254a:	0e 5f       	subi	r16, 0xFE	; 254
    254c:	1f 4f       	sbci	r17, 0xFF	; 255
	break;
    254e:	7a cf       	rjmp	.-268    	; 0x2444 <ucg_com_SendCmdSeq+0x2a>
      case 10:
	data++;
	b = ucg_pgm_read(data);
    2550:	f8 01       	movw	r30, r16
    2552:	31 96       	adiw	r30, 0x01	; 1
    2554:	b4 90       	lpm	r11, Z
	data++;
    2556:	31 96       	adiw	r30, 0x01	; 1
	bb = ucg_pgm_read(data);
    2558:	d4 91       	lpm	r29, Z
	data++;
    255a:	0d 5f       	subi	r16, 0xFD	; 253
    255c:	1f 4f       	sbci	r17, 0xFF	; 255
	//b = data[0];
	//bb = data[1];
	ucg_com_SetCDLineStatus(ucg, (ucg->com_cfg_cd)&1 );
    255e:	f6 01       	movw	r30, r12
    2560:	60 81       	ld	r22, Z
    2562:	61 70       	andi	r22, 0x01	; 1
    2564:	c7 01       	movw	r24, r14
    2566:	0e 94 b7 11 	call	0x236e	; 0x236e <ucg_com_SetCDLineStatus>
	ucg_com_SendByte(ucg, (((uint8_t)(((ucg->arg.pixel.pos.x)>>lo)))&b)|bb );
    256a:	f7 01       	movw	r30, r14
    256c:	63 89       	ldd	r22, Z+19	; 0x13
    256e:	74 89       	ldd	r23, Z+20	; 0x14
    2570:	02 c0       	rjmp	.+4      	; 0x2576 <ucg_com_SendCmdSeq+0x15c>
    2572:	75 95       	asr	r23
    2574:	67 95       	ror	r22
    2576:	ca 95       	dec	r28
    2578:	e2 f7       	brpl	.-8      	; 0x2572 <ucg_com_SendCmdSeq+0x158>
    257a:	6b 21       	and	r22, r11
    257c:	6d 2b       	or	r22, r29
    257e:	c7 01       	movw	r24, r14
    2580:	0e 94 dc 11 	call	0x23b8	; 0x23b8 <ucg_com_SendByte>
	//data+=2;
	break;
    2584:	5f cf       	rjmp	.-322    	; 0x2444 <ucg_com_SendCmdSeq+0x2a>
      case 11:
	data++;
	b = ucg_pgm_read(data);
    2586:	f8 01       	movw	r30, r16
    2588:	31 96       	adiw	r30, 0x01	; 1
    258a:	b4 90       	lpm	r11, Z
	data++;
    258c:	31 96       	adiw	r30, 0x01	; 1
	bb = ucg_pgm_read(data);
    258e:	d4 91       	lpm	r29, Z
	data++;
    2590:	0d 5f       	subi	r16, 0xFD	; 253
    2592:	1f 4f       	sbci	r17, 0xFF	; 255
	//b = data[0];
	//bb = data[1];
	ucg_com_SetCDLineStatus(ucg, (ucg->com_cfg_cd)&1 );
    2594:	f6 01       	movw	r30, r12
    2596:	60 81       	ld	r22, Z
    2598:	61 70       	andi	r22, 0x01	; 1
    259a:	c7 01       	movw	r24, r14
    259c:	0e 94 b7 11 	call	0x236e	; 0x236e <ucg_com_SetCDLineStatus>
	ucg_com_SendByte(ucg, (((uint8_t)(((ucg->arg.pixel.pos.y)>>lo)))&b)|bb );
    25a0:	f7 01       	movw	r30, r14
    25a2:	65 89       	ldd	r22, Z+21	; 0x15
    25a4:	76 89       	ldd	r23, Z+22	; 0x16
    25a6:	02 c0       	rjmp	.+4      	; 0x25ac <ucg_com_SendCmdSeq+0x192>
    25a8:	75 95       	asr	r23
    25aa:	67 95       	ror	r22
    25ac:	ca 95       	dec	r28
    25ae:	e2 f7       	brpl	.-8      	; 0x25a8 <ucg_com_SendCmdSeq+0x18e>
    25b0:	6b 21       	and	r22, r11
    25b2:	6d 2b       	or	r22, r29
    25b4:	c7 01       	movw	r24, r14
    25b6:	0e 94 dc 11 	call	0x23b8	; 0x23b8 <ucg_com_SendByte>
	//data+=2;
	break;
    25ba:	44 cf       	rjmp	.-376    	; 0x2444 <ucg_com_SendCmdSeq+0x2a>
      case 15:
	hi = lo >> 2;
	lo &= 3;
	switch(hi)
    25bc:	c6 95       	lsr	r28
    25be:	c6 95       	lsr	r28
    25c0:	c1 30       	cpi	r28, 0x01	; 1
    25c2:	49 f0       	breq	.+18     	; 0x25d6 <ucg_com_SendCmdSeq+0x1bc>
    25c4:	18 f0       	brcs	.+6      	; 0x25cc <ucg_com_SendCmdSeq+0x1b2>
    25c6:	c3 30       	cpi	r28, 0x03	; 3
    25c8:	59 f0       	breq	.+22     	; 0x25e0 <ucg_com_SendCmdSeq+0x1c6>
    25ca:	0d c0       	rjmp	.+26     	; 0x25e6 <ucg_com_SendCmdSeq+0x1cc>
	{
	  case 0:
	    ucg_com_SetResetLineStatus(ucg, lo&1);
    25cc:	61 70       	andi	r22, 0x01	; 1
    25ce:	c7 01       	movw	r24, r14
    25d0:	0e 94 ad 11 	call	0x235a	; 0x235a <ucg_com_SetResetLineStatus>
	    break;
    25d4:	08 c0       	rjmp	.+16     	; 0x25e6 <ucg_com_SendCmdSeq+0x1cc>
	  case 1:
	    ucg_com_SetCSLineStatus(ucg, lo&1);
    25d6:	61 70       	andi	r22, 0x01	; 1
    25d8:	c7 01       	movw	r24, r14
    25da:	0e 94 b2 11 	call	0x2364	; 0x2364 <ucg_com_SetCSLineStatus>
	    break;
    25de:	03 c0       	rjmp	.+6      	; 0x25e6 <ucg_com_SendCmdSeq+0x1cc>
	  case 3:
	    ucg->com_cfg_cd = lo;
    25e0:	63 70       	andi	r22, 0x03	; 3
    25e2:	f6 01       	movw	r30, r12
    25e4:	60 83       	st	Z, r22
	    break;
	}
	data++;
    25e6:	0f 5f       	subi	r16, 0xFF	; 255
    25e8:	1f 4f       	sbci	r17, 0xFF	; 255
	break;
    25ea:	2c cf       	rjmp	.-424    	; 0x2444 <ucg_com_SendCmdSeq+0x2a>
      default:
	return;
    }  
  }
}
    25ec:	df 91       	pop	r29
    25ee:	cf 91       	pop	r28
    25f0:	1f 91       	pop	r17
    25f2:	0f 91       	pop	r16
    25f4:	ff 90       	pop	r15
    25f6:	ef 90       	pop	r14
    25f8:	df 90       	pop	r13
    25fa:	cf 90       	pop	r12
    25fc:	bf 90       	pop	r11
    25fe:	af 90       	pop	r10
    2600:	9f 90       	pop	r9
    2602:	8f 90       	pop	r8
    2604:	7f 90       	pop	r7
    2606:	08 95       	ret

00002608 <ucg_dev_default_cb>:
  messages, which are not yet handled.
*/

ucg_int_t ucg_dev_default_cb(ucg_t *ucg, ucg_int_t msg, void *data)
{
  switch(msg)
    2608:	6c 30       	cpi	r22, 0x0C	; 12
    260a:	71 05       	cpc	r23, r1
    260c:	61 f0       	breq	.+24     	; 0x2626 <ucg_dev_default_cb+0x1e>
    260e:	67 31       	cpi	r22, 0x17	; 23
    2610:	71 05       	cpc	r23, r1
    2612:	a9 f4       	brne	.+42     	; 0x263e <ucg_dev_default_cb+0x36>
  {
    case UCG_MSG_DRAW_L90SE:
      return ucg->ext_cb(ucg, msg, data);
    2614:	dc 01       	movw	r26, r24
    2616:	17 96       	adiw	r26, 0x07	; 7
    2618:	ed 91       	ld	r30, X+
    261a:	fc 91       	ld	r31, X
    261c:	18 97       	sbiw	r26, 0x08	; 8
    261e:	67 e1       	ldi	r22, 0x17	; 23
    2620:	70 e0       	ldi	r23, 0x00	; 0
    2622:	19 95       	eicall
    2624:	08 95       	ret
    case UCG_MSG_SET_CLIP_BOX:
      ucg->clip_box = *(ucg_box_t *)data;
    2626:	dc 01       	movw	r26, r24
    2628:	a4 5a       	subi	r26, 0xA4	; 164
    262a:	bf 4f       	sbci	r27, 0xFF	; 255
    262c:	88 e0       	ldi	r24, 0x08	; 8
    262e:	fa 01       	movw	r30, r20
    2630:	01 90       	ld	r0, Z+
    2632:	0d 92       	st	X+, r0
    2634:	8a 95       	dec	r24
    2636:	e1 f7       	brne	.-8      	; 0x2630 <ucg_dev_default_cb+0x28>
      break;
  }
  return 1;	/* all ok */
    2638:	81 e0       	ldi	r24, 0x01	; 1
    263a:	90 e0       	ldi	r25, 0x00	; 0
  {
    case UCG_MSG_DRAW_L90SE:
      return ucg->ext_cb(ucg, msg, data);
    case UCG_MSG_SET_CLIP_BOX:
      ucg->clip_box = *(ucg_box_t *)data;
      break;
    263c:	08 95       	ret
  }
  return 1;	/* all ok */
    263e:	81 e0       	ldi	r24, 0x01	; 1
    2640:	90 e0       	ldi	r25, 0x00	; 0
}
    2642:	08 95       	ret

00002644 <ucg_ext_none>:
  will be used as default cb if no extentions callback is provided
*/
ucg_int_t ucg_ext_none(ucg_t *ucg, ucg_int_t msg, void *data)
{
  return 1;	/* all ok */  
}
    2644:	81 e0       	ldi	r24, 0x01	; 1
    2646:	90 e0       	ldi	r25, 0x00	; 0
    2648:	08 95       	ret

0000264a <ucg_handle_st7735_l90fx>:
    }
    ucg_com_SetCSLineStatus(ucg, 1);		/* disable chip */
    return 1;
  }
  return 0;
}
    264a:	ef 92       	push	r14
    264c:	ff 92       	push	r15
    264e:	0f 93       	push	r16
    2650:	1f 93       	push	r17
    2652:	cf 93       	push	r28
    2654:	df 93       	push	r29
    2656:	00 d0       	rcall	.+0      	; 0x2658 <ucg_handle_st7735_l90fx+0xe>
    2658:	cd b7       	in	r28, 0x3d	; 61
    265a:	de b7       	in	r29, 0x3e	; 62
    265c:	8c 01       	movw	r16, r24
    265e:	0e 94 de 0f 	call	0x1fbc	; 0x1fbc <ucg_clip_l90fx>
    2662:	00 97       	sbiw	r24, 0x00	; 0
    2664:	09 f4       	brne	.+2      	; 0x2668 <ucg_handle_st7735_l90fx+0x1e>
    2666:	59 c0       	rjmp	.+178    	; 0x271a <ucg_handle_st7735_l90fx+0xd0>
    2668:	d8 01       	movw	r26, r16
    266a:	5c 96       	adiw	r26, 0x1c	; 28
    266c:	8d 91       	ld	r24, X+
    266e:	9c 91       	ld	r25, X
    2670:	5d 97       	sbiw	r26, 0x1d	; 29
    2672:	81 30       	cpi	r24, 0x01	; 1
    2674:	91 05       	cpc	r25, r1
    2676:	59 f0       	breq	.+22     	; 0x268e <ucg_handle_st7735_l90fx+0x44>
    2678:	82 30       	cpi	r24, 0x02	; 2
    267a:	91 05       	cpc	r25, r1
    267c:	71 f0       	breq	.+28     	; 0x269a <ucg_handle_st7735_l90fx+0x50>
    267e:	89 2b       	or	r24, r25
    2680:	01 f5       	brne	.+64     	; 0x26c2 <ucg_handle_st7735_l90fx+0x78>
    2682:	69 e0       	ldi	r22, 0x09	; 9
    2684:	73 e0       	ldi	r23, 0x03	; 3
    2686:	c8 01       	movw	r24, r16
    2688:	0e 94 0d 12 	call	0x241a	; 0x241a <ucg_com_SendCmdSeq>
    268c:	2d c0       	rjmp	.+90     	; 0x26e8 <ucg_handle_st7735_l90fx+0x9e>
    268e:	68 ee       	ldi	r22, 0xE8	; 232
    2690:	72 e0       	ldi	r23, 0x02	; 2
    2692:	c8 01       	movw	r24, r16
    2694:	0e 94 0d 12 	call	0x241a	; 0x241a <ucg_com_SendCmdSeq>
    2698:	27 c0       	rjmp	.+78     	; 0x26e8 <ucg_handle_st7735_l90fx+0x9e>
    269a:	f8 01       	movw	r30, r16
    269c:	e3 88       	ldd	r14, Z+19	; 0x13
    269e:	f4 88       	ldd	r15, Z+20	; 0x14
    26a0:	8f e7       	ldi	r24, 0x7F	; 127
    26a2:	90 e0       	ldi	r25, 0x00	; 0
    26a4:	8e 19       	sub	r24, r14
    26a6:	9f 09       	sbc	r25, r15
    26a8:	83 8b       	std	Z+19, r24	; 0x13
    26aa:	94 8b       	std	Z+20, r25	; 0x14
    26ac:	67 ec       	ldi	r22, 0xC7	; 199
    26ae:	72 e0       	ldi	r23, 0x02	; 2
    26b0:	c8 01       	movw	r24, r16
    26b2:	0e 94 0d 12 	call	0x241a	; 0x241a <ucg_com_SendCmdSeq>
    26b6:	d8 01       	movw	r26, r16
    26b8:	53 96       	adiw	r26, 0x13	; 19
    26ba:	ed 92       	st	X+, r14
    26bc:	fc 92       	st	X, r15
    26be:	54 97       	sbiw	r26, 0x14	; 20
    26c0:	13 c0       	rjmp	.+38     	; 0x26e8 <ucg_handle_st7735_l90fx+0x9e>
    26c2:	f8 01       	movw	r30, r16
    26c4:	e5 88       	ldd	r14, Z+21	; 0x15
    26c6:	f6 88       	ldd	r15, Z+22	; 0x16
    26c8:	8f e9       	ldi	r24, 0x9F	; 159
    26ca:	90 e0       	ldi	r25, 0x00	; 0
    26cc:	8e 19       	sub	r24, r14
    26ce:	9f 09       	sbc	r25, r15
    26d0:	85 8b       	std	Z+21, r24	; 0x15
    26d2:	96 8b       	std	Z+22, r25	; 0x16
    26d4:	63 ea       	ldi	r22, 0xA3	; 163
    26d6:	72 e0       	ldi	r23, 0x02	; 2
    26d8:	c8 01       	movw	r24, r16
    26da:	0e 94 0d 12 	call	0x241a	; 0x241a <ucg_com_SendCmdSeq>
    26de:	d8 01       	movw	r26, r16
    26e0:	55 96       	adiw	r26, 0x15	; 21
    26e2:	ed 92       	st	X+, r14
    26e4:	fc 92       	st	X, r15
    26e6:	56 97       	sbiw	r26, 0x16	; 22
    26e8:	f8 01       	movw	r30, r16
    26ea:	87 89       	ldd	r24, Z+23	; 0x17
    26ec:	89 83       	std	Y+1, r24	; 0x01
    26ee:	80 8d       	ldd	r24, Z+24	; 0x18
    26f0:	8a 83       	std	Y+2, r24	; 0x02
    26f2:	81 8d       	ldd	r24, Z+25	; 0x19
    26f4:	8b 83       	std	Y+3, r24	; 0x03
    26f6:	42 8d       	ldd	r20, Z+26	; 0x1a
    26f8:	53 8d       	ldd	r21, Z+27	; 0x1b
    26fa:	01 88       	ldd	r0, Z+17	; 0x11
    26fc:	f2 89       	ldd	r31, Z+18	; 0x12
    26fe:	e0 2d       	mov	r30, r0
    2700:	9e 01       	movw	r18, r28
    2702:	2f 5f       	subi	r18, 0xFF	; 255
    2704:	3f 4f       	sbci	r19, 0xFF	; 255
    2706:	63 e1       	ldi	r22, 0x13	; 19
    2708:	70 e0       	ldi	r23, 0x00	; 0
    270a:	c8 01       	movw	r24, r16
    270c:	19 95       	eicall
    270e:	61 e0       	ldi	r22, 0x01	; 1
    2710:	c8 01       	movw	r24, r16
    2712:	0e 94 b2 11 	call	0x2364	; 0x2364 <ucg_com_SetCSLineStatus>
    2716:	81 e0       	ldi	r24, 0x01	; 1
    2718:	90 e0       	ldi	r25, 0x00	; 0
    271a:	23 96       	adiw	r28, 0x03	; 3
    271c:	cd bf       	out	0x3d, r28	; 61
    271e:	de bf       	out	0x3e, r29	; 62
    2720:	df 91       	pop	r29
    2722:	cf 91       	pop	r28
    2724:	1f 91       	pop	r17
    2726:	0f 91       	pop	r16
    2728:	ff 90       	pop	r15
    272a:	ef 90       	pop	r14
    272c:	08 95       	ret

0000272e <ucg_handle_st7735_l90se>:


ucg_int_t ucg_handle_st7735_l90se(ucg_t *ucg)
{
    272e:	8f 92       	push	r8
    2730:	9f 92       	push	r9
    2732:	af 92       	push	r10
    2734:	bf 92       	push	r11
    2736:	cf 92       	push	r12
    2738:	df 92       	push	r13
    273a:	ef 92       	push	r14
    273c:	ff 92       	push	r15
    273e:	0f 93       	push	r16
    2740:	1f 93       	push	r17
    2742:	cf 93       	push	r28
    2744:	df 93       	push	r29
    2746:	00 d0       	rcall	.+0      	; 0x2748 <ucg_handle_st7735_l90se+0x1a>
    2748:	cd b7       	in	r28, 0x3d	; 61
    274a:	de b7       	in	r29, 0x3e	; 62
    274c:	8c 01       	movw	r16, r24
    274e:	7c 01       	movw	r14, r24
    2750:	86 e2       	ldi	r24, 0x26	; 38
    2752:	e8 0e       	add	r14, r24
    2754:	f1 1c       	adc	r15, r1
    2756:	58 01       	movw	r10, r16
    2758:	a2 e3       	ldi	r26, 0x32	; 50
    275a:	aa 0e       	add	r10, r26
    275c:	b1 1c       	adc	r11, r1
    275e:	65 01       	movw	r12, r10
    2760:	48 01       	movw	r8, r16
    2762:	b9 e2       	ldi	r27, 0x29	; 41
    2764:	8b 0e       	add	r8, r27
    2766:	91 1c       	adc	r9, r1
    2768:	f7 01       	movw	r30, r14
    276a:	8f ef       	ldi	r24, 0xFF	; 255
    276c:	e8 1a       	sub	r14, r24
    276e:	f8 0a       	sbc	r15, r24
  
  /* Setup ccs for l90se. This will be updated by ucg_clip_l90se if required */
  
  for ( i = 0; i < 3; i++ )
  {
    ucg_ccs_init(ucg->arg.ccs_line+i, ucg->arg.rgb[0].color[i], ucg->arg.rgb[1].color[i], ucg->arg.len);
    2770:	d8 01       	movw	r26, r16
    2772:	5a 96       	adiw	r26, 0x1a	; 26
    2774:	2d 91       	ld	r18, X+
    2776:	3c 91       	ld	r19, X
    2778:	5b 97       	sbiw	r26, 0x1b	; 27
    277a:	43 81       	ldd	r20, Z+3	; 0x03
    277c:	60 81       	ld	r22, Z
    277e:	c6 01       	movw	r24, r12
    2780:	0e 94 e8 0e 	call	0x1dd0	; 0x1dd0 <ucg_ccs_init>
    2784:	be e0       	ldi	r27, 0x0E	; 14
    2786:	cb 0e       	add	r12, r27
    2788:	d1 1c       	adc	r13, r1
  uint8_t c[3];
  ucg_int_t tmp;
  
  /* Setup ccs for l90se. This will be updated by ucg_clip_l90se if required */
  
  for ( i = 0; i < 3; i++ )
    278a:	e8 14       	cp	r14, r8
    278c:	f9 04       	cpc	r15, r9
    278e:	61 f7       	brne	.-40     	; 0x2768 <ucg_handle_st7735_l90se+0x3a>
    ucg_ccs_init(ucg->arg.ccs_line+i, ucg->arg.rgb[0].color[i], ucg->arg.rgb[1].color[i], ucg->arg.len);
  }
  
  /* check if the line is visible */
  
  if ( ucg_clip_l90se(ucg) != 0 )
    2790:	c8 01       	movw	r24, r16
    2792:	0e 94 f0 10 	call	0x21e0	; 0x21e0 <ucg_clip_l90se>
    2796:	00 97       	sbiw	r24, 0x00	; 0
    2798:	09 f4       	brne	.+2      	; 0x279c <ucg_handle_st7735_l90se+0x6e>
    279a:	81 c0       	rjmp	.+258    	; 0x289e <ucg_handle_st7735_l90se+0x170>
  {
    ucg_int_t i;
    switch(ucg->arg.dir)
    279c:	f8 01       	movw	r30, r16
    279e:	84 8d       	ldd	r24, Z+28	; 0x1c
    27a0:	95 8d       	ldd	r25, Z+29	; 0x1d
    27a2:	81 30       	cpi	r24, 0x01	; 1
    27a4:	91 05       	cpc	r25, r1
    27a6:	99 f0       	breq	.+38     	; 0x27ce <ucg_handle_st7735_l90se+0xa0>
    27a8:	82 30       	cpi	r24, 0x02	; 2
    27aa:	91 05       	cpc	r25, r1
    27ac:	b1 f0       	breq	.+44     	; 0x27da <ucg_handle_st7735_l90se+0xac>
    27ae:	89 2b       	or	r24, r25
    27b0:	41 f5       	brne	.+80     	; 0x2802 <ucg_handle_st7735_l90se+0xd4>
    {
      case 0: 
	ucg_com_SendCmdSeq(ucg, ucg_st7735_set_pos_dir0_seq);	
    27b2:	69 e0       	ldi	r22, 0x09	; 9
    27b4:	73 e0       	ldi	r23, 0x03	; 3
    27b6:	c8 01       	movw	r24, r16
    27b8:	0e 94 0d 12 	call	0x241a	; 0x241a <ucg_com_SendCmdSeq>
	ucg_com_SendCmdSeq(ucg, ucg_st7735_set_pos_dir3_seq);	
	ucg->arg.pixel.pos.y = tmp;
	break;
    }
    
    for( i = 0; i < ucg->arg.len; i++ )
    27bc:	d8 01       	movw	r26, r16
    27be:	5a 96       	adiw	r26, 0x1a	; 26
    27c0:	8d 91       	ld	r24, X+
    27c2:	9c 91       	ld	r25, X
    27c4:	5b 97       	sbiw	r26, 0x1b	; 27
    27c6:	18 16       	cp	r1, r24
    27c8:	19 06       	cpc	r1, r25
    27ca:	7c f1       	brlt	.+94     	; 0x282a <ucg_handle_st7735_l90se+0xfc>
    27cc:	62 c0       	rjmp	.+196    	; 0x2892 <ucg_handle_st7735_l90se+0x164>
    {
      case 0: 
	ucg_com_SendCmdSeq(ucg, ucg_st7735_set_pos_dir0_seq);	
	break;
      case 1: 
	ucg_com_SendCmdSeq(ucg, ucg_st7735_set_pos_dir1_seq);	
    27ce:	68 ee       	ldi	r22, 0xE8	; 232
    27d0:	72 e0       	ldi	r23, 0x02	; 2
    27d2:	c8 01       	movw	r24, r16
    27d4:	0e 94 0d 12 	call	0x241a	; 0x241a <ucg_com_SendCmdSeq>
	break;
    27d8:	f1 cf       	rjmp	.-30     	; 0x27bc <ucg_handle_st7735_l90se+0x8e>
      case 2: 
	tmp = ucg->arg.pixel.pos.x;
    27da:	f8 01       	movw	r30, r16
    27dc:	e3 88       	ldd	r14, Z+19	; 0x13
    27de:	f4 88       	ldd	r15, Z+20	; 0x14
	ucg->arg.pixel.pos.x = 127-tmp;
    27e0:	8f e7       	ldi	r24, 0x7F	; 127
    27e2:	90 e0       	ldi	r25, 0x00	; 0
    27e4:	8e 19       	sub	r24, r14
    27e6:	9f 09       	sbc	r25, r15
    27e8:	83 8b       	std	Z+19, r24	; 0x13
    27ea:	94 8b       	std	Z+20, r25	; 0x14
	ucg_com_SendCmdSeq(ucg, ucg_st7735_set_pos_dir2_seq);	
    27ec:	67 ec       	ldi	r22, 0xC7	; 199
    27ee:	72 e0       	ldi	r23, 0x02	; 2
    27f0:	c8 01       	movw	r24, r16
    27f2:	0e 94 0d 12 	call	0x241a	; 0x241a <ucg_com_SendCmdSeq>
	ucg->arg.pixel.pos.x = tmp;
    27f6:	d8 01       	movw	r26, r16
    27f8:	53 96       	adiw	r26, 0x13	; 19
    27fa:	ed 92       	st	X+, r14
    27fc:	fc 92       	st	X, r15
    27fe:	54 97       	sbiw	r26, 0x14	; 20
	break;
    2800:	dd cf       	rjmp	.-70     	; 0x27bc <ucg_handle_st7735_l90se+0x8e>
      case 3: 
      default: 
	tmp = ucg->arg.pixel.pos.y;
    2802:	f8 01       	movw	r30, r16
    2804:	e5 88       	ldd	r14, Z+21	; 0x15
    2806:	f6 88       	ldd	r15, Z+22	; 0x16
	ucg->arg.pixel.pos.y = 159-tmp;
    2808:	8f e9       	ldi	r24, 0x9F	; 159
    280a:	90 e0       	ldi	r25, 0x00	; 0
    280c:	8e 19       	sub	r24, r14
    280e:	9f 09       	sbc	r25, r15
    2810:	85 8b       	std	Z+21, r24	; 0x15
    2812:	96 8b       	std	Z+22, r25	; 0x16
	ucg_com_SendCmdSeq(ucg, ucg_st7735_set_pos_dir3_seq);	
    2814:	63 ea       	ldi	r22, 0xA3	; 163
    2816:	72 e0       	ldi	r23, 0x02	; 2
    2818:	c8 01       	movw	r24, r16
    281a:	0e 94 0d 12 	call	0x241a	; 0x241a <ucg_com_SendCmdSeq>
	ucg->arg.pixel.pos.y = tmp;
    281e:	d8 01       	movw	r26, r16
    2820:	55 96       	adiw	r26, 0x15	; 21
    2822:	ed 92       	st	X+, r14
    2824:	fc 92       	st	X, r15
    2826:	56 97       	sbiw	r26, 0x16	; 22
	break;
    2828:	c9 cf       	rjmp	.-110    	; 0x27bc <ucg_handle_st7735_l90se+0x8e>
    }
    
    for( i = 0; i < ucg->arg.len; i++ )
    282a:	e1 2c       	mov	r14, r1
    282c:	f1 2c       	mov	r15, r1
    {
      c[0] = ucg->arg.ccs_line[0].current;
      c[1] = ucg->arg.ccs_line[1].current; 
    282e:	48 01       	movw	r8, r16
    2830:	b0 e4       	ldi	r27, 0x40	; 64
    2832:	8b 0e       	add	r8, r27
    2834:	91 1c       	adc	r9, r1
      c[2] = ucg->arg.ccs_line[2].current;
    2836:	68 01       	movw	r12, r16
    2838:	ee e4       	ldi	r30, 0x4E	; 78
    283a:	ce 0e       	add	r12, r30
    283c:	d1 1c       	adc	r13, r1
	break;
    }
    
    for( i = 0; i < ucg->arg.len; i++ )
    {
      c[0] = ucg->arg.ccs_line[0].current;
    283e:	d8 01       	movw	r26, r16
    2840:	d2 96       	adiw	r26, 0x32	; 50
    2842:	8c 91       	ld	r24, X
    2844:	89 83       	std	Y+1, r24	; 0x01
      c[1] = ucg->arg.ccs_line[1].current; 
    2846:	f4 01       	movw	r30, r8
    2848:	80 81       	ld	r24, Z
    284a:	8a 83       	std	Y+2, r24	; 0x02
      c[2] = ucg->arg.ccs_line[2].current;
    284c:	d6 01       	movw	r26, r12
    284e:	8c 91       	ld	r24, X
    2850:	8b 83       	std	Y+3, r24	; 0x03
      ucg_com_SendRepeat3Bytes(ucg, 1, c);
    2852:	d8 01       	movw	r26, r16
    2854:	51 96       	adiw	r26, 0x11	; 17
    2856:	ed 91       	ld	r30, X+
    2858:	fc 91       	ld	r31, X
    285a:	52 97       	sbiw	r26, 0x12	; 18
    285c:	9e 01       	movw	r18, r28
    285e:	2f 5f       	subi	r18, 0xFF	; 255
    2860:	3f 4f       	sbci	r19, 0xFF	; 255
    2862:	41 e0       	ldi	r20, 0x01	; 1
    2864:	50 e0       	ldi	r21, 0x00	; 0
    2866:	63 e1       	ldi	r22, 0x13	; 19
    2868:	70 e0       	ldi	r23, 0x00	; 0
    286a:	c8 01       	movw	r24, r16
    286c:	19 95       	eicall
      ucg_ccs_step(ucg->arg.ccs_line+0);
    286e:	c5 01       	movw	r24, r10
    2870:	0e 94 21 0f 	call	0x1e42	; 0x1e42 <ucg_ccs_step>
      ucg_ccs_step(ucg->arg.ccs_line+1);
    2874:	c4 01       	movw	r24, r8
    2876:	0e 94 21 0f 	call	0x1e42	; 0x1e42 <ucg_ccs_step>
      ucg_ccs_step(ucg->arg.ccs_line+2);
    287a:	c6 01       	movw	r24, r12
    287c:	0e 94 21 0f 	call	0x1e42	; 0x1e42 <ucg_ccs_step>
	ucg_com_SendCmdSeq(ucg, ucg_st7735_set_pos_dir3_seq);	
	ucg->arg.pixel.pos.y = tmp;
	break;
    }
    
    for( i = 0; i < ucg->arg.len; i++ )
    2880:	bf ef       	ldi	r27, 0xFF	; 255
    2882:	eb 1a       	sub	r14, r27
    2884:	fb 0a       	sbc	r15, r27
    2886:	f8 01       	movw	r30, r16
    2888:	82 8d       	ldd	r24, Z+26	; 0x1a
    288a:	93 8d       	ldd	r25, Z+27	; 0x1b
    288c:	e8 16       	cp	r14, r24
    288e:	f9 06       	cpc	r15, r25
    2890:	b4 f2       	brlt	.-84     	; 0x283e <ucg_handle_st7735_l90se+0x110>
      ucg_com_SendRepeat3Bytes(ucg, 1, c);
      ucg_ccs_step(ucg->arg.ccs_line+0);
      ucg_ccs_step(ucg->arg.ccs_line+1);
      ucg_ccs_step(ucg->arg.ccs_line+2);
    }
    ucg_com_SetCSLineStatus(ucg, 1);		/* disable chip */
    2892:	61 e0       	ldi	r22, 0x01	; 1
    2894:	c8 01       	movw	r24, r16
    2896:	0e 94 b2 11 	call	0x2364	; 0x2364 <ucg_com_SetCSLineStatus>
    return 1;
    289a:	81 e0       	ldi	r24, 0x01	; 1
    289c:	90 e0       	ldi	r25, 0x00	; 0
  }
  return 0;
}
    289e:	23 96       	adiw	r28, 0x03	; 3
    28a0:	cd bf       	out	0x3d, r28	; 61
    28a2:	de bf       	out	0x3e, r29	; 62
    28a4:	df 91       	pop	r29
    28a6:	cf 91       	pop	r28
    28a8:	1f 91       	pop	r17
    28aa:	0f 91       	pop	r16
    28ac:	ff 90       	pop	r15
    28ae:	ef 90       	pop	r14
    28b0:	df 90       	pop	r13
    28b2:	cf 90       	pop	r12
    28b4:	bf 90       	pop	r11
    28b6:	af 90       	pop	r10
    28b8:	9f 90       	pop	r9
    28ba:	8f 90       	pop	r8
    28bc:	08 95       	ret

000028be <ucg_dev_ic_st7735_18>:
	UCG_CS(1),					/* disable chip */
	UCG_END(),					/* end of sequence */
};

ucg_int_t ucg_dev_ic_st7735_18(ucg_t *ucg, ucg_int_t msg, void *data)
{
    28be:	0f 93       	push	r16
    28c0:	1f 93       	push	r17
    28c2:	cf 93       	push	r28
    28c4:	df 93       	push	r29
    28c6:	00 d0       	rcall	.+0      	; 0x28c8 <ucg_dev_ic_st7735_18+0xa>
    28c8:	cd b7       	in	r28, 0x3d	; 61
    28ca:	de b7       	in	r29, 0x3e	; 62
  switch(msg)
    28cc:	6f 30       	cpi	r22, 0x0F	; 15
    28ce:	71 05       	cpc	r23, r1
    28d0:	09 f1       	breq	.+66     	; 0x2914 <ucg_dev_ic_st7735_18+0x56>
    28d2:	8c 01       	movw	r16, r24
    28d4:	60 31       	cpi	r22, 0x10	; 16
    28d6:	71 05       	cpc	r23, r1
    28d8:	3c f4       	brge	.+14     	; 0x28e8 <ucg_dev_ic_st7735_18+0x2a>
    28da:	6a 30       	cpi	r22, 0x0A	; 10
    28dc:	71 05       	cpc	r23, r1
    28de:	61 f0       	breq	.+24     	; 0x28f8 <ucg_dev_ic_st7735_18+0x3a>
    28e0:	6b 30       	cpi	r22, 0x0B	; 11
    28e2:	71 05       	cpc	r23, r1
    28e4:	81 f0       	breq	.+32     	; 0x2906 <ucg_dev_ic_st7735_18+0x48>
    28e6:	4d c0       	rjmp	.+154    	; 0x2982 <ucg_dev_ic_st7735_18+0xc4>
    28e8:	64 31       	cpi	r22, 0x14	; 20
    28ea:	71 05       	cpc	r23, r1
    28ec:	11 f1       	breq	.+68     	; 0x2932 <ucg_dev_ic_st7735_18+0x74>
    28ee:	65 31       	cpi	r22, 0x15	; 21
    28f0:	71 05       	cpc	r23, r1
    28f2:	09 f4       	brne	.+2      	; 0x28f6 <ucg_dev_ic_st7735_18+0x38>
    28f4:	41 c0       	rjmp	.+130    	; 0x2978 <ucg_dev_ic_st7735_18+0xba>
    28f6:	45 c0       	rjmp	.+138    	; 0x2982 <ucg_dev_ic_st7735_18+0xc4>
  {
    case UCG_MSG_DEV_POWER_UP:
      /* setup com interface and provide information on the clock speed */
      /* of the serial and parallel interface. Values are nanoseconds. */
      return ucg_com_PowerUp(ucg, 100, 66);
    28f8:	42 e4       	ldi	r20, 0x42	; 66
    28fa:	50 e0       	ldi	r21, 0x00	; 0
    28fc:	64 e6       	ldi	r22, 0x64	; 100
    28fe:	70 e0       	ldi	r23, 0x00	; 0
    2900:	0e 94 2f 11 	call	0x225e	; 0x225e <ucg_com_PowerUp>
    2904:	44 c0       	rjmp	.+136    	; 0x298e <ucg_dev_ic_st7735_18+0xd0>
    case UCG_MSG_DEV_POWER_DOWN:
      ucg_com_SendCmdSeq(ucg, ucg_st7735_power_down_seq);
    2906:	6c e9       	ldi	r22, 0x9C	; 156
    2908:	72 e0       	ldi	r23, 0x02	; 2
    290a:	0e 94 0d 12 	call	0x241a	; 0x241a <ucg_com_SendCmdSeq>
      return 1;
    290e:	81 e0       	ldi	r24, 0x01	; 1
    2910:	90 e0       	ldi	r25, 0x00	; 0
    2912:	3d c0       	rjmp	.+122    	; 0x298e <ucg_dev_ic_st7735_18+0xd0>
    case UCG_MSG_GET_DIMENSION:
      ((ucg_wh_t *)data)->w = 128;
    2914:	80 e8       	ldi	r24, 0x80	; 128
    2916:	90 e0       	ldi	r25, 0x00	; 0
    2918:	da 01       	movw	r26, r20
    291a:	8d 93       	st	X+, r24
    291c:	9c 93       	st	X, r25
    291e:	11 97       	sbiw	r26, 0x01	; 1
      ((ucg_wh_t *)data)->h = 160;
    2920:	80 ea       	ldi	r24, 0xA0	; 160
    2922:	90 e0       	ldi	r25, 0x00	; 0
    2924:	12 96       	adiw	r26, 0x02	; 2
    2926:	8d 93       	st	X+, r24
    2928:	9c 93       	st	X, r25
    292a:	13 97       	sbiw	r26, 0x03	; 3
      return 1;
    292c:	81 e0       	ldi	r24, 0x01	; 1
    292e:	90 e0       	ldi	r25, 0x00	; 0
    2930:	2e c0       	rjmp	.+92     	; 0x298e <ucg_dev_ic_st7735_18+0xd0>
    case UCG_MSG_DRAW_PIXEL:
      if ( ucg_clip_is_pixel_visible(ucg) !=0 )
    2932:	0e 94 ca 0f 	call	0x1f94	; 0x1f94 <ucg_clip_is_pixel_visible>
    2936:	89 2b       	or	r24, r25
    2938:	41 f1       	breq	.+80     	; 0x298a <ucg_dev_ic_st7735_18+0xcc>
      {
	uint8_t c[3];
	ucg_com_SendCmdSeq(ucg, ucg_st7735_set_pos_seq);	
    293a:	67 e2       	ldi	r22, 0x27	; 39
    293c:	73 e0       	ldi	r23, 0x03	; 3
    293e:	c8 01       	movw	r24, r16
    2940:	0e 94 0d 12 	call	0x241a	; 0x241a <ucg_com_SendCmdSeq>
	c[0] = ucg->arg.pixel.rgb.color[0];
    2944:	f8 01       	movw	r30, r16
    2946:	87 89       	ldd	r24, Z+23	; 0x17
    2948:	89 83       	std	Y+1, r24	; 0x01
	c[1] = ucg->arg.pixel.rgb.color[1];
    294a:	80 8d       	ldd	r24, Z+24	; 0x18
    294c:	8a 83       	std	Y+2, r24	; 0x02
	c[2] = ucg->arg.pixel.rgb.color[2];
    294e:	81 8d       	ldd	r24, Z+25	; 0x19
    2950:	8b 83       	std	Y+3, r24	; 0x03
	ucg_com_SendRepeat3Bytes(ucg, 1, c);
    2952:	01 88       	ldd	r0, Z+17	; 0x11
    2954:	f2 89       	ldd	r31, Z+18	; 0x12
    2956:	e0 2d       	mov	r30, r0
    2958:	9e 01       	movw	r18, r28
    295a:	2f 5f       	subi	r18, 0xFF	; 255
    295c:	3f 4f       	sbci	r19, 0xFF	; 255
    295e:	41 e0       	ldi	r20, 0x01	; 1
    2960:	50 e0       	ldi	r21, 0x00	; 0
    2962:	63 e1       	ldi	r22, 0x13	; 19
    2964:	70 e0       	ldi	r23, 0x00	; 0
    2966:	c8 01       	movw	r24, r16
    2968:	19 95       	eicall
	ucg_com_SetCSLineStatus(ucg, 1);		/* disable chip */
    296a:	61 e0       	ldi	r22, 0x01	; 1
    296c:	c8 01       	movw	r24, r16
    296e:	0e 94 b2 11 	call	0x2364	; 0x2364 <ucg_com_SetCSLineStatus>
      }
      return 1;
    2972:	81 e0       	ldi	r24, 0x01	; 1
    2974:	90 e0       	ldi	r25, 0x00	; 0
    2976:	0b c0       	rjmp	.+22     	; 0x298e <ucg_dev_ic_st7735_18+0xd0>
    case UCG_MSG_DRAW_L90FX:
      //ucg_handle_l90fx(ucg, ucg_dev_ic_st7735_18);
      ucg_handle_st7735_l90fx(ucg);
    2978:	0e 94 25 13 	call	0x264a	; 0x264a <ucg_handle_st7735_l90fx>
      return 1;
    297c:	81 e0       	ldi	r24, 0x01	; 1
    297e:	90 e0       	ldi	r25, 0x00	; 0
    2980:	06 c0       	rjmp	.+12     	; 0x298e <ucg_dev_ic_st7735_18+0xd0>
    /*
    case UCG_MSG_DRAW_L90SE:
      return ucg->ext_cb(ucg, msg, data);
    */
  }
  return ucg_dev_default_cb(ucg, msg, data);  
    2982:	c8 01       	movw	r24, r16
    2984:	0e 94 04 13 	call	0x2608	; 0x2608 <ucg_dev_default_cb>
    2988:	02 c0       	rjmp	.+4      	; 0x298e <ucg_dev_ic_st7735_18+0xd0>
	c[1] = ucg->arg.pixel.rgb.color[1];
	c[2] = ucg->arg.pixel.rgb.color[2];
	ucg_com_SendRepeat3Bytes(ucg, 1, c);
	ucg_com_SetCSLineStatus(ucg, 1);		/* disable chip */
      }
      return 1;
    298a:	81 e0       	ldi	r24, 0x01	; 1
    298c:	90 e0       	ldi	r25, 0x00	; 0
    case UCG_MSG_DRAW_L90SE:
      return ucg->ext_cb(ucg, msg, data);
    */
  }
  return ucg_dev_default_cb(ucg, msg, data);  
}
    298e:	23 96       	adiw	r28, 0x03	; 3
    2990:	cd bf       	out	0x3d, r28	; 61
    2992:	de bf       	out	0x3e, r29	; 62
    2994:	df 91       	pop	r29
    2996:	cf 91       	pop	r28
    2998:	1f 91       	pop	r17
    299a:	0f 91       	pop	r16
    299c:	08 95       	ret

0000299e <ucg_ext_st7735_18>:

ucg_int_t ucg_ext_st7735_18(ucg_t *ucg, ucg_int_t msg, void *data)
{
  switch(msg)
    299e:	67 31       	cpi	r22, 0x17	; 23
    29a0:	71 05       	cpc	r23, r1
    29a2:	11 f4       	brne	.+4      	; 0x29a8 <ucg_ext_st7735_18+0xa>
  {
    case UCG_MSG_DRAW_L90SE:
      //ucg_handle_l90se(ucg, ucg_dev_ic_st7735_18);
      ucg_handle_st7735_l90se(ucg);
    29a4:	0e 94 97 13 	call	0x272e	; 0x272e <ucg_handle_st7735_l90se>
      break;
  }
  return 1;
    29a8:	81 e0       	ldi	r24, 0x01	; 1
    29aa:	90 e0       	ldi	r25, 0x00	; 0
    29ac:	08 95       	ret

000029ae <ucg_PowerDown>:
  ucg_SetMaxClipRange(ucg);
}

void ucg_DrawPixelWithArg(ucg_t *ucg)
{
  ucg->device_cb(ucg, UCG_MSG_DRAW_PIXEL, NULL);
    29ae:	cf 93       	push	r28
    29b0:	df 93       	push	r29
    29b2:	fc 01       	movw	r30, r24
    29b4:	20 81       	ld	r18, Z
    29b6:	20 ff       	sbrs	r18, 0
    29b8:	0c c0       	rjmp	.+24     	; 0x29d2 <ucg_PowerDown+0x24>
    29ba:	ec 01       	movw	r28, r24
    29bc:	05 80       	ldd	r0, Z+5	; 0x05
    29be:	f6 81       	ldd	r31, Z+6	; 0x06
    29c0:	e0 2d       	mov	r30, r0
    29c2:	40 e0       	ldi	r20, 0x00	; 0
    29c4:	50 e0       	ldi	r21, 0x00	; 0
    29c6:	6b e0       	ldi	r22, 0x0B	; 11
    29c8:	70 e0       	ldi	r23, 0x00	; 0
    29ca:	19 95       	eicall
    29cc:	88 81       	ld	r24, Y
    29ce:	8e 7f       	andi	r24, 0xFE	; 254
    29d0:	88 83       	st	Y, r24
    29d2:	df 91       	pop	r29
    29d4:	cf 91       	pop	r28
    29d6:	08 95       	ret

000029d8 <ucg_PowerUp>:
    29d8:	cf 93       	push	r28
    29da:	df 93       	push	r29
    29dc:	ec 01       	movw	r28, r24
    29de:	0e 94 d7 14 	call	0x29ae	; 0x29ae <ucg_PowerDown>
    29e2:	ed 81       	ldd	r30, Y+5	; 0x05
    29e4:	fe 81       	ldd	r31, Y+6	; 0x06
    29e6:	40 e0       	ldi	r20, 0x00	; 0
    29e8:	50 e0       	ldi	r21, 0x00	; 0
    29ea:	6a e0       	ldi	r22, 0x0A	; 10
    29ec:	70 e0       	ldi	r23, 0x00	; 0
    29ee:	ce 01       	movw	r24, r28
    29f0:	19 95       	eicall
    29f2:	00 97       	sbiw	r24, 0x00	; 0
    29f4:	19 f0       	breq	.+6      	; 0x29fc <ucg_PowerUp+0x24>
    29f6:	28 81       	ld	r18, Y
    29f8:	21 60       	ori	r18, 0x01	; 1
    29fa:	28 83       	st	Y, r18
    29fc:	df 91       	pop	r29
    29fe:	cf 91       	pop	r28
    2a00:	08 95       	ret

00002a02 <ucg_SetClipBox>:
    2a02:	ab 01       	movw	r20, r22
    2a04:	dc 01       	movw	r26, r24
    2a06:	15 96       	adiw	r26, 0x05	; 5
    2a08:	ed 91       	ld	r30, X+
    2a0a:	fc 91       	ld	r31, X
    2a0c:	16 97       	sbiw	r26, 0x06	; 6
    2a0e:	6c e0       	ldi	r22, 0x0C	; 12
    2a10:	70 e0       	ldi	r23, 0x00	; 0
    2a12:	19 95       	eicall
    2a14:	08 95       	ret

00002a16 <ucg_SetMaxClipRange>:
    2a16:	cf 93       	push	r28
    2a18:	df 93       	push	r29
    2a1a:	cd b7       	in	r28, 0x3d	; 61
    2a1c:	de b7       	in	r29, 0x3e	; 62
    2a1e:	28 97       	sbiw	r28, 0x08	; 8
    2a20:	cd bf       	out	0x3d, r28	; 61
    2a22:	de bf       	out	0x3e, r29	; 62
    2a24:	fc 01       	movw	r30, r24
    2a26:	41 81       	ldd	r20, Z+1	; 0x01
    2a28:	52 81       	ldd	r21, Z+2	; 0x02
    2a2a:	63 81       	ldd	r22, Z+3	; 0x03
    2a2c:	74 81       	ldd	r23, Z+4	; 0x04
    2a2e:	4d 83       	std	Y+5, r20	; 0x05
    2a30:	5e 83       	std	Y+6, r21	; 0x06
    2a32:	6f 83       	std	Y+7, r22	; 0x07
    2a34:	78 87       	std	Y+8, r23	; 0x08
    2a36:	19 82       	std	Y+1, r1	; 0x01
    2a38:	1a 82       	std	Y+2, r1	; 0x02
    2a3a:	1b 82       	std	Y+3, r1	; 0x03
    2a3c:	1c 82       	std	Y+4, r1	; 0x04
    2a3e:	be 01       	movw	r22, r28
    2a40:	6f 5f       	subi	r22, 0xFF	; 255
    2a42:	7f 4f       	sbci	r23, 0xFF	; 255
    2a44:	0e 94 01 15 	call	0x2a02	; 0x2a02 <ucg_SetClipBox>
    2a48:	28 96       	adiw	r28, 0x08	; 8
    2a4a:	cd bf       	out	0x3d, r28	; 61
    2a4c:	de bf       	out	0x3e, r29	; 62
    2a4e:	df 91       	pop	r29
    2a50:	cf 91       	pop	r28
    2a52:	08 95       	ret

00002a54 <ucg_GetDimension>:
    2a54:	cf 93       	push	r28
    2a56:	df 93       	push	r29
    2a58:	ec 01       	movw	r28, r24
    2a5a:	ac 01       	movw	r20, r24
    2a5c:	4f 5f       	subi	r20, 0xFF	; 255
    2a5e:	5f 4f       	sbci	r21, 0xFF	; 255
    2a60:	ed 81       	ldd	r30, Y+5	; 0x05
    2a62:	fe 81       	ldd	r31, Y+6	; 0x06
    2a64:	6f e0       	ldi	r22, 0x0F	; 15
    2a66:	70 e0       	ldi	r23, 0x00	; 0
    2a68:	19 95       	eicall
    2a6a:	ce 01       	movw	r24, r28
    2a6c:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <ucg_SetMaxClipRange>
    2a70:	df 91       	pop	r29
    2a72:	cf 91       	pop	r28
    2a74:	08 95       	ret

00002a76 <ucg_DrawL90FXWithArg>:
}

void ucg_DrawL90FXWithArg(ucg_t *ucg)
{
  ucg->device_cb(ucg, UCG_MSG_DRAW_L90FX, &(ucg->arg));
    2a76:	ac 01       	movw	r20, r24
    2a78:	4d 5e       	subi	r20, 0xED	; 237
    2a7a:	5f 4f       	sbci	r21, 0xFF	; 255
    2a7c:	dc 01       	movw	r26, r24
    2a7e:	15 96       	adiw	r26, 0x05	; 5
    2a80:	ed 91       	ld	r30, X+
    2a82:	fc 91       	ld	r31, X
    2a84:	16 97       	sbiw	r26, 0x06	; 6
    2a86:	65 e1       	ldi	r22, 0x15	; 21
    2a88:	70 e0       	ldi	r23, 0x00	; 0
    2a8a:	19 95       	eicall
    2a8c:	08 95       	ret

00002a8e <ucg_dev_st7735_18x128x160>:
  UCG_CS(1),					/* disable chip */
  UCG_END(),					/* end of sequence */
};

ucg_int_t ucg_dev_st7735_18x128x160(ucg_t *ucg, ucg_int_t msg, void *data)
{
    2a8e:	cf 93       	push	r28
    2a90:	df 93       	push	r29
    2a92:	ec 01       	movw	r28, r24
  switch(msg)
    2a94:	6b 30       	cpi	r22, 0x0B	; 11
    2a96:	71 05       	cpc	r23, r1
    2a98:	a1 f0       	breq	.+40     	; 0x2ac2 <ucg_dev_st7735_18x128x160+0x34>
    2a9a:	6f 30       	cpi	r22, 0x0F	; 15
    2a9c:	71 05       	cpc	r23, r1
    2a9e:	b1 f0       	breq	.+44     	; 0x2acc <ucg_dev_st7735_18x128x160+0x3e>
    2aa0:	6a 30       	cpi	r22, 0x0A	; 10
    2aa2:	71 05       	cpc	r23, r1
    2aa4:	f9 f4       	brne	.+62     	; 0x2ae4 <ucg_dev_st7735_18x128x160+0x56>
  {
    case UCG_MSG_DEV_POWER_UP:
      /* 1. Call to the controller procedures to setup the com interface */
      if ( ucg_dev_ic_st7735_18(ucg, msg, data) == 0 )
    2aa6:	6a e0       	ldi	r22, 0x0A	; 10
    2aa8:	70 e0       	ldi	r23, 0x00	; 0
    2aaa:	0e 94 5f 14 	call	0x28be	; 0x28be <ucg_dev_ic_st7735_18>
    2aae:	00 97       	sbiw	r24, 0x00	; 0
    2ab0:	d9 f0       	breq	.+54     	; 0x2ae8 <ucg_dev_st7735_18x128x160+0x5a>
	return 0;

      /* 2. Send specific init sequence for this display module */
      ucg_com_SendCmdSeq(ucg, ucg_tft_128x160_st7735_init_seq);
    2ab2:	65 e4       	ldi	r22, 0x45	; 69
    2ab4:	73 e0       	ldi	r23, 0x03	; 3
    2ab6:	ce 01       	movw	r24, r28
    2ab8:	0e 94 0d 12 	call	0x241a	; 0x241a <ucg_com_SendCmdSeq>
      
      return 1;
    2abc:	81 e0       	ldi	r24, 0x01	; 1
    2abe:	90 e0       	ldi	r25, 0x00	; 0
    2ac0:	13 c0       	rjmp	.+38     	; 0x2ae8 <ucg_dev_st7735_18x128x160+0x5a>
      
    case UCG_MSG_DEV_POWER_DOWN:
      /* let do power down by the conroller procedures */
      return ucg_dev_ic_st7735_18(ucg, msg, data);  
    2ac2:	6b e0       	ldi	r22, 0x0B	; 11
    2ac4:	70 e0       	ldi	r23, 0x00	; 0
    2ac6:	0e 94 5f 14 	call	0x28be	; 0x28be <ucg_dev_ic_st7735_18>
    2aca:	0e c0       	rjmp	.+28     	; 0x2ae8 <ucg_dev_st7735_18x128x160+0x5a>
    
    case UCG_MSG_GET_DIMENSION:
      ((ucg_wh_t *)data)->w = 128;
    2acc:	80 e8       	ldi	r24, 0x80	; 128
    2ace:	90 e0       	ldi	r25, 0x00	; 0
    2ad0:	fa 01       	movw	r30, r20
    2ad2:	80 83       	st	Z, r24
    2ad4:	91 83       	std	Z+1, r25	; 0x01
      ((ucg_wh_t *)data)->h = 160;
    2ad6:	80 ea       	ldi	r24, 0xA0	; 160
    2ad8:	90 e0       	ldi	r25, 0x00	; 0
    2ada:	82 83       	std	Z+2, r24	; 0x02
    2adc:	93 83       	std	Z+3, r25	; 0x03
      return 1;
    2ade:	81 e0       	ldi	r24, 0x01	; 1
    2ae0:	90 e0       	ldi	r25, 0x00	; 0
    2ae2:	02 c0       	rjmp	.+4      	; 0x2ae8 <ucg_dev_st7735_18x128x160+0x5a>
  }
  
  /* all other messages are handled by the controller procedures */
  return ucg_dev_ic_st7735_18(ucg, msg, data);  
    2ae4:	0e 94 5f 14 	call	0x28be	; 0x28be <ucg_dev_ic_st7735_18>
}
    2ae8:	df 91       	pop	r29
    2aea:	cf 91       	pop	r28
    2aec:	08 95       	ret

00002aee <ucg_font_get_word>:
  return tmp;
}

void ucg_SetFontPosCenter(ucg_t *ucg)
{
  ucg->font_calc_vref = ucg_font_calc_vref_center;
    2aee:	fc 01       	movw	r30, r24
    2af0:	e6 0f       	add	r30, r22
    2af2:	f1 1d       	adc	r31, r1
    2af4:	84 91       	lpm	r24, Z
    2af6:	90 e0       	ldi	r25, 0x00	; 0
    2af8:	98 2f       	mov	r25, r24
    2afa:	88 27       	eor	r24, r24
    2afc:	31 96       	adiw	r30, 0x01	; 1
    2afe:	e4 91       	lpm	r30, Z
    2b00:	8e 0f       	add	r24, r30
    2b02:	91 1d       	adc	r25, r1
    2b04:	08 95       	ret

00002b06 <ucg_add_vector_y>:
    2b06:	21 30       	cpi	r18, 0x01	; 1
    2b08:	49 f0       	breq	.+18     	; 0x2b1c <ucg_add_vector_y+0x16>
    2b0a:	18 f0       	brcs	.+6      	; 0x2b12 <ucg_add_vector_y+0xc>
    2b0c:	22 30       	cpi	r18, 0x02	; 2
    2b0e:	59 f0       	breq	.+22     	; 0x2b26 <ucg_add_vector_y+0x20>
    2b10:	0f c0       	rjmp	.+30     	; 0x2b30 <ucg_add_vector_y+0x2a>
    2b12:	84 0f       	add	r24, r20
    2b14:	91 1d       	adc	r25, r1
    2b16:	47 fd       	sbrc	r20, 7
    2b18:	9a 95       	dec	r25
    2b1a:	08 95       	ret
    2b1c:	86 0f       	add	r24, r22
    2b1e:	91 1d       	adc	r25, r1
    2b20:	67 fd       	sbrc	r22, 7
    2b22:	9a 95       	dec	r25
    2b24:	08 95       	ret
    2b26:	84 1b       	sub	r24, r20
    2b28:	91 09       	sbc	r25, r1
    2b2a:	47 fd       	sbrc	r20, 7
    2b2c:	93 95       	inc	r25
    2b2e:	08 95       	ret
    2b30:	86 1b       	sub	r24, r22
    2b32:	91 09       	sbc	r25, r1
    2b34:	67 fd       	sbrc	r22, 7
    2b36:	93 95       	inc	r25
    2b38:	08 95       	ret

00002b3a <ucg_add_vector_x>:
    2b3a:	21 30       	cpi	r18, 0x01	; 1
    2b3c:	49 f0       	breq	.+18     	; 0x2b50 <ucg_add_vector_x+0x16>
    2b3e:	18 f0       	brcs	.+6      	; 0x2b46 <ucg_add_vector_x+0xc>
    2b40:	22 30       	cpi	r18, 0x02	; 2
    2b42:	59 f0       	breq	.+22     	; 0x2b5a <ucg_add_vector_x+0x20>
    2b44:	0f c0       	rjmp	.+30     	; 0x2b64 <ucg_add_vector_x+0x2a>
    2b46:	86 0f       	add	r24, r22
    2b48:	91 1d       	adc	r25, r1
    2b4a:	67 fd       	sbrc	r22, 7
    2b4c:	9a 95       	dec	r25
    2b4e:	08 95       	ret
    2b50:	84 1b       	sub	r24, r20
    2b52:	91 09       	sbc	r25, r1
    2b54:	47 fd       	sbrc	r20, 7
    2b56:	93 95       	inc	r25
    2b58:	08 95       	ret
    2b5a:	86 1b       	sub	r24, r22
    2b5c:	91 09       	sbc	r25, r1
    2b5e:	67 fd       	sbrc	r22, 7
    2b60:	93 95       	inc	r25
    2b62:	08 95       	ret
    2b64:	84 0f       	add	r24, r20
    2b66:	91 1d       	adc	r25, r1
    2b68:	47 fd       	sbrc	r20, 7
    2b6a:	9a 95       	dec	r25
    2b6c:	08 95       	ret

00002b6e <ucg_font_calc_vref_font>:
    2b6e:	80 e0       	ldi	r24, 0x00	; 0
    2b70:	90 e0       	ldi	r25, 0x00	; 0
    2b72:	08 95       	ret

00002b74 <ucg_read_font_info>:
    2b74:	0f 93       	push	r16
    2b76:	1f 93       	push	r17
    2b78:	cf 93       	push	r28
    2b7a:	df 93       	push	r29
    2b7c:	ec 01       	movw	r28, r24
    2b7e:	8b 01       	movw	r16, r22
    2b80:	fb 01       	movw	r30, r22
    2b82:	84 91       	lpm	r24, Z
    2b84:	88 83       	st	Y, r24
    2b86:	31 96       	adiw	r30, 0x01	; 1
    2b88:	e4 91       	lpm	r30, Z
    2b8a:	e9 83       	std	Y+1, r30	; 0x01
    2b8c:	fb 01       	movw	r30, r22
    2b8e:	32 96       	adiw	r30, 0x02	; 2
    2b90:	e4 91       	lpm	r30, Z
    2b92:	ea 83       	std	Y+2, r30	; 0x02
    2b94:	fb 01       	movw	r30, r22
    2b96:	33 96       	adiw	r30, 0x03	; 3
    2b98:	e4 91       	lpm	r30, Z
    2b9a:	eb 83       	std	Y+3, r30	; 0x03
    2b9c:	fb 01       	movw	r30, r22
    2b9e:	34 96       	adiw	r30, 0x04	; 4
    2ba0:	e4 91       	lpm	r30, Z
    2ba2:	ec 83       	std	Y+4, r30	; 0x04
    2ba4:	fb 01       	movw	r30, r22
    2ba6:	35 96       	adiw	r30, 0x05	; 5
    2ba8:	e4 91       	lpm	r30, Z
    2baa:	ed 83       	std	Y+5, r30	; 0x05
    2bac:	fb 01       	movw	r30, r22
    2bae:	36 96       	adiw	r30, 0x06	; 6
    2bb0:	e4 91       	lpm	r30, Z
    2bb2:	ee 83       	std	Y+6, r30	; 0x06
    2bb4:	fb 01       	movw	r30, r22
    2bb6:	37 96       	adiw	r30, 0x07	; 7
    2bb8:	e4 91       	lpm	r30, Z
    2bba:	ef 83       	std	Y+7, r30	; 0x07
    2bbc:	fb 01       	movw	r30, r22
    2bbe:	38 96       	adiw	r30, 0x08	; 8
    2bc0:	e4 91       	lpm	r30, Z
    2bc2:	e8 87       	std	Y+8, r30	; 0x08
    2bc4:	fb 01       	movw	r30, r22
    2bc6:	39 96       	adiw	r30, 0x09	; 9
    2bc8:	e4 91       	lpm	r30, Z
    2bca:	e9 87       	std	Y+9, r30	; 0x09
    2bcc:	fb 01       	movw	r30, r22
    2bce:	3a 96       	adiw	r30, 0x0a	; 10
    2bd0:	e4 91       	lpm	r30, Z
    2bd2:	ea 87       	std	Y+10, r30	; 0x0a
    2bd4:	fb 01       	movw	r30, r22
    2bd6:	3b 96       	adiw	r30, 0x0b	; 11
    2bd8:	e4 91       	lpm	r30, Z
    2bda:	eb 87       	std	Y+11, r30	; 0x0b
    2bdc:	fb 01       	movw	r30, r22
    2bde:	3c 96       	adiw	r30, 0x0c	; 12
    2be0:	e4 91       	lpm	r30, Z
    2be2:	ec 87       	std	Y+12, r30	; 0x0c
    2be4:	fb 01       	movw	r30, r22
    2be6:	3d 96       	adiw	r30, 0x0d	; 13
    2be8:	e4 91       	lpm	r30, Z
    2bea:	ed 87       	std	Y+13, r30	; 0x0d
    2bec:	fb 01       	movw	r30, r22
    2bee:	3e 96       	adiw	r30, 0x0e	; 14
    2bf0:	e4 91       	lpm	r30, Z
    2bf2:	ee 87       	std	Y+14, r30	; 0x0e
    2bf4:	fb 01       	movw	r30, r22
    2bf6:	3f 96       	adiw	r30, 0x0f	; 15
    2bf8:	e4 91       	lpm	r30, Z
    2bfa:	ef 87       	std	Y+15, r30	; 0x0f
    2bfc:	fb 01       	movw	r30, r22
    2bfe:	70 96       	adiw	r30, 0x10	; 16
    2c00:	e4 91       	lpm	r30, Z
    2c02:	e8 8b       	std	Y+16, r30	; 0x10
    2c04:	61 e1       	ldi	r22, 0x11	; 17
    2c06:	c8 01       	movw	r24, r16
    2c08:	0e 94 77 15 	call	0x2aee	; 0x2aee <ucg_font_get_word>
    2c0c:	89 8b       	std	Y+17, r24	; 0x11
    2c0e:	9a 8b       	std	Y+18, r25	; 0x12
    2c10:	63 e1       	ldi	r22, 0x13	; 19
    2c12:	c8 01       	movw	r24, r16
    2c14:	0e 94 77 15 	call	0x2aee	; 0x2aee <ucg_font_get_word>
    2c18:	8b 8b       	std	Y+19, r24	; 0x13
    2c1a:	9c 8b       	std	Y+20, r25	; 0x14
    2c1c:	df 91       	pop	r29
    2c1e:	cf 91       	pop	r28
    2c20:	1f 91       	pop	r17
    2c22:	0f 91       	pop	r16
    2c24:	08 95       	ret

00002c26 <ucg_font_decode_get_unsigned_bits>:
    2c26:	dc 01       	movw	r26, r24
    2c28:	1a 96       	adiw	r26, 0x0a	; 10
    2c2a:	9c 91       	ld	r25, X
    2c2c:	1a 97       	sbiw	r26, 0x0a	; 10
    2c2e:	ed 91       	ld	r30, X+
    2c30:	fc 91       	ld	r31, X
    2c32:	11 97       	sbiw	r26, 0x01	; 1
    2c34:	24 91       	lpm	r18, Z
    2c36:	30 e0       	ldi	r19, 0x00	; 0
    2c38:	09 2e       	mov	r0, r25
    2c3a:	02 c0       	rjmp	.+4      	; 0x2c40 <ucg_font_decode_get_unsigned_bits+0x1a>
    2c3c:	35 95       	asr	r19
    2c3e:	27 95       	ror	r18
    2c40:	0a 94       	dec	r0
    2c42:	e2 f7       	brpl	.-8      	; 0x2c3c <ucg_font_decode_get_unsigned_bits+0x16>
    2c44:	89 2f       	mov	r24, r25
    2c46:	86 0f       	add	r24, r22
    2c48:	88 30       	cpi	r24, 0x08	; 8
    2c4a:	10 f4       	brcc	.+4      	; 0x2c50 <ucg_font_decode_get_unsigned_bits+0x2a>
    2c4c:	e2 2f       	mov	r30, r18
    2c4e:	0f c0       	rjmp	.+30     	; 0x2c6e <ucg_font_decode_get_unsigned_bits+0x48>
    2c50:	31 96       	adiw	r30, 0x01	; 1
    2c52:	ed 93       	st	X+, r30
    2c54:	fc 93       	st	X, r31
    2c56:	11 97       	sbiw	r26, 0x01	; 1
    2c58:	e4 91       	lpm	r30, Z
    2c5a:	f0 e0       	ldi	r31, 0x00	; 0
    2c5c:	38 e0       	ldi	r19, 0x08	; 8
    2c5e:	39 1b       	sub	r19, r25
    2c60:	02 c0       	rjmp	.+4      	; 0x2c66 <ucg_font_decode_get_unsigned_bits+0x40>
    2c62:	ee 0f       	add	r30, r30
    2c64:	ff 1f       	adc	r31, r31
    2c66:	3a 95       	dec	r19
    2c68:	e2 f7       	brpl	.-8      	; 0x2c62 <ucg_font_decode_get_unsigned_bits+0x3c>
    2c6a:	e2 2b       	or	r30, r18
    2c6c:	88 50       	subi	r24, 0x08	; 8
    2c6e:	1a 96       	adiw	r26, 0x0a	; 10
    2c70:	8c 93       	st	X, r24
    2c72:	81 e0       	ldi	r24, 0x01	; 1
    2c74:	90 e0       	ldi	r25, 0x00	; 0
    2c76:	02 c0       	rjmp	.+4      	; 0x2c7c <ucg_font_decode_get_unsigned_bits+0x56>
    2c78:	88 0f       	add	r24, r24
    2c7a:	99 1f       	adc	r25, r25
    2c7c:	6a 95       	dec	r22
    2c7e:	e2 f7       	brpl	.-8      	; 0x2c78 <ucg_font_decode_get_unsigned_bits+0x52>
    2c80:	81 50       	subi	r24, 0x01	; 1
    2c82:	8e 23       	and	r24, r30
    2c84:	08 95       	ret

00002c86 <ucg_font_setup_decode>:
    2c86:	0f 93       	push	r16
    2c88:	1f 93       	push	r17
    2c8a:	cf 93       	push	r28
    2c8c:	df 93       	push	r29
    2c8e:	8c 01       	movw	r16, r24
    2c90:	ec 01       	movw	r28, r24
    2c92:	c8 59       	subi	r28, 0x98	; 152
    2c94:	df 4f       	sbci	r29, 0xFF	; 255
    2c96:	1a 86       	std	Y+10, r1	; 0x0a
    2c98:	6e 5f       	subi	r22, 0xFE	; 254
    2c9a:	7f 4f       	sbci	r23, 0xFF	; 255
    2c9c:	68 83       	st	Y, r22
    2c9e:	79 83       	std	Y+1, r23	; 0x01
    2ca0:	fc 01       	movw	r30, r24
    2ca2:	e7 58       	subi	r30, 0x87	; 135
    2ca4:	ff 4f       	sbci	r31, 0xFF	; 255
    2ca6:	60 81       	ld	r22, Z
    2ca8:	ce 01       	movw	r24, r28
    2caa:	0e 94 13 16 	call	0x2c26	; 0x2c26 <ucg_font_decode_get_unsigned_bits>
    2cae:	88 87       	std	Y+8, r24	; 0x08
    2cb0:	f8 01       	movw	r30, r16
    2cb2:	e6 58       	subi	r30, 0x86	; 134
    2cb4:	ff 4f       	sbci	r31, 0xFF	; 255
    2cb6:	60 81       	ld	r22, Z
    2cb8:	ce 01       	movw	r24, r28
    2cba:	0e 94 13 16 	call	0x2c26	; 0x2c26 <ucg_font_decode_get_unsigned_bits>
    2cbe:	89 87       	std	Y+9, r24	; 0x09
    2cc0:	df 91       	pop	r29
    2cc2:	cf 91       	pop	r28
    2cc4:	1f 91       	pop	r17
    2cc6:	0f 91       	pop	r16
    2cc8:	08 95       	ret

00002cca <ucg_font_decode_get_signed_bits>:
    2cca:	cf 93       	push	r28
    2ccc:	c6 2f       	mov	r28, r22
    2cce:	0e 94 13 16 	call	0x2c26	; 0x2c26 <ucg_font_decode_get_unsigned_bits>
    2cd2:	c1 50       	subi	r28, 0x01	; 1
    2cd4:	21 e0       	ldi	r18, 0x01	; 1
    2cd6:	30 e0       	ldi	r19, 0x00	; 0
    2cd8:	02 c0       	rjmp	.+4      	; 0x2cde <ucg_font_decode_get_signed_bits+0x14>
    2cda:	22 0f       	add	r18, r18
    2cdc:	33 1f       	adc	r19, r19
    2cde:	ca 95       	dec	r28
    2ce0:	e2 f7       	brpl	.-8      	; 0x2cda <ucg_font_decode_get_signed_bits+0x10>
    2ce2:	82 1b       	sub	r24, r18
    2ce4:	cf 91       	pop	r28
    2ce6:	08 95       	ret

00002ce8 <ucg_font_decode_len>:
    2ce8:	3f 92       	push	r3
    2cea:	4f 92       	push	r4
    2cec:	5f 92       	push	r5
    2cee:	6f 92       	push	r6
    2cf0:	7f 92       	push	r7
    2cf2:	8f 92       	push	r8
    2cf4:	9f 92       	push	r9
    2cf6:	af 92       	push	r10
    2cf8:	bf 92       	push	r11
    2cfa:	cf 92       	push	r12
    2cfc:	df 92       	push	r13
    2cfe:	ef 92       	push	r14
    2d00:	ff 92       	push	r15
    2d02:	0f 93       	push	r16
    2d04:	1f 93       	push	r17
    2d06:	cf 93       	push	r28
    2d08:	df 93       	push	r29
    2d0a:	4c 01       	movw	r8, r24
    2d0c:	d6 2f       	mov	r29, r22
    2d0e:	44 2e       	mov	r4, r20
    2d10:	fc 01       	movw	r30, r24
    2d12:	e8 59       	subi	r30, 0x98	; 152
    2d14:	ff 4f       	sbci	r31, 0xFF	; 255
    2d16:	c6 80       	ldd	r12, Z+6	; 0x06
    2d18:	d7 80       	ldd	r13, Z+7	; 0x07
    2d1a:	3f 01       	movw	r6, r30
    2d1c:	f3 01       	movw	r30, r6
    2d1e:	c0 85       	ldd	r28, Z+8	; 0x08
    2d20:	cc 19       	sub	r28, r12
    2d22:	3d 2e       	mov	r3, r29
    2d24:	cd 17       	cp	r28, r29
    2d26:	08 f4       	brcc	.+2      	; 0x2d2a <ucg_font_decode_len+0x42>
    2d28:	3c 2e       	mov	r3, r28
    2d2a:	f3 01       	movw	r30, r6
    2d2c:	e4 80       	ldd	r14, Z+4	; 0x04
    2d2e:	f5 80       	ldd	r15, Z+5	; 0x05
    2d30:	04 85       	ldd	r16, Z+12	; 0x0c
    2d32:	5d 2c       	mov	r5, r13
    2d34:	20 2f       	mov	r18, r16
    2d36:	4d 2d       	mov	r20, r13
    2d38:	6c 2d       	mov	r22, r12
    2d3a:	82 81       	ldd	r24, Z+2	; 0x02
    2d3c:	93 81       	ldd	r25, Z+3	; 0x03
    2d3e:	0e 94 9d 15 	call	0x2b3a	; 0x2b3a <ucg_add_vector_x>
    2d42:	5c 01       	movw	r10, r24
    2d44:	20 2f       	mov	r18, r16
    2d46:	4d 2d       	mov	r20, r13
    2d48:	6c 2d       	mov	r22, r12
    2d4a:	c7 01       	movw	r24, r14
    2d4c:	0e 94 83 15 	call	0x2b06	; 0x2b06 <ucg_add_vector_y>
    2d50:	44 20       	and	r4, r4
    2d52:	59 f0       	breq	.+22     	; 0x2d6a <ucg_font_decode_len+0x82>
    2d54:	10 e0       	ldi	r17, 0x00	; 0
    2d56:	23 2d       	mov	r18, r3
    2d58:	30 e0       	ldi	r19, 0x00	; 0
    2d5a:	e1 2c       	mov	r14, r1
    2d5c:	f1 2c       	mov	r15, r1
    2d5e:	ac 01       	movw	r20, r24
    2d60:	b5 01       	movw	r22, r10
    2d62:	c4 01       	movw	r24, r8
    2d64:	0e 94 c1 18 	call	0x3182	; 0x3182 <ucg_Draw90Line>
    2d68:	0f c0       	rjmp	.+30     	; 0x2d88 <ucg_font_decode_len+0xa0>
    2d6a:	f3 01       	movw	r30, r6
    2d6c:	23 85       	ldd	r18, Z+11	; 0x0b
    2d6e:	21 11       	cpse	r18, r1
    2d70:	0b c0       	rjmp	.+22     	; 0x2d88 <ucg_font_decode_len+0xa0>
    2d72:	10 e0       	ldi	r17, 0x00	; 0
    2d74:	23 2d       	mov	r18, r3
    2d76:	30 e0       	ldi	r19, 0x00	; 0
    2d78:	ee 24       	eor	r14, r14
    2d7a:	e3 94       	inc	r14
    2d7c:	f1 2c       	mov	r15, r1
    2d7e:	ac 01       	movw	r20, r24
    2d80:	b5 01       	movw	r22, r10
    2d82:	c4 01       	movw	r24, r8
    2d84:	0e 94 c1 18 	call	0x3182	; 0x3182 <ucg_Draw90Line>
    2d88:	dc 17       	cp	r29, r28
    2d8a:	20 f0       	brcs	.+8      	; 0x2d94 <ucg_font_decode_len+0xac>
    2d8c:	dc 1b       	sub	r29, r28
    2d8e:	d3 94       	inc	r13
    2d90:	c1 2c       	mov	r12, r1
    2d92:	c4 cf       	rjmp	.-120    	; 0x2d1c <ucg_font_decode_len+0x34>
    2d94:	f4 01       	movw	r30, r8
    2d96:	e8 59       	subi	r30, 0x98	; 152
    2d98:	ff 4f       	sbci	r31, 0xFF	; 255
    2d9a:	dc 0d       	add	r29, r12
    2d9c:	d6 83       	std	Z+6, r29	; 0x06
    2d9e:	57 82       	std	Z+7, r5	; 0x07
    2da0:	df 91       	pop	r29
    2da2:	cf 91       	pop	r28
    2da4:	1f 91       	pop	r17
    2da6:	0f 91       	pop	r16
    2da8:	ff 90       	pop	r15
    2daa:	ef 90       	pop	r14
    2dac:	df 90       	pop	r13
    2dae:	cf 90       	pop	r12
    2db0:	bf 90       	pop	r11
    2db2:	af 90       	pop	r10
    2db4:	9f 90       	pop	r9
    2db6:	8f 90       	pop	r8
    2db8:	7f 90       	pop	r7
    2dba:	6f 90       	pop	r6
    2dbc:	5f 90       	pop	r5
    2dbe:	4f 90       	pop	r4
    2dc0:	3f 90       	pop	r3
    2dc2:	08 95       	ret

00002dc4 <ucg_font_decode_glyph>:
    2dc4:	6f 92       	push	r6
    2dc6:	7f 92       	push	r7
    2dc8:	8f 92       	push	r8
    2dca:	9f 92       	push	r9
    2dcc:	af 92       	push	r10
    2dce:	bf 92       	push	r11
    2dd0:	cf 92       	push	r12
    2dd2:	df 92       	push	r13
    2dd4:	ef 92       	push	r14
    2dd6:	ff 92       	push	r15
    2dd8:	0f 93       	push	r16
    2dda:	1f 93       	push	r17
    2ddc:	cf 93       	push	r28
    2dde:	df 93       	push	r29
    2de0:	ec 01       	movw	r28, r24
    2de2:	8c 01       	movw	r16, r24
    2de4:	08 59       	subi	r16, 0x98	; 152
    2de6:	1f 4f       	sbci	r17, 0xFF	; 255
    2de8:	0e 94 43 16 	call	0x2c86	; 0x2c86 <ucg_font_setup_decode>
    2dec:	fe 01       	movw	r30, r28
    2dee:	ef 58       	subi	r30, 0x8F	; 143
    2df0:	ff 4f       	sbci	r31, 0xFF	; 255
    2df2:	70 80       	ld	r7, Z
    2df4:	3a 96       	adiw	r30, 0x0a	; 10
    2df6:	60 81       	ld	r22, Z
    2df8:	c8 01       	movw	r24, r16
    2dfa:	0e 94 65 16 	call	0x2cca	; 0x2cca <ucg_font_decode_get_signed_bits>
    2dfe:	c8 2e       	mov	r12, r24
    2e00:	fe 01       	movw	r30, r28
    2e02:	e4 58       	subi	r30, 0x84	; 132
    2e04:	ff 4f       	sbci	r31, 0xFF	; 255
    2e06:	60 81       	ld	r22, Z
    2e08:	c8 01       	movw	r24, r16
    2e0a:	0e 94 65 16 	call	0x2cca	; 0x2cca <ucg_font_decode_get_signed_bits>
    2e0e:	d8 2e       	mov	r13, r24
    2e10:	fe 01       	movw	r30, r28
    2e12:	e3 58       	subi	r30, 0x83	; 131
    2e14:	ff 4f       	sbci	r31, 0xFF	; 255
    2e16:	60 81       	ld	r22, Z
    2e18:	c8 01       	movw	r24, r16
    2e1a:	0e 94 65 16 	call	0x2cca	; 0x2cca <ucg_font_decode_get_signed_bits>
    2e1e:	68 2e       	mov	r6, r24
    2e20:	f8 01       	movw	r30, r16
    2e22:	80 85       	ldd	r24, Z+8	; 0x08
    2e24:	18 16       	cp	r1, r24
    2e26:	0c f0       	brlt	.+2      	; 0x2e2a <ucg_font_decode_glyph+0x66>
    2e28:	42 c0       	rjmp	.+132    	; 0x2eae <ucg_font_decode_glyph+0xea>
    2e2a:	b4 84       	ldd	r11, Z+12	; 0x0c
    2e2c:	d7 0c       	add	r13, r7
    2e2e:	d1 94       	neg	r13
    2e30:	2b 2d       	mov	r18, r11
    2e32:	4d 2d       	mov	r20, r13
    2e34:	6c 2d       	mov	r22, r12
    2e36:	82 81       	ldd	r24, Z+2	; 0x02
    2e38:	93 81       	ldd	r25, Z+3	; 0x03
    2e3a:	0e 94 9d 15 	call	0x2b3a	; 0x2b3a <ucg_add_vector_x>
    2e3e:	f8 01       	movw	r30, r16
    2e40:	82 83       	std	Z+2, r24	; 0x02
    2e42:	93 83       	std	Z+3, r25	; 0x03
    2e44:	2b 2d       	mov	r18, r11
    2e46:	4d 2d       	mov	r20, r13
    2e48:	6c 2d       	mov	r22, r12
    2e4a:	84 81       	ldd	r24, Z+4	; 0x04
    2e4c:	95 81       	ldd	r25, Z+5	; 0x05
    2e4e:	0e 94 83 15 	call	0x2b06	; 0x2b06 <ucg_add_vector_y>
    2e52:	f8 01       	movw	r30, r16
    2e54:	84 83       	std	Z+4, r24	; 0x04
    2e56:	95 83       	std	Z+5, r25	; 0x05
    2e58:	16 82       	std	Z+6, r1	; 0x06
    2e5a:	17 82       	std	Z+7, r1	; 0x07
    2e5c:	4e 01       	movw	r8, r28
    2e5e:	f7 e7       	ldi	r31, 0x77	; 119
    2e60:	8f 0e       	add	r8, r31
    2e62:	91 1c       	adc	r9, r1
    2e64:	5e 01       	movw	r10, r28
    2e66:	88 e7       	ldi	r24, 0x78	; 120
    2e68:	a8 0e       	add	r10, r24
    2e6a:	b1 1c       	adc	r11, r1
    2e6c:	68 01       	movw	r12, r16
    2e6e:	f4 01       	movw	r30, r8
    2e70:	60 81       	ld	r22, Z
    2e72:	c8 01       	movw	r24, r16
    2e74:	0e 94 13 16 	call	0x2c26	; 0x2c26 <ucg_font_decode_get_unsigned_bits>
    2e78:	e8 2e       	mov	r14, r24
    2e7a:	f5 01       	movw	r30, r10
    2e7c:	60 81       	ld	r22, Z
    2e7e:	c8 01       	movw	r24, r16
    2e80:	0e 94 13 16 	call	0x2c26	; 0x2c26 <ucg_font_decode_get_unsigned_bits>
    2e84:	f8 2e       	mov	r15, r24
    2e86:	40 e0       	ldi	r20, 0x00	; 0
    2e88:	6e 2d       	mov	r22, r14
    2e8a:	ce 01       	movw	r24, r28
    2e8c:	0e 94 74 16 	call	0x2ce8	; 0x2ce8 <ucg_font_decode_len>
    2e90:	41 e0       	ldi	r20, 0x01	; 1
    2e92:	6f 2d       	mov	r22, r15
    2e94:	ce 01       	movw	r24, r28
    2e96:	0e 94 74 16 	call	0x2ce8	; 0x2ce8 <ucg_font_decode_len>
    2e9a:	61 e0       	ldi	r22, 0x01	; 1
    2e9c:	c8 01       	movw	r24, r16
    2e9e:	0e 94 13 16 	call	0x2c26	; 0x2c26 <ucg_font_decode_get_unsigned_bits>
    2ea2:	81 11       	cpse	r24, r1
    2ea4:	f0 cf       	rjmp	.-32     	; 0x2e86 <ucg_font_decode_glyph+0xc2>
    2ea6:	f6 01       	movw	r30, r12
    2ea8:	87 81       	ldd	r24, Z+7	; 0x07
    2eaa:	87 15       	cp	r24, r7
    2eac:	04 f3       	brlt	.-64     	; 0x2e6e <ucg_font_decode_glyph+0xaa>
    2eae:	86 2d       	mov	r24, r6
    2eb0:	df 91       	pop	r29
    2eb2:	cf 91       	pop	r28
    2eb4:	1f 91       	pop	r17
    2eb6:	0f 91       	pop	r16
    2eb8:	ff 90       	pop	r15
    2eba:	ef 90       	pop	r14
    2ebc:	df 90       	pop	r13
    2ebe:	cf 90       	pop	r12
    2ec0:	bf 90       	pop	r11
    2ec2:	af 90       	pop	r10
    2ec4:	9f 90       	pop	r9
    2ec6:	8f 90       	pop	r8
    2ec8:	7f 90       	pop	r7
    2eca:	6f 90       	pop	r6
    2ecc:	08 95       	ret

00002ece <ucg_font_get_glyph_data>:
    2ece:	fc 01       	movw	r30, r24
    2ed0:	ec 59       	subi	r30, 0x9C	; 156
    2ed2:	ff 4f       	sbci	r31, 0xFF	; 255
    2ed4:	20 81       	ld	r18, Z
    2ed6:	31 81       	ldd	r19, Z+1	; 0x01
    2ed8:	2b 5e       	subi	r18, 0xEB	; 235
    2eda:	3f 4f       	sbci	r19, 0xFF	; 255
    2edc:	61 36       	cpi	r22, 0x61	; 97
    2ede:	30 f0       	brcs	.+12     	; 0x2eec <ucg_font_get_glyph_data+0x1e>
    2ee0:	b4 96       	adiw	r30, 0x24	; 36
    2ee2:	80 81       	ld	r24, Z
    2ee4:	91 81       	ldd	r25, Z+1	; 0x01
    2ee6:	28 0f       	add	r18, r24
    2ee8:	39 1f       	adc	r19, r25
    2eea:	09 c0       	rjmp	.+18     	; 0x2efe <ucg_font_get_glyph_data+0x30>
    2eec:	61 34       	cpi	r22, 0x41	; 65
    2eee:	38 f0       	brcs	.+14     	; 0x2efe <ucg_font_get_glyph_data+0x30>
    2ef0:	fc 01       	movw	r30, r24
    2ef2:	ea 57       	subi	r30, 0x7A	; 122
    2ef4:	ff 4f       	sbci	r31, 0xFF	; 255
    2ef6:	80 81       	ld	r24, Z
    2ef8:	91 81       	ldd	r25, Z+1	; 0x01
    2efa:	28 0f       	add	r18, r24
    2efc:	39 1f       	adc	r19, r25
    2efe:	c9 01       	movw	r24, r18
    2f00:	01 96       	adiw	r24, 0x01	; 1
    2f02:	fc 01       	movw	r30, r24
    2f04:	44 91       	lpm	r20, Z
    2f06:	44 23       	and	r20, r20
    2f08:	b1 f0       	breq	.+44     	; 0x2f36 <ucg_font_get_glyph_data+0x68>
    2f0a:	f9 01       	movw	r30, r18
    2f0c:	44 91       	lpm	r20, Z
    2f0e:	64 13       	cpse	r22, r20
    2f10:	05 c0       	rjmp	.+10     	; 0x2f1c <ucg_font_get_glyph_data+0x4e>
    2f12:	14 c0       	rjmp	.+40     	; 0x2f3c <ucg_font_get_glyph_data+0x6e>
    2f14:	f9 01       	movw	r30, r18
    2f16:	44 91       	lpm	r20, Z
    2f18:	64 17       	cp	r22, r20
    2f1a:	99 f0       	breq	.+38     	; 0x2f42 <ucg_font_get_glyph_data+0x74>
    2f1c:	fc 01       	movw	r30, r24
    2f1e:	84 91       	lpm	r24, Z
    2f20:	28 0f       	add	r18, r24
    2f22:	31 1d       	adc	r19, r1
    2f24:	c9 01       	movw	r24, r18
    2f26:	01 96       	adiw	r24, 0x01	; 1
    2f28:	fc 01       	movw	r30, r24
    2f2a:	44 91       	lpm	r20, Z
    2f2c:	41 11       	cpse	r20, r1
    2f2e:	f2 cf       	rjmp	.-28     	; 0x2f14 <ucg_font_get_glyph_data+0x46>
    2f30:	80 e0       	ldi	r24, 0x00	; 0
    2f32:	90 e0       	ldi	r25, 0x00	; 0
    2f34:	08 95       	ret
    2f36:	80 e0       	ldi	r24, 0x00	; 0
    2f38:	90 e0       	ldi	r25, 0x00	; 0
    2f3a:	08 95       	ret
    2f3c:	82 2f       	mov	r24, r18
    2f3e:	93 2f       	mov	r25, r19
    2f40:	08 95       	ret
    2f42:	82 2f       	mov	r24, r18
    2f44:	93 2f       	mov	r25, r19
    2f46:	08 95       	ret

00002f48 <ucg_font_draw_glyph>:
    2f48:	0f 93       	push	r16
    2f4a:	cf 93       	push	r28
    2f4c:	df 93       	push	r29
    2f4e:	ec 01       	movw	r28, r24
    2f50:	fc 01       	movw	r30, r24
    2f52:	e6 59       	subi	r30, 0x96	; 150
    2f54:	ff 4f       	sbci	r31, 0xFF	; 255
    2f56:	60 83       	st	Z, r22
    2f58:	71 83       	std	Z+1, r23	; 0x01
    2f5a:	32 96       	adiw	r30, 0x02	; 2
    2f5c:	40 83       	st	Z, r20
    2f5e:	51 83       	std	Z+1, r21	; 0x01
    2f60:	38 96       	adiw	r30, 0x08	; 8
    2f62:	20 83       	st	Z, r18
    2f64:	60 2f       	mov	r22, r16
    2f66:	0e 94 67 17 	call	0x2ece	; 0x2ece <ucg_font_get_glyph_data>
    2f6a:	00 97       	sbiw	r24, 0x00	; 0
    2f6c:	41 f0       	breq	.+16     	; 0x2f7e <ucg_font_draw_glyph+0x36>
    2f6e:	bc 01       	movw	r22, r24
    2f70:	ce 01       	movw	r24, r28
    2f72:	0e 94 e2 16 	call	0x2dc4	; 0x2dc4 <ucg_font_decode_glyph>
    2f76:	08 2e       	mov	r0, r24
    2f78:	00 0c       	add	r0, r0
    2f7a:	99 0b       	sbc	r25, r25
    2f7c:	02 c0       	rjmp	.+4      	; 0x2f82 <ucg_font_draw_glyph+0x3a>
    2f7e:	80 e0       	ldi	r24, 0x00	; 0
    2f80:	90 e0       	ldi	r25, 0x00	; 0
    2f82:	df 91       	pop	r29
    2f84:	cf 91       	pop	r28
    2f86:	0f 91       	pop	r16
    2f88:	08 95       	ret

00002f8a <ucg_SetFontMode>:
    2f8a:	8d 58       	subi	r24, 0x8D	; 141
    2f8c:	9f 4f       	sbci	r25, 0xFF	; 255
    2f8e:	fc 01       	movw	r30, r24
    2f90:	60 83       	st	Z, r22
    2f92:	08 95       	ret

00002f94 <ucg_DrawGlyph>:
    2f94:	af 92       	push	r10
    2f96:	bf 92       	push	r11
    2f98:	cf 92       	push	r12
    2f9a:	df 92       	push	r13
    2f9c:	ef 92       	push	r14
    2f9e:	ff 92       	push	r15
    2fa0:	0f 93       	push	r16
    2fa2:	cf 93       	push	r28
    2fa4:	7c 01       	movw	r14, r24
    2fa6:	6b 01       	movw	r12, r22
    2fa8:	5a 01       	movw	r10, r20
    2faa:	c2 2f       	mov	r28, r18
    2fac:	21 30       	cpi	r18, 0x01	; 1
    2fae:	81 f0       	breq	.+32     	; 0x2fd0 <ucg_DrawGlyph+0x3c>
    2fb0:	28 f0       	brcs	.+10     	; 0x2fbc <ucg_DrawGlyph+0x28>
    2fb2:	22 30       	cpi	r18, 0x02	; 2
    2fb4:	b9 f0       	breq	.+46     	; 0x2fe4 <ucg_DrawGlyph+0x50>
    2fb6:	23 30       	cpi	r18, 0x03	; 3
    2fb8:	f9 f0       	breq	.+62     	; 0x2ff8 <ucg_DrawGlyph+0x64>
    2fba:	27 c0       	rjmp	.+78     	; 0x300a <ucg_DrawGlyph+0x76>
    2fbc:	fc 01       	movw	r30, r24
    2fbe:	ea 59       	subi	r30, 0x9A	; 154
    2fc0:	ff 4f       	sbci	r31, 0xFF	; 255
    2fc2:	01 90       	ld	r0, Z+
    2fc4:	f0 81       	ld	r31, Z
    2fc6:	e0 2d       	mov	r30, r0
    2fc8:	19 95       	eicall
    2fca:	a8 0e       	add	r10, r24
    2fcc:	b9 1e       	adc	r11, r25
    2fce:	1d c0       	rjmp	.+58     	; 0x300a <ucg_DrawGlyph+0x76>
    2fd0:	fc 01       	movw	r30, r24
    2fd2:	ea 59       	subi	r30, 0x9A	; 154
    2fd4:	ff 4f       	sbci	r31, 0xFF	; 255
    2fd6:	01 90       	ld	r0, Z+
    2fd8:	f0 81       	ld	r31, Z
    2fda:	e0 2d       	mov	r30, r0
    2fdc:	19 95       	eicall
    2fde:	c8 1a       	sub	r12, r24
    2fe0:	d9 0a       	sbc	r13, r25
    2fe2:	13 c0       	rjmp	.+38     	; 0x300a <ucg_DrawGlyph+0x76>
    2fe4:	fc 01       	movw	r30, r24
    2fe6:	ea 59       	subi	r30, 0x9A	; 154
    2fe8:	ff 4f       	sbci	r31, 0xFF	; 255
    2fea:	01 90       	ld	r0, Z+
    2fec:	f0 81       	ld	r31, Z
    2fee:	e0 2d       	mov	r30, r0
    2ff0:	19 95       	eicall
    2ff2:	a8 1a       	sub	r10, r24
    2ff4:	b9 0a       	sbc	r11, r25
    2ff6:	09 c0       	rjmp	.+18     	; 0x300a <ucg_DrawGlyph+0x76>
    2ff8:	fc 01       	movw	r30, r24
    2ffa:	ea 59       	subi	r30, 0x9A	; 154
    2ffc:	ff 4f       	sbci	r31, 0xFF	; 255
    2ffe:	01 90       	ld	r0, Z+
    3000:	f0 81       	ld	r31, Z
    3002:	e0 2d       	mov	r30, r0
    3004:	19 95       	eicall
    3006:	c8 0e       	add	r12, r24
    3008:	d9 1e       	adc	r13, r25
    300a:	2c 2f       	mov	r18, r28
    300c:	a5 01       	movw	r20, r10
    300e:	b6 01       	movw	r22, r12
    3010:	c7 01       	movw	r24, r14
    3012:	0e 94 a4 17 	call	0x2f48	; 0x2f48 <ucg_font_draw_glyph>
    3016:	cf 91       	pop	r28
    3018:	0f 91       	pop	r16
    301a:	ff 90       	pop	r15
    301c:	ef 90       	pop	r14
    301e:	df 90       	pop	r13
    3020:	cf 90       	pop	r12
    3022:	bf 90       	pop	r11
    3024:	af 90       	pop	r10
    3026:	08 95       	ret

00003028 <ucg_UpdateRefHeight>:
    3028:	fc 01       	movw	r30, r24
    302a:	ec 59       	subi	r30, 0x9C	; 156
    302c:	ff 4f       	sbci	r31, 0xFF	; 255
    302e:	20 81       	ld	r18, Z
    3030:	31 81       	ldd	r19, Z+1	; 0x01
    3032:	23 2b       	or	r18, r19
    3034:	e1 f1       	breq	.+120    	; 0x30ae <ucg_UpdateRefHeight+0x86>
    3036:	7e 96       	adiw	r30, 0x1e	; 30
    3038:	20 81       	ld	r18, Z
    303a:	3e 96       	adiw	r30, 0x0e	; 14
    303c:	20 83       	st	Z, r18
    303e:	3d 97       	sbiw	r30, 0x0d	; 13
    3040:	40 81       	ld	r20, Z
    3042:	3e 96       	adiw	r30, 0x0e	; 14
    3044:	40 83       	st	Z, r20
    3046:	32 97       	sbiw	r30, 0x02	; 2
    3048:	30 81       	ld	r19, Z
    304a:	33 23       	and	r19, r19
    304c:	81 f1       	breq	.+96     	; 0x30ae <ucg_UpdateRefHeight+0x86>
    304e:	31 30       	cpi	r19, 0x01	; 1
    3050:	79 f4       	brne	.+30     	; 0x3070 <ucg_UpdateRefHeight+0x48>
    3052:	3b 97       	sbiw	r30, 0x0b	; 11
    3054:	30 81       	ld	r19, Z
    3056:	23 17       	cp	r18, r19
    3058:	14 f4       	brge	.+4      	; 0x305e <ucg_UpdateRefHeight+0x36>
    305a:	3c 96       	adiw	r30, 0x0c	; 12
    305c:	30 83       	st	Z, r19
    305e:	fc 01       	movw	r30, r24
    3060:	eb 57       	subi	r30, 0x7B	; 123
    3062:	ff 4f       	sbci	r31, 0xFF	; 255
    3064:	20 81       	ld	r18, Z
    3066:	24 17       	cp	r18, r20
    3068:	14 f5       	brge	.+68     	; 0x30ae <ucg_UpdateRefHeight+0x86>
    306a:	3c 96       	adiw	r30, 0x0c	; 12
    306c:	20 83       	st	Z, r18
    306e:	08 95       	ret
    3070:	fc 01       	movw	r30, r24
    3072:	e1 58       	subi	r30, 0x81	; 129
    3074:	ff 4f       	sbci	r31, 0xFF	; 255
    3076:	e0 81       	ld	r30, Z
    3078:	dc 01       	movw	r26, r24
    307a:	af 57       	subi	r26, 0x7F	; 127
    307c:	bf 4f       	sbci	r27, 0xFF	; 255
    307e:	5c 91       	ld	r21, X
    3080:	02 2e       	mov	r0, r18
    3082:	00 0c       	add	r0, r0
    3084:	33 0b       	sbc	r19, r19
    3086:	65 2f       	mov	r22, r21
    3088:	05 2e       	mov	r0, r21
    308a:	00 0c       	add	r0, r0
    308c:	77 0b       	sbc	r23, r23
    308e:	6e 0f       	add	r22, r30
    3090:	71 1d       	adc	r23, r1
    3092:	e7 fd       	sbrc	r30, 7
    3094:	7a 95       	dec	r23
    3096:	26 17       	cp	r18, r22
    3098:	37 07       	cpc	r19, r23
    309a:	1c f4       	brge	.+6      	; 0x30a2 <ucg_UpdateRefHeight+0x7a>
    309c:	1f 96       	adiw	r26, 0x0f	; 15
    309e:	e5 0f       	add	r30, r21
    30a0:	ec 93       	st	X, r30
    30a2:	54 17       	cp	r21, r20
    30a4:	24 f4       	brge	.+8      	; 0x30ae <ucg_UpdateRefHeight+0x86>
    30a6:	fc 01       	movw	r30, r24
    30a8:	ef 56       	subi	r30, 0x6F	; 111
    30aa:	ff 4f       	sbci	r31, 0xFF	; 255
    30ac:	50 83       	st	Z, r21
    30ae:	08 95       	ret

000030b0 <ucg_SetFontPosBaseline>:
    30b0:	8a 59       	subi	r24, 0x9A	; 154
    30b2:	9f 4f       	sbci	r25, 0xFF	; 255
    30b4:	27 eb       	ldi	r18, 0xB7	; 183
    30b6:	35 e1       	ldi	r19, 0x15	; 21
    30b8:	fc 01       	movw	r30, r24
    30ba:	20 83       	st	Z, r18
    30bc:	31 83       	std	Z+1, r19	; 0x01
    30be:	08 95       	ret

000030c0 <ucg_SetFont>:
}

/*===============================================*/

void ucg_SetFont(ucg_t *ucg, const ucg_fntpgm_uint8_t  *font)
{
    30c0:	cf 93       	push	r28
    30c2:	df 93       	push	r29
  if ( ucg->font != font )
    30c4:	fc 01       	movw	r30, r24
    30c6:	ec 59       	subi	r30, 0x9C	; 156
    30c8:	ff 4f       	sbci	r31, 0xFF	; 255
    30ca:	20 81       	ld	r18, Z
    30cc:	31 81       	ldd	r19, Z+1	; 0x01
    30ce:	26 17       	cp	r18, r22
    30d0:	37 07       	cpc	r19, r23
    30d2:	51 f0       	breq	.+20     	; 0x30e8 <ucg_SetFont+0x28>
    30d4:	ec 01       	movw	r28, r24
  {
    ucg->font = font;
    30d6:	60 83       	st	Z, r22
    30d8:	71 83       	std	Z+1, r23	; 0x01
    ucg_read_font_info(&(ucg->font_info), font);
    30da:	8b 58       	subi	r24, 0x8B	; 139
    30dc:	9f 4f       	sbci	r25, 0xFF	; 255
    30de:	0e 94 ba 15 	call	0x2b74	; 0x2b74 <ucg_read_font_info>
    ucg_UpdateRefHeight(ucg);
    30e2:	ce 01       	movw	r24, r28
    30e4:	0e 94 14 18 	call	0x3028	; 0x3028 <ucg_UpdateRefHeight>
    //ucg_SetFontPosBaseline(ucg);
  }
}
    30e8:	df 91       	pop	r29
    30ea:	cf 91       	pop	r28
    30ec:	08 95       	ret

000030ee <ucg_init_struct>:
uint8_t global_SREG_backup;		// used by the atomic macros
#endif


void ucg_init_struct(ucg_t *ucg)
{
    30ee:	fc 01       	movw	r30, r24
  //memset(ucg, 0, sizeof(ucg_t));
  ucg->is_power_up = 0;
    30f0:	80 81       	ld	r24, Z
    30f2:	8e 7f       	andi	r24, 0xFE	; 254
    30f4:	80 83       	st	Z, r24
  ucg->rotate_chain_device_cb = 0;
    30f6:	11 86       	std	Z+9, r1	; 0x09
    30f8:	12 86       	std	Z+10, r1	; 0x0a
  ucg->arg.scale = 1;
    30fa:	81 e0       	ldi	r24, 0x01	; 1
    30fc:	90 e0       	ldi	r25, 0x00	; 0
    30fe:	80 a3       	std	Z+32, r24	; 0x20
    3100:	91 a3       	std	Z+33, r25	; 0x21
  //ucg->display_offset.x = 0;
  //ucg->display_offset.y = 0;
  ucg->font = 0;
    3102:	df 01       	movw	r26, r30
    3104:	ac 59       	subi	r26, 0x9C	; 156
    3106:	bf 4f       	sbci	r27, 0xFF	; 255
    3108:	1d 92       	st	X+, r1
    310a:	1c 92       	st	X, r1
    310c:	11 97       	sbiw	r26, 0x01	; 1
  //ucg->font_mode = UCG_FONT_MODE_NONE;   Old font procedures
  ucg->font_decode.is_transparent = 1;  // new font procedures
    310e:	1f 96       	adiw	r26, 0x0f	; 15
    3110:	8c 93       	st	X, r24
  
  ucg->com_initial_change_sent = 0;
    3112:	5f 96       	adiw	r26, 0x1f	; 31
    3114:	1c 92       	st	X, r1
  ucg->com_status = 0;
    3116:	11 96       	adiw	r26, 0x01	; 1
    3118:	1c 92       	st	X, r1
  ucg->com_cfg_cd = 0;
    311a:	ec 56       	subi	r30, 0x6C	; 108
    311c:	ff 4f       	sbci	r31, 0xFF	; 255
    311e:	10 82       	st	Z, r1
    3120:	08 95       	ret

00003122 <ucg_Init>:
}


ucg_int_t ucg_Init(ucg_t *ucg, ucg_dev_fnptr device_cb, ucg_dev_fnptr ext_cb, ucg_com_fnptr com_cb)
{
    3122:	cf 92       	push	r12
    3124:	df 92       	push	r13
    3126:	ef 92       	push	r14
    3128:	ff 92       	push	r15
    312a:	0f 93       	push	r16
    312c:	1f 93       	push	r17
    312e:	cf 93       	push	r28
    3130:	df 93       	push	r29
    3132:	ec 01       	movw	r28, r24
    3134:	6b 01       	movw	r12, r22
    3136:	8a 01       	movw	r16, r20
    3138:	79 01       	movw	r14, r18
  ucg_int_t r;
  ucg_init_struct(ucg);
    313a:	0e 94 77 18 	call	0x30ee	; 0x30ee <ucg_init_struct>
  if ( ext_cb == (ucg_dev_fnptr)0 )
    313e:	01 15       	cp	r16, r1
    3140:	11 05       	cpc	r17, r1
    3142:	29 f4       	brne	.+10     	; 0x314e <ucg_Init+0x2c>
    ucg->ext_cb = ucg_ext_none;
    3144:	82 e2       	ldi	r24, 0x22	; 34
    3146:	93 e1       	ldi	r25, 0x13	; 19
    3148:	8f 83       	std	Y+7, r24	; 0x07
    314a:	98 87       	std	Y+8, r25	; 0x08
    314c:	02 c0       	rjmp	.+4      	; 0x3152 <ucg_Init+0x30>
 else 
    ucg->ext_cb = ext_cb;
    314e:	0f 83       	std	Y+7, r16	; 0x07
    3150:	18 87       	std	Y+8, r17	; 0x08
  ucg->device_cb = device_cb;
    3152:	cd 82       	std	Y+5, r12	; 0x05
    3154:	de 82       	std	Y+6, r13	; 0x06
  ucg->com_cb = com_cb;
    3156:	e9 8a       	std	Y+17, r14	; 0x11
    3158:	fa 8a       	std	Y+18, r15	; 0x12
  ucg_SetFontPosBaseline(ucg);
    315a:	ce 01       	movw	r24, r28
    315c:	0e 94 58 18 	call	0x30b0	; 0x30b0 <ucg_SetFontPosBaseline>
  r = ucg_PowerUp(ucg);
    3160:	ce 01       	movw	r24, r28
    3162:	0e 94 ec 14 	call	0x29d8	; 0x29d8 <ucg_PowerUp>
    3166:	8c 01       	movw	r16, r24
  ucg_GetDimension(ucg);
    3168:	ce 01       	movw	r24, r28
    316a:	0e 94 2a 15 	call	0x2a54	; 0x2a54 <ucg_GetDimension>
  return r;
}
    316e:	c8 01       	movw	r24, r16
    3170:	df 91       	pop	r29
    3172:	cf 91       	pop	r28
    3174:	1f 91       	pop	r17
    3176:	0f 91       	pop	r16
    3178:	ff 90       	pop	r15
    317a:	ef 90       	pop	r14
    317c:	df 90       	pop	r13
    317e:	cf 90       	pop	r12
    3180:	08 95       	ret

00003182 <ucg_Draw90Line>:
*/

#include "ucg.h"

void ucg_Draw90Line(ucg_t *ucg, ucg_int_t x, ucg_int_t y, ucg_int_t len, ucg_int_t dir, ucg_int_t col_idx)
{
    3182:	ef 92       	push	r14
    3184:	ff 92       	push	r15
    3186:	0f 93       	push	r16
    3188:	1f 93       	push	r17
    318a:	fc 01       	movw	r30, r24
  ucg->arg.pixel.rgb.color[0] = ucg->arg.rgb[col_idx].color[0];
    318c:	d7 01       	movw	r26, r14
    318e:	aa 0f       	add	r26, r26
    3190:	bb 1f       	adc	r27, r27
    3192:	ea 0e       	add	r14, r26
    3194:	fb 1e       	adc	r15, r27
    3196:	dc 01       	movw	r26, r24
    3198:	ae 0d       	add	r26, r14
    319a:	bf 1d       	adc	r27, r15
    319c:	96 96       	adiw	r26, 0x26	; 38
    319e:	8c 91       	ld	r24, X
    31a0:	96 97       	sbiw	r26, 0x26	; 38
    31a2:	87 8b       	std	Z+23, r24	; 0x17
  ucg->arg.pixel.rgb.color[1] = ucg->arg.rgb[col_idx].color[1];
    31a4:	97 96       	adiw	r26, 0x27	; 39
    31a6:	8c 91       	ld	r24, X
    31a8:	97 97       	sbiw	r26, 0x27	; 39
    31aa:	80 8f       	std	Z+24, r24	; 0x18
  ucg->arg.pixel.rgb.color[2] = ucg->arg.rgb[col_idx].color[2];
    31ac:	98 96       	adiw	r26, 0x28	; 40
    31ae:	8c 91       	ld	r24, X
    31b0:	81 8f       	std	Z+25, r24	; 0x19
  ucg->arg.pixel.pos.x = x;
    31b2:	63 8b       	std	Z+19, r22	; 0x13
    31b4:	74 8b       	std	Z+20, r23	; 0x14
  ucg->arg.pixel.pos.y = y;
    31b6:	45 8b       	std	Z+21, r20	; 0x15
    31b8:	56 8b       	std	Z+22, r21	; 0x16
  ucg->arg.len = len;
    31ba:	22 8f       	std	Z+26, r18	; 0x1a
    31bc:	33 8f       	std	Z+27, r19	; 0x1b
  ucg->arg.dir = dir;
    31be:	04 8f       	std	Z+28, r16	; 0x1c
    31c0:	15 8f       	std	Z+29, r17	; 0x1d
  ucg_DrawL90FXWithArg(ucg);
    31c2:	cf 01       	movw	r24, r30
    31c4:	0e 94 3b 15 	call	0x2a76	; 0x2a76 <ucg_DrawL90FXWithArg>
}
    31c8:	1f 91       	pop	r17
    31ca:	0f 91       	pop	r16
    31cc:	ff 90       	pop	r15
    31ce:	ef 90       	pop	r14
    31d0:	08 95       	ret

000031d2 <ucg_DrawHLine>:

void ucg_DrawHLine(ucg_t *ucg, ucg_int_t x, ucg_int_t y, ucg_int_t len)
{
    31d2:	fc 01       	movw	r30, r24

#include "ucg.h"

void ucg_Draw90Line(ucg_t *ucg, ucg_int_t x, ucg_int_t y, ucg_int_t len, ucg_int_t dir, ucg_int_t col_idx)
{
  ucg->arg.pixel.rgb.color[0] = ucg->arg.rgb[col_idx].color[0];
    31d4:	86 a1       	ldd	r24, Z+38	; 0x26
    31d6:	87 8b       	std	Z+23, r24	; 0x17
  ucg->arg.pixel.rgb.color[1] = ucg->arg.rgb[col_idx].color[1];
    31d8:	87 a1       	ldd	r24, Z+39	; 0x27
    31da:	80 8f       	std	Z+24, r24	; 0x18
  ucg->arg.pixel.rgb.color[2] = ucg->arg.rgb[col_idx].color[2];
    31dc:	80 a5       	ldd	r24, Z+40	; 0x28
    31de:	81 8f       	std	Z+25, r24	; 0x19
  ucg->arg.pixel.pos.x = x;
    31e0:	63 8b       	std	Z+19, r22	; 0x13
    31e2:	74 8b       	std	Z+20, r23	; 0x14
  ucg->arg.pixel.pos.y = y;
    31e4:	45 8b       	std	Z+21, r20	; 0x15
    31e6:	56 8b       	std	Z+22, r21	; 0x16
  ucg->arg.len = len;
    31e8:	22 8f       	std	Z+26, r18	; 0x1a
    31ea:	33 8f       	std	Z+27, r19	; 0x1b
  ucg->arg.dir = dir;
    31ec:	14 8e       	std	Z+28, r1	; 0x1c
    31ee:	15 8e       	std	Z+29, r1	; 0x1d
  ucg_DrawL90FXWithArg(ucg);
    31f0:	cf 01       	movw	r24, r30
    31f2:	0e 94 3b 15 	call	0x2a76	; 0x2a76 <ucg_DrawL90FXWithArg>
    31f6:	08 95       	ret

000031f8 <ucg_SetColor>:
*/

#include "ucg.h"

void ucg_SetColor(ucg_t *ucg, uint8_t idx, uint8_t r, uint8_t g, uint8_t b)
{
    31f8:	0f 93       	push	r16
  //ucg->arg.pixel.rgb.color[0] = r;
  //ucg->arg.pixel.rgb.color[1] = g;
  //ucg->arg.pixel.rgb.color[2] = b;
  ucg->arg.rgb[idx].color[0] = r;
    31fa:	70 e0       	ldi	r23, 0x00	; 0
    31fc:	fb 01       	movw	r30, r22
    31fe:	ee 0f       	add	r30, r30
    3200:	ff 1f       	adc	r31, r31
    3202:	6e 0f       	add	r22, r30
    3204:	7f 1f       	adc	r23, r31
    3206:	fc 01       	movw	r30, r24
    3208:	e6 0f       	add	r30, r22
    320a:	f7 1f       	adc	r31, r23
    320c:	46 a3       	std	Z+38, r20	; 0x26
  ucg->arg.rgb[idx].color[1] = g;
    320e:	27 a3       	std	Z+39, r18	; 0x27
  ucg->arg.rgb[idx].color[2] = b;
    3210:	00 a7       	std	Z+40, r16	; 0x28
}
    3212:	0f 91       	pop	r16
    3214:	08 95       	ret

00003216 <ucg_dev_rotate90>:
    xy->y = y;  
  
}

ucg_int_t ucg_dev_rotate90(ucg_t *ucg, ucg_int_t msg, void *data)
{
    3216:	0f 93       	push	r16
    3218:	1f 93       	push	r17
    321a:	cf 93       	push	r28
    321c:	df 93       	push	r29
    321e:	ec 01       	movw	r28, r24
    3220:	8a 01       	movw	r16, r20
  switch(msg)
    3222:	66 31       	cpi	r22, 0x16	; 22
    3224:	71 05       	cpc	r23, r1
    3226:	5c f4       	brge	.+22     	; 0x323e <ucg_dev_rotate90+0x28>
    3228:	64 31       	cpi	r22, 0x14	; 20
    322a:	71 05       	cpc	r23, r1
    322c:	0c f0       	brlt	.+2      	; 0x3230 <ucg_dev_rotate90+0x1a>
    322e:	4b c0       	rjmp	.+150    	; 0x32c6 <ucg_dev_rotate90+0xb0>
    3230:	6c 30       	cpi	r22, 0x0C	; 12
    3232:	71 05       	cpc	r23, r1
    3234:	f9 f0       	breq	.+62     	; 0x3274 <ucg_dev_rotate90+0x5e>
    3236:	6f 30       	cpi	r22, 0x0F	; 15
    3238:	71 05       	cpc	r23, r1
    323a:	31 f0       	breq	.+12     	; 0x3248 <ucg_dev_rotate90+0x32>
    323c:	58 c0       	rjmp	.+176    	; 0x32ee <ucg_dev_rotate90+0xd8>
    323e:	67 31       	cpi	r22, 0x17	; 23
    3240:	71 05       	cpc	r23, r1
    3242:	09 f4       	brne	.+2      	; 0x3246 <ucg_dev_rotate90+0x30>
    3244:	40 c0       	rjmp	.+128    	; 0x32c6 <ucg_dev_rotate90+0xb0>
    3246:	53 c0       	rjmp	.+166    	; 0x32ee <ucg_dev_rotate90+0xd8>
  {
    case UCG_MSG_GET_DIMENSION:
      ucg->rotate_chain_device_cb(ucg, msg, &(ucg->rotate_dimension)); 
    3248:	ac 01       	movw	r20, r24
    324a:	45 5f       	subi	r20, 0xF5	; 245
    324c:	5f 4f       	sbci	r21, 0xFF	; 255
    324e:	e9 85       	ldd	r30, Y+9	; 0x09
    3250:	fa 85       	ldd	r31, Y+10	; 0x0a
    3252:	6f e0       	ldi	r22, 0x0F	; 15
    3254:	70 e0       	ldi	r23, 0x00	; 0
    3256:	19 95       	eicall
      ((ucg_wh_t *)data)->h = ucg->rotate_dimension.w;
    3258:	8b 85       	ldd	r24, Y+11	; 0x0b
    325a:	9c 85       	ldd	r25, Y+12	; 0x0c
    325c:	d8 01       	movw	r26, r16
    325e:	12 96       	adiw	r26, 0x02	; 2
    3260:	8d 93       	st	X+, r24
    3262:	9c 93       	st	X, r25
    3264:	13 97       	sbiw	r26, 0x03	; 3
      ((ucg_wh_t *)data)->w = ucg->rotate_dimension.h;
    3266:	8d 85       	ldd	r24, Y+13	; 0x0d
    3268:	9e 85       	ldd	r25, Y+14	; 0x0e
    326a:	8d 93       	st	X+, r24
    326c:	9c 93       	st	X, r25
    
      //printf("rw=%d rh=%d\n", ucg->rotate_dimension.w, ucg->rotate_dimension.h);
      //printf("aw=%d ah=%d\n",  ((ucg_wh_t volatile * volatile )data)->w, ((ucg_wh_t volatile * volatile )data)->h);
      //printf("dw=%d dh=%d\n", ucg->dimension.w, ucg->dimension.h);
      return 1;
    326e:	81 e0       	ldi	r24, 0x01	; 1
    3270:	90 e0       	ldi	r25, 0x00	; 0
    3272:	42 c0       	rjmp	.+132    	; 0x32f8 <ucg_dev_rotate90+0xe2>
      
    case UCG_MSG_SET_CLIP_BOX:
      /* to rotate the box, the lower left corner will become the new xy value pair */
      /* so the unrotated lower left is put into "ul" */
      //printf("pre clipbox x=%d y=%d\n", ((ucg_box_t * )data)->ul.x, ((ucg_box_t * )data)->ul.y);
      ((ucg_box_t * )data)->ul.y += ((ucg_box_t * )data)->size.h-1;
    3274:	fa 01       	movw	r30, r20
    3276:	46 81       	ldd	r20, Z+6	; 0x06
    3278:	57 81       	ldd	r21, Z+7	; 0x07
    327a:	9a 01       	movw	r18, r20
    327c:	21 50       	subi	r18, 0x01	; 1
    327e:	31 09       	sbc	r19, r1
    3280:	82 81       	ldd	r24, Z+2	; 0x02
    3282:	93 81       	ldd	r25, Z+3	; 0x03
    3284:	28 0f       	add	r18, r24
    3286:	39 1f       	adc	r19, r25
    3288:	22 83       	std	Z+2, r18	; 0x02
    328a:	33 83       	std	Z+3, r19	; 0x03
/* 90 degree */

static void ucg_rotate_90_xy(ucg_xy_t *xy, ucg_int_t display_width)
{   
    ucg_int_t x, y;
    y = xy->x;
    328c:	01 90       	ld	r0, Z+
    328e:	f0 81       	ld	r31, Z
    3290:	e0 2d       	mov	r30, r0
    x = display_width;
    x -= xy->y;
    3292:	8b 85       	ldd	r24, Y+11	; 0x0b
    3294:	9c 85       	ldd	r25, Y+12	; 0x0c
    3296:	82 1b       	sub	r24, r18
    3298:	93 0b       	sbc	r25, r19
    x--;
    xy->x = x;
    329a:	01 97       	sbiw	r24, 0x01	; 1
    329c:	d8 01       	movw	r26, r16
    329e:	8d 93       	st	X+, r24
    32a0:	9c 93       	st	X, r25
    32a2:	11 97       	sbiw	r26, 0x01	; 1
    xy->y = y;  
    32a4:	12 96       	adiw	r26, 0x02	; 2
    32a6:	ed 93       	st	X+, r30
    32a8:	fc 93       	st	X, r31
    32aa:	13 97       	sbiw	r26, 0x03	; 3
      /* then apply rotation */
      ucg_rotate_90_xy(&(((ucg_box_t * )data)->ul), ucg->rotate_dimension.w); 
      /* finally, swap dimensions */
      {
        ucg_int_t tmp;
        tmp = ((ucg_box_t *)data)->size.w;
    32ac:	14 96       	adiw	r26, 0x04	; 4
    32ae:	8d 91       	ld	r24, X+
    32b0:	9c 91       	ld	r25, X
    32b2:	15 97       	sbiw	r26, 0x05	; 5
        ((ucg_box_t * )data)->size.w = ((ucg_box_t *)data)->size.h;
    32b4:	14 96       	adiw	r26, 0x04	; 4
    32b6:	4d 93       	st	X+, r20
    32b8:	5c 93       	st	X, r21
    32ba:	15 97       	sbiw	r26, 0x05	; 5
        ((ucg_box_t * )data)->size.h = tmp;
    32bc:	16 96       	adiw	r26, 0x06	; 6
    32be:	8d 93       	st	X+, r24
    32c0:	9c 93       	st	X, r25
    32c2:	17 97       	sbiw	r26, 0x07	; 7
      }
      //printf("post clipbox x=%d y=%d\n", ((ucg_box_t * )data)->ul.x, ((ucg_box_t * )data)->ul.y);
      break;
    32c4:	14 c0       	rjmp	.+40     	; 0x32ee <ucg_dev_rotate90+0xd8>
    case UCG_MSG_DRAW_L90BF:
#endif /* UCG_MSG_DRAW_L90BF */
    case UCG_MSG_DRAW_L90SE:
    //case UCG_MSG_DRAW_L90RL:
      ucg->arg.dir+=1;
      ucg->arg.dir&=3;
    32c6:	8c 8d       	ldd	r24, Y+28	; 0x1c
    32c8:	9d 8d       	ldd	r25, Y+29	; 0x1d
    32ca:	01 96       	adiw	r24, 0x01	; 1
    32cc:	83 70       	andi	r24, 0x03	; 3
    32ce:	99 27       	eor	r25, r25
    32d0:	8c 8f       	std	Y+28, r24	; 0x1c
    32d2:	9d 8f       	std	Y+29, r25	; 0x1d
/* 90 degree */

static void ucg_rotate_90_xy(ucg_xy_t *xy, ucg_int_t display_width)
{   
    ucg_int_t x, y;
    y = xy->x;
    32d4:	2b 89       	ldd	r18, Y+19	; 0x13
    32d6:	3c 89       	ldd	r19, Y+20	; 0x14
    x = display_width;
    x -= xy->y;
    32d8:	8b 85       	ldd	r24, Y+11	; 0x0b
    32da:	9c 85       	ldd	r25, Y+12	; 0x0c
    32dc:	4d 89       	ldd	r20, Y+21	; 0x15
    32de:	5e 89       	ldd	r21, Y+22	; 0x16
    32e0:	84 1b       	sub	r24, r20
    32e2:	95 0b       	sbc	r25, r21
    x--;
    xy->x = x;
    32e4:	01 97       	sbiw	r24, 0x01	; 1
    32e6:	8b 8b       	std	Y+19, r24	; 0x13
    32e8:	9c 8b       	std	Y+20, r25	; 0x14
    xy->y = y;  
    32ea:	2d 8b       	std	Y+21, r18	; 0x15
    32ec:	3e 8b       	std	Y+22, r19	; 0x16
      //printf("pre x=%d y=%d\n", ucg->arg.pixel.pos.x, ucg->arg.pixel.pos.y);
      ucg_rotate_90_xy(&(ucg->arg.pixel.pos), ucg->rotate_dimension.w); 
      //printf("post x=%d y=%d\n", ucg->arg.pixel.pos.x, ucg->arg.pixel.pos.y);
      break;
  }
  return ucg->rotate_chain_device_cb(ucg, msg, data);  
    32ee:	e9 85       	ldd	r30, Y+9	; 0x09
    32f0:	fa 85       	ldd	r31, Y+10	; 0x0a
    32f2:	a8 01       	movw	r20, r16
    32f4:	ce 01       	movw	r24, r28
    32f6:	19 95       	eicall
}
    32f8:	df 91       	pop	r29
    32fa:	cf 91       	pop	r28
    32fc:	1f 91       	pop	r17
    32fe:	0f 91       	pop	r16
    3300:	08 95       	ret

00003302 <ucg_UndoRotate>:
#include "ucg.h"
#include <assert.h>

/* Side-Effects: Update dimension and reset clip range to max */
void ucg_UndoRotate(ucg_t *ucg)
{
    3302:	cf 93       	push	r28
    3304:	df 93       	push	r29
    3306:	ec 01       	movw	r28, r24
  if ( ucg->rotate_chain_device_cb != NULL )
    3308:	89 85       	ldd	r24, Y+9	; 0x09
    330a:	9a 85       	ldd	r25, Y+10	; 0x0a
    330c:	00 97       	sbiw	r24, 0x00	; 0
    330e:	21 f0       	breq	.+8      	; 0x3318 <ucg_UndoRotate+0x16>
  {
    ucg->device_cb = ucg->rotate_chain_device_cb;
    3310:	8d 83       	std	Y+5, r24	; 0x05
    3312:	9e 83       	std	Y+6, r25	; 0x06
    ucg->rotate_chain_device_cb = NULL;
    3314:	19 86       	std	Y+9, r1	; 0x09
    3316:	1a 86       	std	Y+10, r1	; 0x0a
  }
  ucg_GetDimension(ucg);
    3318:	ce 01       	movw	r24, r28
    331a:	0e 94 2a 15 	call	0x2a54	; 0x2a54 <ucg_GetDimension>
  ucg_SetMaxClipRange(ucg);
    331e:	ce 01       	movw	r24, r28
    3320:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <ucg_SetMaxClipRange>
}
    3324:	df 91       	pop	r29
    3326:	cf 91       	pop	r28
    3328:	08 95       	ret

0000332a <ucg_SetRotate90>:
  return ucg->rotate_chain_device_cb(ucg, msg, data);  
}

/* Side-Effects: Update dimension and reset clip range to max */
void ucg_SetRotate90(ucg_t *ucg)
{
    332a:	cf 93       	push	r28
    332c:	df 93       	push	r29
    332e:	ec 01       	movw	r28, r24
  ucg_UndoRotate(ucg);
    3330:	0e 94 81 19 	call	0x3302	; 0x3302 <ucg_UndoRotate>
  ucg->rotate_chain_device_cb = ucg->device_cb;
    3334:	8d 81       	ldd	r24, Y+5	; 0x05
    3336:	9e 81       	ldd	r25, Y+6	; 0x06
    3338:	89 87       	std	Y+9, r24	; 0x09
    333a:	9a 87       	std	Y+10, r25	; 0x0a
  ucg->device_cb = ucg_dev_rotate90;
    333c:	8b e0       	ldi	r24, 0x0B	; 11
    333e:	99 e1       	ldi	r25, 0x19	; 25
    3340:	8d 83       	std	Y+5, r24	; 0x05
    3342:	9e 83       	std	Y+6, r25	; 0x06
  ucg_GetDimension(ucg);
    3344:	ce 01       	movw	r24, r28
    3346:	0e 94 2a 15 	call	0x2a54	; 0x2a54 <ucg_GetDimension>
  ucg_SetMaxClipRange(ucg);
    334a:	ce 01       	movw	r24, r28
    334c:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <ucg_SetMaxClipRange>
}
    3350:	df 91       	pop	r29
    3352:	cf 91       	pop	r28
    3354:	08 95       	ret

00003356 <__vector_47>:
int t = 0;
int h = 3;
int th = 2;

ISR(TCE0_OVF_vect)
{
    3356:	1f 92       	push	r1
    3358:	0f 92       	push	r0
    335a:	0f b6       	in	r0, 0x3f	; 63
    335c:	0f 92       	push	r0
    335e:	11 24       	eor	r1, r1
    3360:	0b b6       	in	r0, 0x3b	; 59
    3362:	0f 92       	push	r0
    3364:	2f 93       	push	r18
    3366:	3f 93       	push	r19
    3368:	4f 93       	push	r20
    336a:	5f 93       	push	r21
    336c:	6f 93       	push	r22
    336e:	7f 93       	push	r23
    3370:	8f 93       	push	r24
    3372:	9f 93       	push	r25
    3374:	af 93       	push	r26
    3376:	bf 93       	push	r27
    3378:	ef 93       	push	r30
    337a:	ff 93       	push	r31
	s++;
    337c:	80 91 0a 20 	lds	r24, 0x200A	; 0x80200a <s>
    3380:	90 91 0b 20 	lds	r25, 0x200B	; 0x80200b <s+0x1>
    3384:	01 96       	adiw	r24, 0x01	; 1
	
	if (s == 10)
    3386:	8a 30       	cpi	r24, 0x0A	; 10
    3388:	91 05       	cpc	r25, r1
    338a:	29 f0       	breq	.+10     	; 0x3396 <__vector_47+0x40>
int h = 3;
int th = 2;

ISR(TCE0_OVF_vect)
{
	s++;
    338c:	80 93 0a 20 	sts	0x200A, r24	; 0x80200a <s>
    3390:	90 93 0b 20 	sts	0x200B, r25	; 0x80200b <s+0x1>
    3394:	0d c0       	rjmp	.+26     	; 0x33b0 <__vector_47+0x5a>
	
	if (s == 10)
	{
		s = 0;
    3396:	10 92 0a 20 	sts	0x200A, r1	; 0x80200a <s>
    339a:	10 92 0b 20 	sts	0x200B, r1	; 0x80200b <s+0x1>
		ts++;
    339e:	80 91 24 20 	lds	r24, 0x2024	; 0x802024 <ts>
    33a2:	90 91 25 20 	lds	r25, 0x2025	; 0x802025 <ts+0x1>
    33a6:	01 96       	adiw	r24, 0x01	; 1
    33a8:	80 93 24 20 	sts	0x2024, r24	; 0x802024 <ts>
    33ac:	90 93 25 20 	sts	0x2025, r25	; 0x802025 <ts+0x1>
	}
	if (ts == 6)
    33b0:	80 91 24 20 	lds	r24, 0x2024	; 0x802024 <ts>
    33b4:	90 91 25 20 	lds	r25, 0x2025	; 0x802025 <ts+0x1>
    33b8:	06 97       	sbiw	r24, 0x06	; 6
    33ba:	69 f4       	brne	.+26     	; 0x33d6 <__vector_47+0x80>
	{
		ts= 0;
    33bc:	10 92 24 20 	sts	0x2024, r1	; 0x802024 <ts>
    33c0:	10 92 25 20 	sts	0x2025, r1	; 0x802025 <ts+0x1>
		m++;
    33c4:	80 91 22 20 	lds	r24, 0x2022	; 0x802022 <m>
    33c8:	90 91 23 20 	lds	r25, 0x2023	; 0x802023 <m+0x1>
    33cc:	01 96       	adiw	r24, 0x01	; 1
    33ce:	80 93 22 20 	sts	0x2022, r24	; 0x802022 <m>
    33d2:	90 93 23 20 	sts	0x2023, r25	; 0x802023 <m+0x1>
	}
	if (m >= 10)
    33d6:	80 91 22 20 	lds	r24, 0x2022	; 0x802022 <m>
    33da:	90 91 23 20 	lds	r25, 0x2023	; 0x802023 <m+0x1>
    33de:	0a 97       	sbiw	r24, 0x0a	; 10
    33e0:	6c f0       	brlt	.+26     	; 0x33fc <__vector_47+0xa6>
	{
		m = 0;
    33e2:	10 92 22 20 	sts	0x2022, r1	; 0x802022 <m>
    33e6:	10 92 23 20 	sts	0x2023, r1	; 0x802023 <m+0x1>
		t++;
    33ea:	80 91 20 20 	lds	r24, 0x2020	; 0x802020 <__data_end>
    33ee:	90 91 21 20 	lds	r25, 0x2021	; 0x802021 <__data_end+0x1>
    33f2:	01 96       	adiw	r24, 0x01	; 1
    33f4:	80 93 20 20 	sts	0x2020, r24	; 0x802020 <__data_end>
    33f8:	90 93 21 20 	sts	0x2021, r25	; 0x802021 <__data_end+0x1>
	}
	if (t == 6)
    33fc:	80 91 20 20 	lds	r24, 0x2020	; 0x802020 <__data_end>
    3400:	90 91 21 20 	lds	r25, 0x2021	; 0x802021 <__data_end+0x1>
    3404:	06 97       	sbiw	r24, 0x06	; 6
    3406:	69 f4       	brne	.+26     	; 0x3422 <__vector_47+0xcc>
	{
		t = 0;
    3408:	10 92 20 20 	sts	0x2020, r1	; 0x802020 <__data_end>
    340c:	10 92 21 20 	sts	0x2021, r1	; 0x802021 <__data_end+0x1>
		h++;
    3410:	80 91 08 20 	lds	r24, 0x2008	; 0x802008 <h>
    3414:	90 91 09 20 	lds	r25, 0x2009	; 0x802009 <h+0x1>
    3418:	01 96       	adiw	r24, 0x01	; 1
    341a:	80 93 08 20 	sts	0x2008, r24	; 0x802008 <h>
    341e:	90 93 09 20 	sts	0x2009, r25	; 0x802009 <h+0x1>
	}
	if (h >= 10)
    3422:	80 91 08 20 	lds	r24, 0x2008	; 0x802008 <h>
    3426:	90 91 09 20 	lds	r25, 0x2009	; 0x802009 <h+0x1>
    342a:	0a 97       	sbiw	r24, 0x0a	; 10
    342c:	6c f0       	brlt	.+26     	; 0x3448 <__vector_47+0xf2>
	{
		h = 0;
    342e:	10 92 08 20 	sts	0x2008, r1	; 0x802008 <h>
    3432:	10 92 09 20 	sts	0x2009, r1	; 0x802009 <h+0x1>
		th++;
    3436:	80 91 06 20 	lds	r24, 0x2006	; 0x802006 <th>
    343a:	90 91 07 20 	lds	r25, 0x2007	; 0x802007 <th+0x1>
    343e:	01 96       	adiw	r24, 0x01	; 1
    3440:	80 93 06 20 	sts	0x2006, r24	; 0x802006 <th>
    3444:	90 93 07 20 	sts	0x2007, r25	; 0x802007 <th+0x1>
	}
	if ((th*10) + h == 24)
    3448:	80 91 06 20 	lds	r24, 0x2006	; 0x802006 <th>
    344c:	90 91 07 20 	lds	r25, 0x2007	; 0x802007 <th+0x1>
    3450:	9c 01       	movw	r18, r24
    3452:	22 0f       	add	r18, r18
    3454:	33 1f       	adc	r19, r19
    3456:	88 0f       	add	r24, r24
    3458:	99 1f       	adc	r25, r25
    345a:	88 0f       	add	r24, r24
    345c:	99 1f       	adc	r25, r25
    345e:	88 0f       	add	r24, r24
    3460:	99 1f       	adc	r25, r25
    3462:	82 0f       	add	r24, r18
    3464:	93 1f       	adc	r25, r19
    3466:	20 91 08 20 	lds	r18, 0x2008	; 0x802008 <h>
    346a:	30 91 09 20 	lds	r19, 0x2009	; 0x802009 <h+0x1>
    346e:	82 0f       	add	r24, r18
    3470:	93 1f       	adc	r25, r19
    3472:	48 97       	sbiw	r24, 0x18	; 24
    3474:	41 f4       	brne	.+16     	; 0x3486 <__vector_47+0x130>
	{
		th = 0;
    3476:	10 92 06 20 	sts	0x2006, r1	; 0x802006 <th>
    347a:	10 92 07 20 	sts	0x2007, r1	; 0x802007 <th+0x1>
		h = 0;
    347e:	10 92 08 20 	sts	0x2008, r1	; 0x802008 <h>
    3482:	10 92 09 20 	sts	0x2009, r1	; 0x802009 <h+0x1>
	}
	ucg_SetPrintPos(&ucg, 15, 35);
    3486:	43 e2       	ldi	r20, 0x23	; 35
    3488:	50 e0       	ldi	r21, 0x00	; 0
    348a:	6f e0       	ldi	r22, 0x0F	; 15
    348c:	70 e0       	ldi	r23, 0x00	; 0
    348e:	86 e2       	ldi	r24, 0x26	; 38
    3490:	90 e2       	ldi	r25, 0x20	; 32
    3492:	0e 94 5c 1c 	call	0x38b8	; 0x38b8 <ucg_SetPrintPos>
	ucg_Print(&ucg,	"%d%d : %d%d : %d%d", th, h, t, m, ts, s);
    3496:	80 91 0b 20 	lds	r24, 0x200B	; 0x80200b <s+0x1>
    349a:	8f 93       	push	r24
    349c:	80 91 0a 20 	lds	r24, 0x200A	; 0x80200a <s>
    34a0:	8f 93       	push	r24
    34a2:	80 91 25 20 	lds	r24, 0x2025	; 0x802025 <ts+0x1>
    34a6:	8f 93       	push	r24
    34a8:	80 91 24 20 	lds	r24, 0x2024	; 0x802024 <ts>
    34ac:	8f 93       	push	r24
    34ae:	80 91 23 20 	lds	r24, 0x2023	; 0x802023 <m+0x1>
    34b2:	8f 93       	push	r24
    34b4:	80 91 22 20 	lds	r24, 0x2022	; 0x802022 <m>
    34b8:	8f 93       	push	r24
    34ba:	80 91 21 20 	lds	r24, 0x2021	; 0x802021 <__data_end+0x1>
    34be:	8f 93       	push	r24
    34c0:	80 91 20 20 	lds	r24, 0x2020	; 0x802020 <__data_end>
    34c4:	8f 93       	push	r24
    34c6:	80 91 09 20 	lds	r24, 0x2009	; 0x802009 <h+0x1>
    34ca:	8f 93       	push	r24
    34cc:	80 91 08 20 	lds	r24, 0x2008	; 0x802008 <h>
    34d0:	8f 93       	push	r24
    34d2:	80 91 07 20 	lds	r24, 0x2007	; 0x802007 <th+0x1>
    34d6:	8f 93       	push	r24
    34d8:	80 91 06 20 	lds	r24, 0x2006	; 0x802006 <th>
    34dc:	8f 93       	push	r24
    34de:	8c e0       	ldi	r24, 0x0C	; 12
    34e0:	90 e2       	ldi	r25, 0x20	; 32
    34e2:	9f 93       	push	r25
    34e4:	8f 93       	push	r24
    34e6:	86 e2       	ldi	r24, 0x26	; 38
    34e8:	90 e2       	ldi	r25, 0x20	; 32
    34ea:	9f 93       	push	r25
    34ec:	8f 93       	push	r24
    34ee:	0e 94 6b 1c 	call	0x38d6	; 0x38d6 <ucg_Print>
	
}						// clock visualiseren
    34f2:	8d b7       	in	r24, 0x3d	; 61
    34f4:	9e b7       	in	r25, 0x3e	; 62
    34f6:	40 96       	adiw	r24, 0x10	; 16
    34f8:	8d bf       	out	0x3d, r24	; 61
    34fa:	9e bf       	out	0x3e, r25	; 62
    34fc:	ff 91       	pop	r31
    34fe:	ef 91       	pop	r30
    3500:	bf 91       	pop	r27
    3502:	af 91       	pop	r26
    3504:	9f 91       	pop	r25
    3506:	8f 91       	pop	r24
    3508:	7f 91       	pop	r23
    350a:	6f 91       	pop	r22
    350c:	5f 91       	pop	r21
    350e:	4f 91       	pop	r20
    3510:	3f 91       	pop	r19
    3512:	2f 91       	pop	r18
    3514:	0f 90       	pop	r0
    3516:	0b be       	out	0x3b, r0	; 59
    3518:	0f 90       	pop	r0
    351a:	0f be       	out	0x3f, r0	; 63
    351c:	0f 90       	pop	r0
    351e:	1f 90       	pop	r1
    3520:	18 95       	reti

00003522 <__vector_66>:

ISR(PORTA_INT0_vect)
{
    3522:	1f 92       	push	r1
    3524:	0f 92       	push	r0
    3526:	0f b6       	in	r0, 0x3f	; 63
    3528:	0f 92       	push	r0
    352a:	11 24       	eor	r1, r1
    352c:	0b b6       	in	r0, 0x3b	; 59
    352e:	0f 92       	push	r0
    3530:	2f 93       	push	r18
    3532:	3f 93       	push	r19
    3534:	4f 93       	push	r20
    3536:	5f 93       	push	r21
    3538:	6f 93       	push	r22
    353a:	7f 93       	push	r23
    353c:	8f 93       	push	r24
    353e:	9f 93       	push	r25
    3540:	af 93       	push	r26
    3542:	bf 93       	push	r27
    3544:	ef 93       	push	r30
    3546:	ff 93       	push	r31
	m++;
    3548:	80 91 22 20 	lds	r24, 0x2022	; 0x802022 <m>
    354c:	90 91 23 20 	lds	r25, 0x2023	; 0x802023 <m+0x1>
    3550:	01 96       	adiw	r24, 0x01	; 1
    3552:	80 93 22 20 	sts	0x2022, r24	; 0x802022 <m>
    3556:	90 93 23 20 	sts	0x2023, r25	; 0x802023 <m+0x1>
	reset_seconds;
    355a:	10 92 0a 20 	sts	0x200A, r1	; 0x80200a <s>
    355e:	10 92 0b 20 	sts	0x200B, r1	; 0x80200b <s+0x1>
    3562:	10 92 24 20 	sts	0x2024, r1	; 0x802024 <ts>
    3566:	10 92 25 20 	sts	0x2025, r1	; 0x802025 <ts+0x1>
	if (m >= 10)
    356a:	0a 97       	sbiw	r24, 0x0a	; 10
    356c:	ac f0       	brlt	.+42     	; 0x3598 <__vector_66+0x76>
	{
		m = 0;
    356e:	10 92 22 20 	sts	0x2022, r1	; 0x802022 <m>
    3572:	10 92 23 20 	sts	0x2023, r1	; 0x802023 <m+0x1>
		t++;
    3576:	80 91 20 20 	lds	r24, 0x2020	; 0x802020 <__data_end>
    357a:	90 91 21 20 	lds	r25, 0x2021	; 0x802021 <__data_end+0x1>
    357e:	01 96       	adiw	r24, 0x01	; 1
		if (t >= 6)
    3580:	86 30       	cpi	r24, 0x06	; 6
    3582:	91 05       	cpc	r25, r1
    3584:	2c f4       	brge	.+10     	; 0x3590 <__vector_66+0x6e>
	m++;
	reset_seconds;
	if (m >= 10)
	{
		m = 0;
		t++;
    3586:	80 93 20 20 	sts	0x2020, r24	; 0x802020 <__data_end>
    358a:	90 93 21 20 	sts	0x2021, r25	; 0x802021 <__data_end+0x1>
    358e:	04 c0       	rjmp	.+8      	; 0x3598 <__vector_66+0x76>
		if (t >= 6)
		{
			reset_minutes;
    3590:	10 92 20 20 	sts	0x2020, r1	; 0x802020 <__data_end>
    3594:	10 92 21 20 	sts	0x2021, r1	; 0x802021 <__data_end+0x1>
		}
	}
		ucg_SetPrintPos(&ucg, 15, 35);
    3598:	43 e2       	ldi	r20, 0x23	; 35
    359a:	50 e0       	ldi	r21, 0x00	; 0
    359c:	6f e0       	ldi	r22, 0x0F	; 15
    359e:	70 e0       	ldi	r23, 0x00	; 0
    35a0:	86 e2       	ldi	r24, 0x26	; 38
    35a2:	90 e2       	ldi	r25, 0x20	; 32
    35a4:	0e 94 5c 1c 	call	0x38b8	; 0x38b8 <ucg_SetPrintPos>
		ucg_Print(&ucg,	"%d%d : %d%d : %d%d", th, h, t, m, ts, s);
    35a8:	80 91 0b 20 	lds	r24, 0x200B	; 0x80200b <s+0x1>
    35ac:	8f 93       	push	r24
    35ae:	80 91 0a 20 	lds	r24, 0x200A	; 0x80200a <s>
    35b2:	8f 93       	push	r24
    35b4:	80 91 25 20 	lds	r24, 0x2025	; 0x802025 <ts+0x1>
    35b8:	8f 93       	push	r24
    35ba:	80 91 24 20 	lds	r24, 0x2024	; 0x802024 <ts>
    35be:	8f 93       	push	r24
    35c0:	80 91 23 20 	lds	r24, 0x2023	; 0x802023 <m+0x1>
    35c4:	8f 93       	push	r24
    35c6:	80 91 22 20 	lds	r24, 0x2022	; 0x802022 <m>
    35ca:	8f 93       	push	r24
    35cc:	80 91 21 20 	lds	r24, 0x2021	; 0x802021 <__data_end+0x1>
    35d0:	8f 93       	push	r24
    35d2:	80 91 20 20 	lds	r24, 0x2020	; 0x802020 <__data_end>
    35d6:	8f 93       	push	r24
    35d8:	80 91 09 20 	lds	r24, 0x2009	; 0x802009 <h+0x1>
    35dc:	8f 93       	push	r24
    35de:	80 91 08 20 	lds	r24, 0x2008	; 0x802008 <h>
    35e2:	8f 93       	push	r24
    35e4:	80 91 07 20 	lds	r24, 0x2007	; 0x802007 <th+0x1>
    35e8:	8f 93       	push	r24
    35ea:	80 91 06 20 	lds	r24, 0x2006	; 0x802006 <th>
    35ee:	8f 93       	push	r24
    35f0:	8c e0       	ldi	r24, 0x0C	; 12
    35f2:	90 e2       	ldi	r25, 0x20	; 32
    35f4:	9f 93       	push	r25
    35f6:	8f 93       	push	r24
    35f8:	86 e2       	ldi	r24, 0x26	; 38
    35fa:	90 e2       	ldi	r25, 0x20	; 32
    35fc:	9f 93       	push	r25
    35fe:	8f 93       	push	r24
    3600:	0e 94 6b 1c 	call	0x38d6	; 0x38d6 <ucg_Print>
}
    3604:	8d b7       	in	r24, 0x3d	; 61
    3606:	9e b7       	in	r25, 0x3e	; 62
    3608:	40 96       	adiw	r24, 0x10	; 16
    360a:	8d bf       	out	0x3d, r24	; 61
    360c:	9e bf       	out	0x3e, r25	; 62
    360e:	ff 91       	pop	r31
    3610:	ef 91       	pop	r30
    3612:	bf 91       	pop	r27
    3614:	af 91       	pop	r26
    3616:	9f 91       	pop	r25
    3618:	8f 91       	pop	r24
    361a:	7f 91       	pop	r23
    361c:	6f 91       	pop	r22
    361e:	5f 91       	pop	r21
    3620:	4f 91       	pop	r20
    3622:	3f 91       	pop	r19
    3624:	2f 91       	pop	r18
    3626:	0f 90       	pop	r0
    3628:	0b be       	out	0x3b, r0	; 59
    362a:	0f 90       	pop	r0
    362c:	0f be       	out	0x3f, r0	; 63
    362e:	0f 90       	pop	r0
    3630:	1f 90       	pop	r1
    3632:	18 95       	reti

00003634 <__vector_34>:

ISR(PORTB_INT0_vect)
{
    3634:	1f 92       	push	r1
    3636:	0f 92       	push	r0
    3638:	0f b6       	in	r0, 0x3f	; 63
    363a:	0f 92       	push	r0
    363c:	11 24       	eor	r1, r1
    363e:	0b b6       	in	r0, 0x3b	; 59
    3640:	0f 92       	push	r0
    3642:	2f 93       	push	r18
    3644:	3f 93       	push	r19
    3646:	4f 93       	push	r20
    3648:	5f 93       	push	r21
    364a:	6f 93       	push	r22
    364c:	7f 93       	push	r23
    364e:	8f 93       	push	r24
    3650:	9f 93       	push	r25
    3652:	af 93       	push	r26
    3654:	bf 93       	push	r27
    3656:	ef 93       	push	r30
    3658:	ff 93       	push	r31
	h++;
    365a:	80 91 08 20 	lds	r24, 0x2008	; 0x802008 <h>
    365e:	90 91 09 20 	lds	r25, 0x2009	; 0x802009 <h+0x1>
    3662:	01 96       	adiw	r24, 0x01	; 1
    3664:	80 93 08 20 	sts	0x2008, r24	; 0x802008 <h>
    3668:	90 93 09 20 	sts	0x2009, r25	; 0x802009 <h+0x1>
	reset_seconds;
    366c:	10 92 0a 20 	sts	0x200A, r1	; 0x80200a <s>
    3670:	10 92 0b 20 	sts	0x200B, r1	; 0x80200b <s+0x1>
    3674:	10 92 24 20 	sts	0x2024, r1	; 0x802024 <ts>
    3678:	10 92 25 20 	sts	0x2025, r1	; 0x802025 <ts+0x1>
	if (h >= 10)
    367c:	0a 97       	sbiw	r24, 0x0a	; 10
    367e:	6c f0       	brlt	.+26     	; 0x369a <__vector_34+0x66>
	{
		h = 0;
    3680:	10 92 08 20 	sts	0x2008, r1	; 0x802008 <h>
    3684:	10 92 09 20 	sts	0x2009, r1	; 0x802009 <h+0x1>
		th++;
    3688:	80 91 06 20 	lds	r24, 0x2006	; 0x802006 <th>
    368c:	90 91 07 20 	lds	r25, 0x2007	; 0x802007 <th+0x1>
    3690:	01 96       	adiw	r24, 0x01	; 1
    3692:	80 93 06 20 	sts	0x2006, r24	; 0x802006 <th>
    3696:	90 93 07 20 	sts	0x2007, r25	; 0x802007 <th+0x1>
	}
	if ((th*10) + h >= 24)
    369a:	80 91 06 20 	lds	r24, 0x2006	; 0x802006 <th>
    369e:	90 91 07 20 	lds	r25, 0x2007	; 0x802007 <th+0x1>
    36a2:	9c 01       	movw	r18, r24
    36a4:	22 0f       	add	r18, r18
    36a6:	33 1f       	adc	r19, r19
    36a8:	88 0f       	add	r24, r24
    36aa:	99 1f       	adc	r25, r25
    36ac:	88 0f       	add	r24, r24
    36ae:	99 1f       	adc	r25, r25
    36b0:	88 0f       	add	r24, r24
    36b2:	99 1f       	adc	r25, r25
    36b4:	82 0f       	add	r24, r18
    36b6:	93 1f       	adc	r25, r19
    36b8:	20 91 08 20 	lds	r18, 0x2008	; 0x802008 <h>
    36bc:	30 91 09 20 	lds	r19, 0x2009	; 0x802009 <h+0x1>
    36c0:	82 0f       	add	r24, r18
    36c2:	93 1f       	adc	r25, r19
    36c4:	48 97       	sbiw	r24, 0x18	; 24
    36c6:	44 f0       	brlt	.+16     	; 0x36d8 <__vector_34+0xa4>
	{
		reset_hours;
    36c8:	10 92 08 20 	sts	0x2008, r1	; 0x802008 <h>
    36cc:	10 92 09 20 	sts	0x2009, r1	; 0x802009 <h+0x1>
    36d0:	10 92 06 20 	sts	0x2006, r1	; 0x802006 <th>
    36d4:	10 92 07 20 	sts	0x2007, r1	; 0x802007 <th+0x1>
	}
	ucg_SetPrintPos(&ucg, 15, 35);
    36d8:	43 e2       	ldi	r20, 0x23	; 35
    36da:	50 e0       	ldi	r21, 0x00	; 0
    36dc:	6f e0       	ldi	r22, 0x0F	; 15
    36de:	70 e0       	ldi	r23, 0x00	; 0
    36e0:	86 e2       	ldi	r24, 0x26	; 38
    36e2:	90 e2       	ldi	r25, 0x20	; 32
    36e4:	0e 94 5c 1c 	call	0x38b8	; 0x38b8 <ucg_SetPrintPos>
	ucg_Print(&ucg,	"%d%d : %d%d : %d%d", th, h, t, m, ts, s);
    36e8:	80 91 0b 20 	lds	r24, 0x200B	; 0x80200b <s+0x1>
    36ec:	8f 93       	push	r24
    36ee:	80 91 0a 20 	lds	r24, 0x200A	; 0x80200a <s>
    36f2:	8f 93       	push	r24
    36f4:	80 91 25 20 	lds	r24, 0x2025	; 0x802025 <ts+0x1>
    36f8:	8f 93       	push	r24
    36fa:	80 91 24 20 	lds	r24, 0x2024	; 0x802024 <ts>
    36fe:	8f 93       	push	r24
    3700:	80 91 23 20 	lds	r24, 0x2023	; 0x802023 <m+0x1>
    3704:	8f 93       	push	r24
    3706:	80 91 22 20 	lds	r24, 0x2022	; 0x802022 <m>
    370a:	8f 93       	push	r24
    370c:	80 91 21 20 	lds	r24, 0x2021	; 0x802021 <__data_end+0x1>
    3710:	8f 93       	push	r24
    3712:	80 91 20 20 	lds	r24, 0x2020	; 0x802020 <__data_end>
    3716:	8f 93       	push	r24
    3718:	80 91 09 20 	lds	r24, 0x2009	; 0x802009 <h+0x1>
    371c:	8f 93       	push	r24
    371e:	80 91 08 20 	lds	r24, 0x2008	; 0x802008 <h>
    3722:	8f 93       	push	r24
    3724:	80 91 07 20 	lds	r24, 0x2007	; 0x802007 <th+0x1>
    3728:	8f 93       	push	r24
    372a:	80 91 06 20 	lds	r24, 0x2006	; 0x802006 <th>
    372e:	8f 93       	push	r24
    3730:	8c e0       	ldi	r24, 0x0C	; 12
    3732:	90 e2       	ldi	r25, 0x20	; 32
    3734:	9f 93       	push	r25
    3736:	8f 93       	push	r24
    3738:	86 e2       	ldi	r24, 0x26	; 38
    373a:	90 e2       	ldi	r25, 0x20	; 32
    373c:	9f 93       	push	r25
    373e:	8f 93       	push	r24
    3740:	0e 94 6b 1c 	call	0x38d6	; 0x38d6 <ucg_Print>
}
    3744:	8d b7       	in	r24, 0x3d	; 61
    3746:	9e b7       	in	r25, 0x3e	; 62
    3748:	40 96       	adiw	r24, 0x10	; 16
    374a:	8d bf       	out	0x3d, r24	; 61
    374c:	9e bf       	out	0x3e, r25	; 62
    374e:	ff 91       	pop	r31
    3750:	ef 91       	pop	r30
    3752:	bf 91       	pop	r27
    3754:	af 91       	pop	r26
    3756:	9f 91       	pop	r25
    3758:	8f 91       	pop	r24
    375a:	7f 91       	pop	r23
    375c:	6f 91       	pop	r22
    375e:	5f 91       	pop	r21
    3760:	4f 91       	pop	r20
    3762:	3f 91       	pop	r19
    3764:	2f 91       	pop	r18
    3766:	0f 90       	pop	r0
    3768:	0b be       	out	0x3b, r0	; 59
    376a:	0f 90       	pop	r0
    376c:	0f be       	out	0x3f, r0	; 63
    376e:	0f 90       	pop	r0
    3770:	1f 90       	pop	r1
    3772:	18 95       	reti

00003774 <clock>:

}

void clock(void)
{
	TCE0.CTRLB     = TC_WGMODE_NORMAL_gc;		// Normal mode
    3774:	e0 e0       	ldi	r30, 0x00	; 0
    3776:	fa e0       	ldi	r31, 0x0A	; 10
    3778:	11 82       	std	Z+1, r1	; 0x01
	TCE0.CTRLA     = TC_CLKSEL_DIV1024_gc;		// prescaling 1024
    377a:	87 e0       	ldi	r24, 0x07	; 7
    377c:	80 83       	st	Z, r24
	TCE0.INTCTRLA  = TC_OVFINTLVL_LO_gc;		// enable overflow interrupt low level
    377e:	81 e0       	ldi	r24, 0x01	; 1
    3780:	86 83       	std	Z+6, r24	; 0x06
	TCE0.PER       = 31249;						// t = N*(PER+1)/FCPU = 1024*31250/32000000 = 1,00 s
    3782:	81 e1       	ldi	r24, 0x11	; 17
    3784:	9a e7       	ldi	r25, 0x7A	; 122
    3786:	86 a3       	std	Z+38, r24	; 0x26
    3788:	97 a3       	std	Z+39, r25	; 0x27
		
	PMIC.CTRL     |= PMIC_LOLVLEN_bm;			// set low level interrupts
    378a:	e0 ea       	ldi	r30, 0xA0	; 160
    378c:	f0 e0       	ldi	r31, 0x00	; 0
    378e:	82 81       	ldd	r24, Z+2	; 0x02
    3790:	81 60       	ori	r24, 0x01	; 1
    3792:	82 83       	std	Z+2, r24	; 0x02
	sei();										// enable interrupts
    3794:	78 94       	sei
    3796:	08 95       	ret

00003798 <prepare_screen>:
}

void prepare_screen(void)
{
    3798:	0f 93       	push	r16
	ucg_ClearScreen(&ucg);
    379a:	86 e2       	ldi	r24, 0x26	; 38
    379c:	90 e2       	ldi	r25, 0x20	; 32
    379e:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <ucg_ClearScreen>
	ucg_SetRotate90(&ucg);
    37a2:	86 e2       	ldi	r24, 0x26	; 38
    37a4:	90 e2       	ldi	r25, 0x20	; 32
    37a6:	0e 94 95 19 	call	0x332a	; 0x332a <ucg_SetRotate90>
	ucg_SetColor(&ucg, 0, 255, 50, 50);
    37aa:	02 e3       	ldi	r16, 0x32	; 50
    37ac:	22 e3       	ldi	r18, 0x32	; 50
    37ae:	4f ef       	ldi	r20, 0xFF	; 255
    37b0:	60 e0       	ldi	r22, 0x00	; 0
    37b2:	86 e2       	ldi	r24, 0x26	; 38
    37b4:	90 e2       	ldi	r25, 0x20	; 32
    37b6:	0e 94 fc 18 	call	0x31f8	; 0x31f8 <ucg_SetColor>
	ucg_SetFontMode(&ucg, UCG_FONT_MODE_SOLID);
    37ba:	60 e0       	ldi	r22, 0x00	; 0
    37bc:	86 e2       	ldi	r24, 0x26	; 38
    37be:	90 e2       	ldi	r25, 0x20	; 32
    37c0:	0e 94 c5 17 	call	0x2f8a	; 0x2f8a <ucg_SetFontMode>
	ucg_SetFont(&ucg, ucg_font_ncenB18_hf);
    37c4:	61 e7       	ldi	r22, 0x71	; 113
    37c6:	73 e0       	ldi	r23, 0x03	; 3
    37c8:	86 e2       	ldi	r24, 0x26	; 38
    37ca:	90 e2       	ldi	r25, 0x20	; 32
    37cc:	0e 94 60 18 	call	0x30c0	; 0x30c0 <ucg_SetFont>
}
    37d0:	0f 91       	pop	r16
    37d2:	08 95       	ret

000037d4 <main>:
	ucg_Print(&ucg,	"%d%d : %d%d : %d%d", th, h, t, m, ts, s);
}

int main(void)
{
	PORTC.DIRSET	= PIN0_bm;
    37d4:	c1 e0       	ldi	r28, 0x01	; 1
    37d6:	c0 93 41 06 	sts	0x0641, r28	; 0x800641 <__TEXT_REGION_LENGTH__+0x700641>
	PORTA.DIRCLR	= PIN7_bm;
    37da:	0f 2e       	mov	r0, r31
    37dc:	e1 2c       	mov	r14, r1
    37de:	f6 e0       	ldi	r31, 0x06	; 6
    37e0:	ff 2e       	mov	r15, r31
    37e2:	f0 2d       	mov	r31, r0
    37e4:	d0 e8       	ldi	r29, 0x80	; 128
    37e6:	f7 01       	movw	r30, r14
    37e8:	d2 83       	std	Z+2, r29	; 0x02
	PORTB.DIRCLR	= PIN0_bm;
    37ea:	00 e2       	ldi	r16, 0x20	; 32
    37ec:	16 e0       	ldi	r17, 0x06	; 6
    37ee:	f8 01       	movw	r30, r16
    37f0:	c2 83       	std	Z+2, r28	; 0x02
	PORTA.PIN7CTRL	= PORT_OPC_PULLUP_gc;
    37f2:	88 e1       	ldi	r24, 0x18	; 24
    37f4:	f7 01       	movw	r30, r14
    37f6:	87 8b       	std	Z+23, r24	; 0x17
	PORTB.PIN0CTRL	= PORT_OPC_PULLUP_gc;
    37f8:	f8 01       	movw	r30, r16
    37fa:	80 8b       	std	Z+16, r24	; 0x10
 *          which has a 16 MHz crystal 
 *
 * \return void
 */
void inline init_clock(void) {
  Config32MHzClock_Ext16M();
    37fc:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <Config32MHzClock_Ext16M>

	init_clock();
	clock();
    3800:	0e 94 ba 1b 	call	0x3774	; 0x3774 <clock>
	ucg_Init(&ucg, ucg_dev_st7735_18x128x160, ucg_ext_st7735_18,
    3804:	21 eb       	ldi	r18, 0xB1	; 177
    3806:	3c e1       	ldi	r19, 0x1C	; 28
    3808:	4f ec       	ldi	r20, 0xCF	; 207
    380a:	54 e1       	ldi	r21, 0x14	; 20
    380c:	67 e4       	ldi	r22, 0x47	; 71
    380e:	75 e1       	ldi	r23, 0x15	; 21
    3810:	86 e2       	ldi	r24, 0x26	; 38
    3812:	90 e2       	ldi	r25, 0x20	; 32
    3814:	0e 94 91 18 	call	0x3122	; 0x3122 <ucg_Init>
		(int (*)(struct _ucg_t *, int,  unsigned int,  unsigned char *)) ucg_comm_xmega);
	prepare_screen();
    3818:	0e 94 cc 1b 	call	0x3798	; 0x3798 <prepare_screen>
	PORTA.INT0MASK	= PIN7_bm;               // PA7 interrupt 0
    381c:	f7 01       	movw	r30, r14
    381e:	d2 87       	std	Z+10, r29	; 0x0a
	PORTA.PIN7CTRL	= PORT_ISC_RISING_gc;   // falling edge
    3820:	c7 8b       	std	Z+23, r28	; 0x17
	PORTA.INTCTRL	= PORT_INT0LVL_LO_gc;    // interrupt 0 low level	
    3822:	c1 87       	std	Z+9, r28	; 0x09
	PORTB.INT0MASK	= PIN0_bm;
    3824:	f8 01       	movw	r30, r16
    3826:	c2 87       	std	Z+10, r28	; 0x0a
	PORTB.PIN0CTRL	= PORT_ISC_RISING_gc;
    3828:	c0 8b       	std	Z+16, r28	; 0x10
	PORTB.INTCTRL	= PORT_INT0LVL_LO_gc;
    382a:	c1 87       	std	Z+9, r28	; 0x09
    382c:	ff cf       	rjmp	.-2      	; 0x382c <main+0x58>

0000382e <xmega_transfer>:
 *
 *  \return void
 */
void ucg_SetPrintDir(ucg_t *ucg, uint8_t dir)
{
  ((ucg_print_t *)ucg->xmega_hook)->tdir = dir;
    382e:	80 93 c3 09 	sts	0x09C3, r24	; 0x8009c3 <__TEXT_REGION_LENGTH__+0x7009c3>
    3832:	e0 ec       	ldi	r30, 0xC0	; 192
    3834:	f9 e0       	ldi	r31, 0x09	; 9
    3836:	82 81       	ldd	r24, Z+2	; 0x02
    3838:	88 23       	and	r24, r24
    383a:	ec f7       	brge	.-6      	; 0x3836 <xmega_transfer+0x8>
    383c:	08 95       	ret

0000383e <ucg_Putc>:
    383e:	0f 93       	push	r16
    3840:	cf 93       	push	r28
    3842:	df 93       	push	r29
    3844:	08 2f       	mov	r16, r24
    3846:	80 91 bd 20 	lds	r24, 0x20BD	; 0x8020bd <curr_ucg>
    384a:	90 91 be 20 	lds	r25, 0x20BE	; 0x8020be <curr_ucg+0x1>
    384e:	fc 01       	movw	r30, r24
    3850:	eb 56       	subi	r30, 0x6B	; 107
    3852:	ff 4f       	sbci	r31, 0xFF	; 255
    3854:	c0 81       	ld	r28, Z
    3856:	d1 81       	ldd	r29, Z+1	; 0x01
    3858:	4c 81       	ldd	r20, Y+4	; 0x04
    385a:	5d 81       	ldd	r21, Y+5	; 0x05
    385c:	6a 81       	ldd	r22, Y+2	; 0x02
    385e:	7b 81       	ldd	r23, Y+3	; 0x03
    3860:	2e 81       	ldd	r18, Y+6	; 0x06
    3862:	0e 94 ca 17 	call	0x2f94	; 0x2f94 <ucg_DrawGlyph>
    3866:	9c 01       	movw	r18, r24
    3868:	9e 81       	ldd	r25, Y+6	; 0x06
    386a:	91 30       	cpi	r25, 0x01	; 1
    386c:	59 f0       	breq	.+22     	; 0x3884 <ucg_Putc+0x46>
    386e:	18 f0       	brcs	.+6      	; 0x3876 <ucg_Putc+0x38>
    3870:	92 30       	cpi	r25, 0x02	; 2
    3872:	79 f0       	breq	.+30     	; 0x3892 <ucg_Putc+0x54>
    3874:	15 c0       	rjmp	.+42     	; 0x38a0 <ucg_Putc+0x62>
    3876:	8a 81       	ldd	r24, Y+2	; 0x02
    3878:	9b 81       	ldd	r25, Y+3	; 0x03
    387a:	28 0f       	add	r18, r24
    387c:	39 1f       	adc	r19, r25
    387e:	2a 83       	std	Y+2, r18	; 0x02
    3880:	3b 83       	std	Y+3, r19	; 0x03
    3882:	14 c0       	rjmp	.+40     	; 0x38ac <ucg_Putc+0x6e>
    3884:	8c 81       	ldd	r24, Y+4	; 0x04
    3886:	9d 81       	ldd	r25, Y+5	; 0x05
    3888:	28 0f       	add	r18, r24
    388a:	39 1f       	adc	r19, r25
    388c:	2c 83       	std	Y+4, r18	; 0x04
    388e:	3d 83       	std	Y+5, r19	; 0x05
    3890:	0d c0       	rjmp	.+26     	; 0x38ac <ucg_Putc+0x6e>
    3892:	8a 81       	ldd	r24, Y+2	; 0x02
    3894:	9b 81       	ldd	r25, Y+3	; 0x03
    3896:	82 1b       	sub	r24, r18
    3898:	93 0b       	sbc	r25, r19
    389a:	8a 83       	std	Y+2, r24	; 0x02
    389c:	9b 83       	std	Y+3, r25	; 0x03
    389e:	06 c0       	rjmp	.+12     	; 0x38ac <ucg_Putc+0x6e>
    38a0:	8c 81       	ldd	r24, Y+4	; 0x04
    38a2:	9d 81       	ldd	r25, Y+5	; 0x05
    38a4:	82 1b       	sub	r24, r18
    38a6:	93 0b       	sbc	r25, r19
    38a8:	8c 83       	std	Y+4, r24	; 0x04
    38aa:	9d 83       	std	Y+5, r25	; 0x05
    38ac:	81 e0       	ldi	r24, 0x01	; 1
    38ae:	90 e0       	ldi	r25, 0x00	; 0
    38b0:	df 91       	pop	r29
    38b2:	cf 91       	pop	r28
    38b4:	0f 91       	pop	r16
    38b6:	08 95       	ret

000038b8 <ucg_SetPrintPos>:
    38b8:	fc 01       	movw	r30, r24
    38ba:	eb 56       	subi	r30, 0x6B	; 107
    38bc:	ff 4f       	sbci	r31, 0xFF	; 255
    38be:	a0 81       	ld	r26, Z
    38c0:	b1 81       	ldd	r27, Z+1	; 0x01
    38c2:	12 96       	adiw	r26, 0x02	; 2
    38c4:	6d 93       	st	X+, r22
    38c6:	7c 93       	st	X, r23
    38c8:	13 97       	sbiw	r26, 0x03	; 3
    38ca:	01 90       	ld	r0, Z+
    38cc:	f0 81       	ld	r31, Z
    38ce:	e0 2d       	mov	r30, r0
    38d0:	44 83       	std	Z+4, r20	; 0x04
    38d2:	55 83       	std	Z+5, r21	; 0x05
    38d4:	08 95       	ret

000038d6 <ucg_Print>:
 *  \param  ...      variables that are printed
 *
 *  \return void
 */
void ucg_Print(ucg_t *ucg, char *fmt, ...)
{
    38d6:	cf 93       	push	r28
    38d8:	df 93       	push	r29
    38da:	cd b7       	in	r28, 0x3d	; 61
    38dc:	de b7       	in	r29, 0x3e	; 62
    38de:	8e 81       	ldd	r24, Y+6	; 0x06
    38e0:	9f 81       	ldd	r25, Y+7	; 0x07
  va_list vl;

  curr_ucg = ucg;
    38e2:	80 93 bd 20 	sts	0x20BD, r24	; 0x8020bd <curr_ucg>
    38e6:	90 93 be 20 	sts	0x20BE, r25	; 0x8020be <curr_ucg+0x1>
  va_start(vl, fmt);
  vfprintf( ((ucg_print_t *) (curr_ucg->xmega_hook))->fp, fmt, vl);
    38ea:	fc 01       	movw	r30, r24
    38ec:	eb 56       	subi	r30, 0x6B	; 107
    38ee:	ff 4f       	sbci	r31, 0xFF	; 255
    38f0:	01 90       	ld	r0, Z+
    38f2:	f0 81       	ld	r31, Z
    38f4:	e0 2d       	mov	r30, r0
    38f6:	ae 01       	movw	r20, r28
    38f8:	46 5f       	subi	r20, 0xF6	; 246
    38fa:	5f 4f       	sbci	r21, 0xFF	; 255
    38fc:	68 85       	ldd	r22, Y+8	; 0x08
    38fe:	79 85       	ldd	r23, Y+9	; 0x09
    3900:	80 81       	ld	r24, Z
    3902:	91 81       	ldd	r25, Z+1	; 0x01
    3904:	0e 94 f1 1e 	call	0x3de2	; 0x3de2 <vfprintf>
  va_end(vl);
}
    3908:	df 91       	pop	r29
    390a:	cf 91       	pop	r28
    390c:	08 95       	ret

0000390e <ucg_PrintInit>:
 *  \param  ucg      pointer to struct for the display
 *
 *  \return void
 */
void ucg_PrintInit(ucg_t *ucg)
{
    390e:	0f 93       	push	r16
    3910:	1f 93       	push	r17
    3912:	cf 93       	push	r28
    3914:	df 93       	push	r29
  if  (ucg->xmega_hook != NULL) return;
    3916:	fc 01       	movw	r30, r24
    3918:	eb 56       	subi	r30, 0x6B	; 107
    391a:	ff 4f       	sbci	r31, 0xFF	; 255
    391c:	20 81       	ld	r18, Z
    391e:	31 81       	ldd	r19, Z+1	; 0x01
    3920:	23 2b       	or	r18, r19
    3922:	d1 f4       	brne	.+52     	; 0x3958 <ucg_PrintInit+0x4a>
    3924:	ec 01       	movw	r28, r24
  
  ucg_print_t *p = (ucg_print_t *) malloc(sizeof(ucg_print_t));
    3926:	87 e0       	ldi	r24, 0x07	; 7
    3928:	90 e0       	ldi	r25, 0x00	; 0
    392a:	0e 94 85 1d 	call	0x3b0a	; 0x3b0a <malloc>
    392e:	8c 01       	movw	r16, r24
  
  if (p == NULL) return;
    3930:	89 2b       	or	r24, r25
    3932:	91 f0       	breq	.+36     	; 0x3958 <ucg_PrintInit+0x4a>
  
  p->fp    = fdevopen(ucg_Putc, NULL); 
    3934:	60 e0       	ldi	r22, 0x00	; 0
    3936:	70 e0       	ldi	r23, 0x00	; 0
    3938:	8f e1       	ldi	r24, 0x1F	; 31
    393a:	9c e1       	ldi	r25, 0x1C	; 28
    393c:	0e 94 a6 1e 	call	0x3d4c	; 0x3d4c <fdevopen>
    3940:	f8 01       	movw	r30, r16
    3942:	80 83       	st	Z, r24
    3944:	91 83       	std	Z+1, r25	; 0x01
  p->tx    = 0;
    3946:	12 82       	std	Z+2, r1	; 0x02
    3948:	13 82       	std	Z+3, r1	; 0x03
  p->ty    = 0;
    394a:	14 82       	std	Z+4, r1	; 0x04
    394c:	15 82       	std	Z+5, r1	; 0x05
  p->tdir  = 0;
    394e:	16 82       	std	Z+6, r1	; 0x06
  
  ucg->xmega_hook = (void *) p;
    3950:	cb 56       	subi	r28, 0x6B	; 107
    3952:	df 4f       	sbci	r29, 0xFF	; 255
    3954:	08 83       	st	Y, r16
    3956:	19 83       	std	Y+1, r17	; 0x01

}
    3958:	df 91       	pop	r29
    395a:	cf 91       	pop	r28
    395c:	1f 91       	pop	r17
    395e:	0f 91       	pop	r16
    3960:	08 95       	ret

00003962 <ucg_comm_xmega>:
 *  \param  data     pointer to 8-bit data-array with bytes that needs to be send
 *
 *  \return 16-bit value, always 1
 */
int16_t ucg_comm_xmega(ucg_t *ucg, int16_t msg, uint16_t arg, uint8_t *data)
{
    3962:	0f 93       	push	r16
    3964:	1f 93       	push	r17
    3966:	cf 93       	push	r28
    3968:	df 93       	push	r29
    396a:	dc 01       	movw	r26, r24
    396c:	ea 01       	movw	r28, r20
    396e:	89 01       	movw	r16, r18
  switch(msg)
    3970:	fb 01       	movw	r30, r22
    3972:	3a 97       	sbiw	r30, 0x0a	; 10
    3974:	eb 30       	cpi	r30, 0x0B	; 11
    3976:	f1 05       	cpc	r31, r1
    3978:	08 f0       	brcs	.+2      	; 0x397c <ucg_comm_xmega+0x1a>
    397a:	90 c0       	rjmp	.+288    	; 0x3a9c <ucg_comm_xmega+0x13a>
    397c:	88 27       	eor	r24, r24
    397e:	e3 5f       	subi	r30, 0xF3	; 243
    3980:	fe 4f       	sbci	r31, 0xFE	; 254
    3982:	8f 4f       	sbci	r24, 0xFF	; 255
    3984:	0c 94 69 1d 	jmp	0x3ad2	; 0x3ad2 <__tablejump2__>
        xmega_transfer(data[2]);
        arg--;
      }
      break;
    case UCG_COM_MSG_SEND_STR:
      while( arg > 0 ) {
    3988:	20 97       	sbiw	r28, 0x00	; 0
    398a:	09 f0       	breq	.+2      	; 0x398e <ucg_comm_xmega+0x2c>
    398c:	80 c0       	rjmp	.+256    	; 0x3a8e <ucg_comm_xmega+0x12c>
    398e:	86 c0       	rjmp	.+268    	; 0x3a9c <ucg_comm_xmega+0x13a>
        xmega_transfer(data[1]);
        arg--;
      }
      break;
    case UCG_COM_MSG_REPEAT_3_BYTES:
      while( arg > 0 ) {
    3990:	20 97       	sbiw	r28, 0x00	; 0
    3992:	09 f0       	breq	.+2      	; 0x3996 <ucg_comm_xmega+0x34>
    3994:	6d c0       	rjmp	.+218    	; 0x3a70 <ucg_comm_xmega+0x10e>
    3996:	82 c0       	rjmp	.+260    	; 0x3a9c <ucg_comm_xmega+0x13a>
        xmega_transfer(data[0]);
        arg--;
      }
      break;
    case UCG_COM_MSG_REPEAT_2_BYTES:
      while( arg > 0 ) {
    3998:	20 97       	sbiw	r28, 0x00	; 0
    399a:	09 f0       	breq	.+2      	; 0x399e <ucg_comm_xmega+0x3c>
    399c:	5e c0       	rjmp	.+188    	; 0x3a5a <ucg_comm_xmega+0xf8>
    399e:	7e c0       	rjmp	.+252    	; 0x3a9c <ucg_comm_xmega+0x13a>
      break;
    case UCG_COM_MSG_SEND_BYTE:
      xmega_transfer(arg);
      break;
    case UCG_COM_MSG_REPEAT_1_BYTE:
      while( arg > 0 ) {
    39a0:	20 97       	sbiw	r28, 0x00	; 0
    39a2:	09 f0       	breq	.+2      	; 0x39a6 <ucg_comm_xmega+0x44>
    39a4:	53 c0       	rjmp	.+166    	; 0x3a4c <ucg_comm_xmega+0xea>
    39a6:	7a c0       	rjmp	.+244    	; 0x3a9c <ucg_comm_xmega+0x13a>
      break;
    case UCG_COM_MSG_POWER_DOWN:
      xmega_disable();
      break;
    case UCG_COM_MSG_DELAY:
      for(uint16_t i=0; i<arg; i++) {
    39a8:	20 97       	sbiw	r28, 0x00	; 0
    39aa:	19 f5       	brne	.+70     	; 0x39f2 <ucg_comm_xmega+0x90>
    39ac:	77 c0       	rjmp	.+238    	; 0x3a9c <ucg_comm_xmega+0x13a>
 *
 *  \return void
 */
static void xmega_init(void)
{
  UCG_XMEGA_RESET_PORT.DIRSET = UCG_XMEGA_RESET_bm;
    39ae:	e0 e6       	ldi	r30, 0x60	; 96
    39b0:	f6 e0       	ldi	r31, 0x06	; 6
    39b2:	88 e0       	ldi	r24, 0x08	; 8
    39b4:	81 83       	std	Z+1, r24	; 0x01
  UCG_XMEGA_CD_PORT.DIRSET    = UCG_XMEGA_CD_bm;
    39b6:	84 e0       	ldi	r24, 0x04	; 4
    39b8:	81 83       	std	Z+1, r24	; 0x01
  #if UCG_XMEGA_BLK==UCG_XMEGA_BLK_DISABLED
    *( (register8_t *) ( &(UCG_XMEGA_BLK_PORT.PIN0CTRL) + UCG_XMEGA_BLK_bp) ) = PORT_ISC_INPUT_DISABLE_gc;
  #elif UCG_XMEGA_BLK==UCG_XMEGA_BLK_CONNECT 
      UCG_XMEGA_BLK_PORT.DIRSET   = UCG_XMEGA_BLK_bm;
    39ba:	82 e0       	ldi	r24, 0x02	; 2
    39bc:	81 83       	std	Z+1, r24	; 0x01
      UCG_XMEGA_BLK_PORT.OUTSET   = UCG_XMEGA_BLK_bm;
    39be:	85 83       	std	Z+5, r24	; 0x05
  #endif
      
  UCG_XMEGA_SCK_PORT.DIRSET   = UCG_XMEGA_SCK_bm;
    39c0:	80 e8       	ldi	r24, 0x80	; 128
    39c2:	81 83       	std	Z+1, r24	; 0x01
  UCG_XMEGA_SDA_PORT.DIRSET   = UCG_XMEGA_SDA_bm;
    39c4:	80 e2       	ldi	r24, 0x20	; 32
    39c6:	81 83       	std	Z+1, r24	; 0x01
  UCG_XMEGA_CS_PORT.DIRSET    = UCG_XMEGA_CS_bm;
    39c8:	80 e1       	ldi	r24, 0x10	; 16
    39ca:	81 83       	std	Z+1, r24	; 0x01
  UCG_XMEGA_CS_PORT.OUTSET    = UCG_XMEGA_CS_bm;
    39cc:	85 83       	std	Z+5, r24	; 0x05

  #if UCG_XMEGA_USE==UCG_XMEGA_USING_SPI
    UCG_XMEGA_MISO_PORT.DIRCLR  = UCG_XMEGA_MISO_bm;
    39ce:	80 e4       	ldi	r24, 0x40	; 64
    39d0:	82 83       	std	Z+2, r24	; 0x02
    UCG_XMEGA_INTERFACE.CTRL    =  SPI_ENABLE_bm |  // enable SPI
    39d2:	80 e5       	ldi	r24, 0x50	; 80
    39d4:	80 93 c0 09 	sts	0x09C0, r24	; 0x8009c0 <__TEXT_REGION_LENGTH__+0x7009c0>
{
  switch(msg)
  {
    case UCG_COM_MSG_POWER_UP:
      xmega_init();
      ucg_PrintInit(ucg);
    39d8:	cd 01       	movw	r24, r26
    39da:	0e 94 87 1c 	call	0x390e	; 0x390e <ucg_PrintInit>
      break;
    39de:	5e c0       	rjmp	.+188    	; 0x3a9c <ucg_comm_xmega+0x13a>
*  \return void
*/
static void xmega_disable(void)
{
  #if UCG_XMEGA_USE==UCG_XMEGA_USING_SPI
    UCG_XMEGA_INTERFACE.CTRL    = UCG_XMEGA_INTERFACE.CTRL & ~SPI_ENABLE_bm;
    39e0:	e0 ec       	ldi	r30, 0xC0	; 192
    39e2:	f9 e0       	ldi	r31, 0x09	; 9
    39e4:	80 81       	ld	r24, Z
    39e6:	8f 7b       	andi	r24, 0xBF	; 191
    39e8:	80 83       	st	Z, r24
  #endif
  #if UCG_XMEGA_BLK==UCG_XMEGA_BLK_CONNECT
    UCG_XMEGA_BLK_PORT.OUTCLR = UCG_XMEGA_BLK_bm;
    39ea:	82 e0       	ldi	r24, 0x02	; 2
    39ec:	80 93 66 06 	sts	0x0666, r24	; 0x800666 <__TEXT_REGION_LENGTH__+0x700666>
    39f0:	55 c0       	rjmp	.+170    	; 0x3a9c <ucg_comm_xmega+0x13a>
      break;
    case UCG_COM_MSG_POWER_DOWN:
      xmega_disable();
      break;
    case UCG_COM_MSG_DELAY:
      for(uint16_t i=0; i<arg; i++) {
    39f2:	80 e0       	ldi	r24, 0x00	; 0
    39f4:	90 e0       	ldi	r25, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    39f6:	2a e6       	ldi	r18, 0x6A	; 106
    39f8:	2a 95       	dec	r18
    39fa:	f1 f7       	brne	.-4      	; 0x39f8 <ucg_comm_xmega+0x96>
    39fc:	00 c0       	rjmp	.+0      	; 0x39fe <ucg_comm_xmega+0x9c>
    39fe:	01 96       	adiw	r24, 0x01	; 1
    3a00:	c8 17       	cp	r28, r24
    3a02:	d9 07       	cpc	r29, r25
    3a04:	c1 f7       	brne	.-16     	; 0x39f6 <ucg_comm_xmega+0x94>
    3a06:	4a c0       	rjmp	.+148    	; 0x3a9c <ucg_comm_xmega+0x13a>
        _delay_us(1);
      }
      break;
    case UCG_COM_MSG_CHANGE_RESET_LINE:
      if (arg) {
    3a08:	cd 2b       	or	r28, r29
    3a0a:	21 f0       	breq	.+8      	; 0x3a14 <ucg_comm_xmega+0xb2>
        UCG_XMEGA_RESET_PORT.OUTSET = UCG_XMEGA_RESET_bm;
    3a0c:	88 e0       	ldi	r24, 0x08	; 8
    3a0e:	80 93 65 06 	sts	0x0665, r24	; 0x800665 <__TEXT_REGION_LENGTH__+0x700665>
    3a12:	44 c0       	rjmp	.+136    	; 0x3a9c <ucg_comm_xmega+0x13a>
      } else {
        UCG_XMEGA_RESET_PORT.OUTCLR = UCG_XMEGA_RESET_bm;
    3a14:	88 e0       	ldi	r24, 0x08	; 8
    3a16:	80 93 66 06 	sts	0x0666, r24	; 0x800666 <__TEXT_REGION_LENGTH__+0x700666>
    3a1a:	40 c0       	rjmp	.+128    	; 0x3a9c <ucg_comm_xmega+0x13a>
      }
      break;
    case UCG_COM_MSG_CHANGE_CS_LINE:
      if (arg) {
    3a1c:	cd 2b       	or	r28, r29
    3a1e:	21 f0       	breq	.+8      	; 0x3a28 <ucg_comm_xmega+0xc6>
        UCG_XMEGA_CS_PORT.OUTSET = UCG_XMEGA_CS_bm;
    3a20:	80 e1       	ldi	r24, 0x10	; 16
    3a22:	80 93 65 06 	sts	0x0665, r24	; 0x800665 <__TEXT_REGION_LENGTH__+0x700665>
    3a26:	3a c0       	rjmp	.+116    	; 0x3a9c <ucg_comm_xmega+0x13a>
      } else {
        UCG_XMEGA_CS_PORT.OUTCLR = UCG_XMEGA_CS_bm;
    3a28:	80 e1       	ldi	r24, 0x10	; 16
    3a2a:	80 93 66 06 	sts	0x0666, r24	; 0x800666 <__TEXT_REGION_LENGTH__+0x700666>
    3a2e:	36 c0       	rjmp	.+108    	; 0x3a9c <ucg_comm_xmega+0x13a>
      }
      break;
    case UCG_COM_MSG_CHANGE_CD_LINE:
      if (arg) {
    3a30:	cd 2b       	or	r28, r29
    3a32:	21 f0       	breq	.+8      	; 0x3a3c <ucg_comm_xmega+0xda>
        UCG_XMEGA_CD_PORT.OUTSET = UCG_XMEGA_CD_bm;
    3a34:	84 e0       	ldi	r24, 0x04	; 4
    3a36:	80 93 65 06 	sts	0x0665, r24	; 0x800665 <__TEXT_REGION_LENGTH__+0x700665>
    3a3a:	30 c0       	rjmp	.+96     	; 0x3a9c <ucg_comm_xmega+0x13a>
      } else {
        UCG_XMEGA_CD_PORT.OUTCLR = UCG_XMEGA_CD_bm;
    3a3c:	84 e0       	ldi	r24, 0x04	; 4
    3a3e:	80 93 66 06 	sts	0x0666, r24	; 0x800666 <__TEXT_REGION_LENGTH__+0x700666>
    3a42:	2c c0       	rjmp	.+88     	; 0x3a9c <ucg_comm_xmega+0x13a>
      }
      break;
    case UCG_COM_MSG_SEND_BYTE:
      xmega_transfer(arg);
    3a44:	84 2f       	mov	r24, r20
    3a46:	0e 94 17 1c 	call	0x382e	; 0x382e <xmega_transfer>
      break;
    3a4a:	28 c0       	rjmp	.+80     	; 0x3a9c <ucg_comm_xmega+0x13a>
    case UCG_COM_MSG_REPEAT_1_BYTE:
      while( arg > 0 ) {
        xmega_transfer(data[0]);
    3a4c:	f8 01       	movw	r30, r16
    3a4e:	80 81       	ld	r24, Z
    3a50:	0e 94 17 1c 	call	0x382e	; 0x382e <xmega_transfer>
        arg--;
    3a54:	21 97       	sbiw	r28, 0x01	; 1
      break;
    case UCG_COM_MSG_SEND_BYTE:
      xmega_transfer(arg);
      break;
    case UCG_COM_MSG_REPEAT_1_BYTE:
      while( arg > 0 ) {
    3a56:	d1 f7       	brne	.-12     	; 0x3a4c <ucg_comm_xmega+0xea>
    3a58:	21 c0       	rjmp	.+66     	; 0x3a9c <ucg_comm_xmega+0x13a>
        arg--;
      }
      break;
    case UCG_COM_MSG_REPEAT_2_BYTES:
      while( arg > 0 ) {
        xmega_transfer(data[0]);
    3a5a:	f8 01       	movw	r30, r16
    3a5c:	80 81       	ld	r24, Z
    3a5e:	0e 94 17 1c 	call	0x382e	; 0x382e <xmega_transfer>
        xmega_transfer(data[1]);
    3a62:	f8 01       	movw	r30, r16
    3a64:	81 81       	ldd	r24, Z+1	; 0x01
    3a66:	0e 94 17 1c 	call	0x382e	; 0x382e <xmega_transfer>
        arg--;
    3a6a:	21 97       	sbiw	r28, 0x01	; 1
        xmega_transfer(data[0]);
        arg--;
      }
      break;
    case UCG_COM_MSG_REPEAT_2_BYTES:
      while( arg > 0 ) {
    3a6c:	b1 f7       	brne	.-20     	; 0x3a5a <ucg_comm_xmega+0xf8>
    3a6e:	16 c0       	rjmp	.+44     	; 0x3a9c <ucg_comm_xmega+0x13a>
        arg--;
      }
      break;
    case UCG_COM_MSG_REPEAT_3_BYTES:
      while( arg > 0 ) {
        xmega_transfer(data[0]);
    3a70:	f8 01       	movw	r30, r16
    3a72:	80 81       	ld	r24, Z
    3a74:	0e 94 17 1c 	call	0x382e	; 0x382e <xmega_transfer>
        xmega_transfer(data[1]);
    3a78:	f8 01       	movw	r30, r16
    3a7a:	81 81       	ldd	r24, Z+1	; 0x01
    3a7c:	0e 94 17 1c 	call	0x382e	; 0x382e <xmega_transfer>
        xmega_transfer(data[2]);
    3a80:	f8 01       	movw	r30, r16
    3a82:	82 81       	ldd	r24, Z+2	; 0x02
    3a84:	0e 94 17 1c 	call	0x382e	; 0x382e <xmega_transfer>
        arg--;
    3a88:	21 97       	sbiw	r28, 0x01	; 1
        xmega_transfer(data[1]);
        arg--;
      }
      break;
    case UCG_COM_MSG_REPEAT_3_BYTES:
      while( arg > 0 ) {
    3a8a:	91 f7       	brne	.-28     	; 0x3a70 <ucg_comm_xmega+0x10e>
    3a8c:	07 c0       	rjmp	.+14     	; 0x3a9c <ucg_comm_xmega+0x13a>
        arg--;
      }
      break;
    case UCG_COM_MSG_SEND_STR:
      while( arg > 0 ) {
        xmega_transfer(*data++);
    3a8e:	f8 01       	movw	r30, r16
    3a90:	81 91       	ld	r24, Z+
    3a92:	8f 01       	movw	r16, r30
    3a94:	0e 94 17 1c 	call	0x382e	; 0x382e <xmega_transfer>
        arg--;
    3a98:	21 97       	sbiw	r28, 0x01	; 1
        xmega_transfer(data[2]);
        arg--;
      }
      break;
    case UCG_COM_MSG_SEND_STR:
      while( arg > 0 ) {
    3a9a:	c9 f7       	brne	.-14     	; 0x3a8e <ucg_comm_xmega+0x12c>
        }
      break;
  }
  
  return 1;
}
    3a9c:	81 e0       	ldi	r24, 0x01	; 1
    3a9e:	90 e0       	ldi	r25, 0x00	; 0
    3aa0:	df 91       	pop	r29
    3aa2:	cf 91       	pop	r28
    3aa4:	1f 91       	pop	r17
    3aa6:	0f 91       	pop	r16
    3aa8:	08 95       	ret

00003aaa <__divmodhi4>:
    3aaa:	97 fb       	bst	r25, 7
    3aac:	07 2e       	mov	r0, r23
    3aae:	16 f4       	brtc	.+4      	; 0x3ab4 <__divmodhi4+0xa>
    3ab0:	00 94       	com	r0
    3ab2:	07 d0       	rcall	.+14     	; 0x3ac2 <__divmodhi4_neg1>
    3ab4:	77 fd       	sbrc	r23, 7
    3ab6:	09 d0       	rcall	.+18     	; 0x3aca <__divmodhi4_neg2>
    3ab8:	0e 94 71 1d 	call	0x3ae2	; 0x3ae2 <__udivmodhi4>
    3abc:	07 fc       	sbrc	r0, 7
    3abe:	05 d0       	rcall	.+10     	; 0x3aca <__divmodhi4_neg2>
    3ac0:	3e f4       	brtc	.+14     	; 0x3ad0 <__divmodhi4_exit>

00003ac2 <__divmodhi4_neg1>:
    3ac2:	90 95       	com	r25
    3ac4:	81 95       	neg	r24
    3ac6:	9f 4f       	sbci	r25, 0xFF	; 255
    3ac8:	08 95       	ret

00003aca <__divmodhi4_neg2>:
    3aca:	70 95       	com	r23
    3acc:	61 95       	neg	r22
    3ace:	7f 4f       	sbci	r23, 0xFF	; 255

00003ad0 <__divmodhi4_exit>:
    3ad0:	08 95       	ret

00003ad2 <__tablejump2__>:
    3ad2:	ee 0f       	add	r30, r30
    3ad4:	ff 1f       	adc	r31, r31
    3ad6:	88 1f       	adc	r24, r24
    3ad8:	8b bf       	out	0x3b, r24	; 59
    3ada:	07 90       	elpm	r0, Z+
    3adc:	f6 91       	elpm	r31, Z
    3ade:	e0 2d       	mov	r30, r0
    3ae0:	19 94       	eijmp

00003ae2 <__udivmodhi4>:
    3ae2:	aa 1b       	sub	r26, r26
    3ae4:	bb 1b       	sub	r27, r27
    3ae6:	51 e1       	ldi	r21, 0x11	; 17
    3ae8:	07 c0       	rjmp	.+14     	; 0x3af8 <__udivmodhi4_ep>

00003aea <__udivmodhi4_loop>:
    3aea:	aa 1f       	adc	r26, r26
    3aec:	bb 1f       	adc	r27, r27
    3aee:	a6 17       	cp	r26, r22
    3af0:	b7 07       	cpc	r27, r23
    3af2:	10 f0       	brcs	.+4      	; 0x3af8 <__udivmodhi4_ep>
    3af4:	a6 1b       	sub	r26, r22
    3af6:	b7 0b       	sbc	r27, r23

00003af8 <__udivmodhi4_ep>:
    3af8:	88 1f       	adc	r24, r24
    3afa:	99 1f       	adc	r25, r25
    3afc:	5a 95       	dec	r21
    3afe:	a9 f7       	brne	.-22     	; 0x3aea <__udivmodhi4_loop>
    3b00:	80 95       	com	r24
    3b02:	90 95       	com	r25
    3b04:	bc 01       	movw	r22, r24
    3b06:	cd 01       	movw	r24, r26
    3b08:	08 95       	ret

00003b0a <malloc>:
    3b0a:	0f 93       	push	r16
    3b0c:	1f 93       	push	r17
    3b0e:	cf 93       	push	r28
    3b10:	df 93       	push	r29
    3b12:	82 30       	cpi	r24, 0x02	; 2
    3b14:	91 05       	cpc	r25, r1
    3b16:	10 f4       	brcc	.+4      	; 0x3b1c <malloc+0x12>
    3b18:	82 e0       	ldi	r24, 0x02	; 2
    3b1a:	90 e0       	ldi	r25, 0x00	; 0
    3b1c:	e0 91 c1 20 	lds	r30, 0x20C1	; 0x8020c1 <__flp>
    3b20:	f0 91 c2 20 	lds	r31, 0x20C2	; 0x8020c2 <__flp+0x1>
    3b24:	20 e0       	ldi	r18, 0x00	; 0
    3b26:	30 e0       	ldi	r19, 0x00	; 0
    3b28:	a0 e0       	ldi	r26, 0x00	; 0
    3b2a:	b0 e0       	ldi	r27, 0x00	; 0
    3b2c:	30 97       	sbiw	r30, 0x00	; 0
    3b2e:	19 f1       	breq	.+70     	; 0x3b76 <malloc+0x6c>
    3b30:	40 81       	ld	r20, Z
    3b32:	51 81       	ldd	r21, Z+1	; 0x01
    3b34:	02 81       	ldd	r16, Z+2	; 0x02
    3b36:	13 81       	ldd	r17, Z+3	; 0x03
    3b38:	48 17       	cp	r20, r24
    3b3a:	59 07       	cpc	r21, r25
    3b3c:	c8 f0       	brcs	.+50     	; 0x3b70 <malloc+0x66>
    3b3e:	84 17       	cp	r24, r20
    3b40:	95 07       	cpc	r25, r21
    3b42:	69 f4       	brne	.+26     	; 0x3b5e <malloc+0x54>
    3b44:	10 97       	sbiw	r26, 0x00	; 0
    3b46:	31 f0       	breq	.+12     	; 0x3b54 <malloc+0x4a>
    3b48:	12 96       	adiw	r26, 0x02	; 2
    3b4a:	0c 93       	st	X, r16
    3b4c:	12 97       	sbiw	r26, 0x02	; 2
    3b4e:	13 96       	adiw	r26, 0x03	; 3
    3b50:	1c 93       	st	X, r17
    3b52:	27 c0       	rjmp	.+78     	; 0x3ba2 <malloc+0x98>
    3b54:	00 93 c1 20 	sts	0x20C1, r16	; 0x8020c1 <__flp>
    3b58:	10 93 c2 20 	sts	0x20C2, r17	; 0x8020c2 <__flp+0x1>
    3b5c:	22 c0       	rjmp	.+68     	; 0x3ba2 <malloc+0x98>
    3b5e:	21 15       	cp	r18, r1
    3b60:	31 05       	cpc	r19, r1
    3b62:	19 f0       	breq	.+6      	; 0x3b6a <malloc+0x60>
    3b64:	42 17       	cp	r20, r18
    3b66:	53 07       	cpc	r21, r19
    3b68:	18 f4       	brcc	.+6      	; 0x3b70 <malloc+0x66>
    3b6a:	9a 01       	movw	r18, r20
    3b6c:	bd 01       	movw	r22, r26
    3b6e:	ef 01       	movw	r28, r30
    3b70:	df 01       	movw	r26, r30
    3b72:	f8 01       	movw	r30, r16
    3b74:	db cf       	rjmp	.-74     	; 0x3b2c <malloc+0x22>
    3b76:	21 15       	cp	r18, r1
    3b78:	31 05       	cpc	r19, r1
    3b7a:	f9 f0       	breq	.+62     	; 0x3bba <malloc+0xb0>
    3b7c:	28 1b       	sub	r18, r24
    3b7e:	39 0b       	sbc	r19, r25
    3b80:	24 30       	cpi	r18, 0x04	; 4
    3b82:	31 05       	cpc	r19, r1
    3b84:	80 f4       	brcc	.+32     	; 0x3ba6 <malloc+0x9c>
    3b86:	8a 81       	ldd	r24, Y+2	; 0x02
    3b88:	9b 81       	ldd	r25, Y+3	; 0x03
    3b8a:	61 15       	cp	r22, r1
    3b8c:	71 05       	cpc	r23, r1
    3b8e:	21 f0       	breq	.+8      	; 0x3b98 <malloc+0x8e>
    3b90:	fb 01       	movw	r30, r22
    3b92:	82 83       	std	Z+2, r24	; 0x02
    3b94:	93 83       	std	Z+3, r25	; 0x03
    3b96:	04 c0       	rjmp	.+8      	; 0x3ba0 <malloc+0x96>
    3b98:	80 93 c1 20 	sts	0x20C1, r24	; 0x8020c1 <__flp>
    3b9c:	90 93 c2 20 	sts	0x20C2, r25	; 0x8020c2 <__flp+0x1>
    3ba0:	fe 01       	movw	r30, r28
    3ba2:	32 96       	adiw	r30, 0x02	; 2
    3ba4:	44 c0       	rjmp	.+136    	; 0x3c2e <malloc+0x124>
    3ba6:	fe 01       	movw	r30, r28
    3ba8:	e2 0f       	add	r30, r18
    3baa:	f3 1f       	adc	r31, r19
    3bac:	81 93       	st	Z+, r24
    3bae:	91 93       	st	Z+, r25
    3bb0:	22 50       	subi	r18, 0x02	; 2
    3bb2:	31 09       	sbc	r19, r1
    3bb4:	28 83       	st	Y, r18
    3bb6:	39 83       	std	Y+1, r19	; 0x01
    3bb8:	3a c0       	rjmp	.+116    	; 0x3c2e <malloc+0x124>
    3bba:	20 91 bf 20 	lds	r18, 0x20BF	; 0x8020bf <__brkval>
    3bbe:	30 91 c0 20 	lds	r19, 0x20C0	; 0x8020c0 <__brkval+0x1>
    3bc2:	23 2b       	or	r18, r19
    3bc4:	41 f4       	brne	.+16     	; 0x3bd6 <malloc+0xcc>
    3bc6:	20 91 02 20 	lds	r18, 0x2002	; 0x802002 <__malloc_heap_start>
    3bca:	30 91 03 20 	lds	r19, 0x2003	; 0x802003 <__malloc_heap_start+0x1>
    3bce:	20 93 bf 20 	sts	0x20BF, r18	; 0x8020bf <__brkval>
    3bd2:	30 93 c0 20 	sts	0x20C0, r19	; 0x8020c0 <__brkval+0x1>
    3bd6:	20 91 00 20 	lds	r18, 0x2000	; 0x802000 <__DATA_REGION_ORIGIN__>
    3bda:	30 91 01 20 	lds	r19, 0x2001	; 0x802001 <__DATA_REGION_ORIGIN__+0x1>
    3bde:	21 15       	cp	r18, r1
    3be0:	31 05       	cpc	r19, r1
    3be2:	41 f4       	brne	.+16     	; 0x3bf4 <malloc+0xea>
    3be4:	2d b7       	in	r18, 0x3d	; 61
    3be6:	3e b7       	in	r19, 0x3e	; 62
    3be8:	40 91 04 20 	lds	r20, 0x2004	; 0x802004 <__malloc_margin>
    3bec:	50 91 05 20 	lds	r21, 0x2005	; 0x802005 <__malloc_margin+0x1>
    3bf0:	24 1b       	sub	r18, r20
    3bf2:	35 0b       	sbc	r19, r21
    3bf4:	e0 91 bf 20 	lds	r30, 0x20BF	; 0x8020bf <__brkval>
    3bf8:	f0 91 c0 20 	lds	r31, 0x20C0	; 0x8020c0 <__brkval+0x1>
    3bfc:	e2 17       	cp	r30, r18
    3bfe:	f3 07       	cpc	r31, r19
    3c00:	a0 f4       	brcc	.+40     	; 0x3c2a <malloc+0x120>
    3c02:	2e 1b       	sub	r18, r30
    3c04:	3f 0b       	sbc	r19, r31
    3c06:	28 17       	cp	r18, r24
    3c08:	39 07       	cpc	r19, r25
    3c0a:	78 f0       	brcs	.+30     	; 0x3c2a <malloc+0x120>
    3c0c:	ac 01       	movw	r20, r24
    3c0e:	4e 5f       	subi	r20, 0xFE	; 254
    3c10:	5f 4f       	sbci	r21, 0xFF	; 255
    3c12:	24 17       	cp	r18, r20
    3c14:	35 07       	cpc	r19, r21
    3c16:	48 f0       	brcs	.+18     	; 0x3c2a <malloc+0x120>
    3c18:	4e 0f       	add	r20, r30
    3c1a:	5f 1f       	adc	r21, r31
    3c1c:	40 93 bf 20 	sts	0x20BF, r20	; 0x8020bf <__brkval>
    3c20:	50 93 c0 20 	sts	0x20C0, r21	; 0x8020c0 <__brkval+0x1>
    3c24:	81 93       	st	Z+, r24
    3c26:	91 93       	st	Z+, r25
    3c28:	02 c0       	rjmp	.+4      	; 0x3c2e <malloc+0x124>
    3c2a:	e0 e0       	ldi	r30, 0x00	; 0
    3c2c:	f0 e0       	ldi	r31, 0x00	; 0
    3c2e:	cf 01       	movw	r24, r30
    3c30:	df 91       	pop	r29
    3c32:	cf 91       	pop	r28
    3c34:	1f 91       	pop	r17
    3c36:	0f 91       	pop	r16
    3c38:	08 95       	ret

00003c3a <free>:
    3c3a:	cf 93       	push	r28
    3c3c:	df 93       	push	r29
    3c3e:	00 97       	sbiw	r24, 0x00	; 0
    3c40:	09 f4       	brne	.+2      	; 0x3c44 <free+0xa>
    3c42:	81 c0       	rjmp	.+258    	; 0x3d46 <free+0x10c>
    3c44:	fc 01       	movw	r30, r24
    3c46:	32 97       	sbiw	r30, 0x02	; 2
    3c48:	12 82       	std	Z+2, r1	; 0x02
    3c4a:	13 82       	std	Z+3, r1	; 0x03
    3c4c:	a0 91 c1 20 	lds	r26, 0x20C1	; 0x8020c1 <__flp>
    3c50:	b0 91 c2 20 	lds	r27, 0x20C2	; 0x8020c2 <__flp+0x1>
    3c54:	10 97       	sbiw	r26, 0x00	; 0
    3c56:	81 f4       	brne	.+32     	; 0x3c78 <free+0x3e>
    3c58:	20 81       	ld	r18, Z
    3c5a:	31 81       	ldd	r19, Z+1	; 0x01
    3c5c:	82 0f       	add	r24, r18
    3c5e:	93 1f       	adc	r25, r19
    3c60:	20 91 bf 20 	lds	r18, 0x20BF	; 0x8020bf <__brkval>
    3c64:	30 91 c0 20 	lds	r19, 0x20C0	; 0x8020c0 <__brkval+0x1>
    3c68:	28 17       	cp	r18, r24
    3c6a:	39 07       	cpc	r19, r25
    3c6c:	51 f5       	brne	.+84     	; 0x3cc2 <free+0x88>
    3c6e:	e0 93 bf 20 	sts	0x20BF, r30	; 0x8020bf <__brkval>
    3c72:	f0 93 c0 20 	sts	0x20C0, r31	; 0x8020c0 <__brkval+0x1>
    3c76:	67 c0       	rjmp	.+206    	; 0x3d46 <free+0x10c>
    3c78:	ed 01       	movw	r28, r26
    3c7a:	20 e0       	ldi	r18, 0x00	; 0
    3c7c:	30 e0       	ldi	r19, 0x00	; 0
    3c7e:	ce 17       	cp	r28, r30
    3c80:	df 07       	cpc	r29, r31
    3c82:	40 f4       	brcc	.+16     	; 0x3c94 <free+0x5a>
    3c84:	4a 81       	ldd	r20, Y+2	; 0x02
    3c86:	5b 81       	ldd	r21, Y+3	; 0x03
    3c88:	9e 01       	movw	r18, r28
    3c8a:	41 15       	cp	r20, r1
    3c8c:	51 05       	cpc	r21, r1
    3c8e:	f1 f0       	breq	.+60     	; 0x3ccc <free+0x92>
    3c90:	ea 01       	movw	r28, r20
    3c92:	f5 cf       	rjmp	.-22     	; 0x3c7e <free+0x44>
    3c94:	c2 83       	std	Z+2, r28	; 0x02
    3c96:	d3 83       	std	Z+3, r29	; 0x03
    3c98:	40 81       	ld	r20, Z
    3c9a:	51 81       	ldd	r21, Z+1	; 0x01
    3c9c:	84 0f       	add	r24, r20
    3c9e:	95 1f       	adc	r25, r21
    3ca0:	c8 17       	cp	r28, r24
    3ca2:	d9 07       	cpc	r29, r25
    3ca4:	59 f4       	brne	.+22     	; 0x3cbc <free+0x82>
    3ca6:	88 81       	ld	r24, Y
    3ca8:	99 81       	ldd	r25, Y+1	; 0x01
    3caa:	84 0f       	add	r24, r20
    3cac:	95 1f       	adc	r25, r21
    3cae:	02 96       	adiw	r24, 0x02	; 2
    3cb0:	80 83       	st	Z, r24
    3cb2:	91 83       	std	Z+1, r25	; 0x01
    3cb4:	8a 81       	ldd	r24, Y+2	; 0x02
    3cb6:	9b 81       	ldd	r25, Y+3	; 0x03
    3cb8:	82 83       	std	Z+2, r24	; 0x02
    3cba:	93 83       	std	Z+3, r25	; 0x03
    3cbc:	21 15       	cp	r18, r1
    3cbe:	31 05       	cpc	r19, r1
    3cc0:	29 f4       	brne	.+10     	; 0x3ccc <free+0x92>
    3cc2:	e0 93 c1 20 	sts	0x20C1, r30	; 0x8020c1 <__flp>
    3cc6:	f0 93 c2 20 	sts	0x20C2, r31	; 0x8020c2 <__flp+0x1>
    3cca:	3d c0       	rjmp	.+122    	; 0x3d46 <free+0x10c>
    3ccc:	e9 01       	movw	r28, r18
    3cce:	ea 83       	std	Y+2, r30	; 0x02
    3cd0:	fb 83       	std	Y+3, r31	; 0x03
    3cd2:	49 91       	ld	r20, Y+
    3cd4:	59 91       	ld	r21, Y+
    3cd6:	c4 0f       	add	r28, r20
    3cd8:	d5 1f       	adc	r29, r21
    3cda:	ec 17       	cp	r30, r28
    3cdc:	fd 07       	cpc	r31, r29
    3cde:	61 f4       	brne	.+24     	; 0x3cf8 <free+0xbe>
    3ce0:	80 81       	ld	r24, Z
    3ce2:	91 81       	ldd	r25, Z+1	; 0x01
    3ce4:	84 0f       	add	r24, r20
    3ce6:	95 1f       	adc	r25, r21
    3ce8:	02 96       	adiw	r24, 0x02	; 2
    3cea:	e9 01       	movw	r28, r18
    3cec:	88 83       	st	Y, r24
    3cee:	99 83       	std	Y+1, r25	; 0x01
    3cf0:	82 81       	ldd	r24, Z+2	; 0x02
    3cf2:	93 81       	ldd	r25, Z+3	; 0x03
    3cf4:	8a 83       	std	Y+2, r24	; 0x02
    3cf6:	9b 83       	std	Y+3, r25	; 0x03
    3cf8:	e0 e0       	ldi	r30, 0x00	; 0
    3cfa:	f0 e0       	ldi	r31, 0x00	; 0
    3cfc:	12 96       	adiw	r26, 0x02	; 2
    3cfe:	8d 91       	ld	r24, X+
    3d00:	9c 91       	ld	r25, X
    3d02:	13 97       	sbiw	r26, 0x03	; 3
    3d04:	00 97       	sbiw	r24, 0x00	; 0
    3d06:	19 f0       	breq	.+6      	; 0x3d0e <free+0xd4>
    3d08:	fd 01       	movw	r30, r26
    3d0a:	dc 01       	movw	r26, r24
    3d0c:	f7 cf       	rjmp	.-18     	; 0x3cfc <free+0xc2>
    3d0e:	8d 91       	ld	r24, X+
    3d10:	9c 91       	ld	r25, X
    3d12:	11 97       	sbiw	r26, 0x01	; 1
    3d14:	9d 01       	movw	r18, r26
    3d16:	2e 5f       	subi	r18, 0xFE	; 254
    3d18:	3f 4f       	sbci	r19, 0xFF	; 255
    3d1a:	82 0f       	add	r24, r18
    3d1c:	93 1f       	adc	r25, r19
    3d1e:	20 91 bf 20 	lds	r18, 0x20BF	; 0x8020bf <__brkval>
    3d22:	30 91 c0 20 	lds	r19, 0x20C0	; 0x8020c0 <__brkval+0x1>
    3d26:	28 17       	cp	r18, r24
    3d28:	39 07       	cpc	r19, r25
    3d2a:	69 f4       	brne	.+26     	; 0x3d46 <free+0x10c>
    3d2c:	30 97       	sbiw	r30, 0x00	; 0
    3d2e:	29 f4       	brne	.+10     	; 0x3d3a <free+0x100>
    3d30:	10 92 c1 20 	sts	0x20C1, r1	; 0x8020c1 <__flp>
    3d34:	10 92 c2 20 	sts	0x20C2, r1	; 0x8020c2 <__flp+0x1>
    3d38:	02 c0       	rjmp	.+4      	; 0x3d3e <free+0x104>
    3d3a:	12 82       	std	Z+2, r1	; 0x02
    3d3c:	13 82       	std	Z+3, r1	; 0x03
    3d3e:	a0 93 bf 20 	sts	0x20BF, r26	; 0x8020bf <__brkval>
    3d42:	b0 93 c0 20 	sts	0x20C0, r27	; 0x8020c0 <__brkval+0x1>
    3d46:	df 91       	pop	r29
    3d48:	cf 91       	pop	r28
    3d4a:	08 95       	ret

00003d4c <fdevopen>:
    3d4c:	0f 93       	push	r16
    3d4e:	1f 93       	push	r17
    3d50:	cf 93       	push	r28
    3d52:	df 93       	push	r29
    3d54:	00 97       	sbiw	r24, 0x00	; 0
    3d56:	31 f4       	brne	.+12     	; 0x3d64 <fdevopen+0x18>
    3d58:	61 15       	cp	r22, r1
    3d5a:	71 05       	cpc	r23, r1
    3d5c:	19 f4       	brne	.+6      	; 0x3d64 <fdevopen+0x18>
    3d5e:	80 e0       	ldi	r24, 0x00	; 0
    3d60:	90 e0       	ldi	r25, 0x00	; 0
    3d62:	3a c0       	rjmp	.+116    	; 0x3dd8 <fdevopen+0x8c>
    3d64:	8b 01       	movw	r16, r22
    3d66:	ec 01       	movw	r28, r24
    3d68:	6e e0       	ldi	r22, 0x0E	; 14
    3d6a:	70 e0       	ldi	r23, 0x00	; 0
    3d6c:	81 e0       	ldi	r24, 0x01	; 1
    3d6e:	90 e0       	ldi	r25, 0x00	; 0
    3d70:	0e 94 f5 20 	call	0x41ea	; 0x41ea <calloc>
    3d74:	fc 01       	movw	r30, r24
    3d76:	89 2b       	or	r24, r25
    3d78:	91 f3       	breq	.-28     	; 0x3d5e <fdevopen+0x12>
    3d7a:	80 e8       	ldi	r24, 0x80	; 128
    3d7c:	83 83       	std	Z+3, r24	; 0x03
    3d7e:	01 15       	cp	r16, r1
    3d80:	11 05       	cpc	r17, r1
    3d82:	71 f0       	breq	.+28     	; 0x3da0 <fdevopen+0x54>
    3d84:	02 87       	std	Z+10, r16	; 0x0a
    3d86:	13 87       	std	Z+11, r17	; 0x0b
    3d88:	81 e8       	ldi	r24, 0x81	; 129
    3d8a:	83 83       	std	Z+3, r24	; 0x03
    3d8c:	80 91 c3 20 	lds	r24, 0x20C3	; 0x8020c3 <__iob>
    3d90:	90 91 c4 20 	lds	r25, 0x20C4	; 0x8020c4 <__iob+0x1>
    3d94:	89 2b       	or	r24, r25
    3d96:	21 f4       	brne	.+8      	; 0x3da0 <fdevopen+0x54>
    3d98:	e0 93 c3 20 	sts	0x20C3, r30	; 0x8020c3 <__iob>
    3d9c:	f0 93 c4 20 	sts	0x20C4, r31	; 0x8020c4 <__iob+0x1>
    3da0:	20 97       	sbiw	r28, 0x00	; 0
    3da2:	c9 f0       	breq	.+50     	; 0x3dd6 <fdevopen+0x8a>
    3da4:	c0 87       	std	Z+8, r28	; 0x08
    3da6:	d1 87       	std	Z+9, r29	; 0x09
    3da8:	83 81       	ldd	r24, Z+3	; 0x03
    3daa:	82 60       	ori	r24, 0x02	; 2
    3dac:	83 83       	std	Z+3, r24	; 0x03
    3dae:	80 91 c5 20 	lds	r24, 0x20C5	; 0x8020c5 <__iob+0x2>
    3db2:	90 91 c6 20 	lds	r25, 0x20C6	; 0x8020c6 <__iob+0x3>
    3db6:	89 2b       	or	r24, r25
    3db8:	71 f4       	brne	.+28     	; 0x3dd6 <fdevopen+0x8a>
    3dba:	e0 93 c5 20 	sts	0x20C5, r30	; 0x8020c5 <__iob+0x2>
    3dbe:	f0 93 c6 20 	sts	0x20C6, r31	; 0x8020c6 <__iob+0x3>
    3dc2:	80 91 c7 20 	lds	r24, 0x20C7	; 0x8020c7 <__iob+0x4>
    3dc6:	90 91 c8 20 	lds	r25, 0x20C8	; 0x8020c8 <__iob+0x5>
    3dca:	89 2b       	or	r24, r25
    3dcc:	21 f4       	brne	.+8      	; 0x3dd6 <fdevopen+0x8a>
    3dce:	e0 93 c7 20 	sts	0x20C7, r30	; 0x8020c7 <__iob+0x4>
    3dd2:	f0 93 c8 20 	sts	0x20C8, r31	; 0x8020c8 <__iob+0x5>
    3dd6:	cf 01       	movw	r24, r30
    3dd8:	df 91       	pop	r29
    3dda:	cf 91       	pop	r28
    3ddc:	1f 91       	pop	r17
    3dde:	0f 91       	pop	r16
    3de0:	08 95       	ret

00003de2 <vfprintf>:
    3de2:	2f 92       	push	r2
    3de4:	3f 92       	push	r3
    3de6:	4f 92       	push	r4
    3de8:	5f 92       	push	r5
    3dea:	6f 92       	push	r6
    3dec:	7f 92       	push	r7
    3dee:	8f 92       	push	r8
    3df0:	9f 92       	push	r9
    3df2:	af 92       	push	r10
    3df4:	bf 92       	push	r11
    3df6:	cf 92       	push	r12
    3df8:	df 92       	push	r13
    3dfa:	ef 92       	push	r14
    3dfc:	ff 92       	push	r15
    3dfe:	0f 93       	push	r16
    3e00:	1f 93       	push	r17
    3e02:	cf 93       	push	r28
    3e04:	df 93       	push	r29
    3e06:	cd b7       	in	r28, 0x3d	; 61
    3e08:	de b7       	in	r29, 0x3e	; 62
    3e0a:	2b 97       	sbiw	r28, 0x0b	; 11
    3e0c:	cd bf       	out	0x3d, r28	; 61
    3e0e:	de bf       	out	0x3e, r29	; 62
    3e10:	6c 01       	movw	r12, r24
    3e12:	7b 01       	movw	r14, r22
    3e14:	8a 01       	movw	r16, r20
    3e16:	fc 01       	movw	r30, r24
    3e18:	16 82       	std	Z+6, r1	; 0x06
    3e1a:	17 82       	std	Z+7, r1	; 0x07
    3e1c:	83 81       	ldd	r24, Z+3	; 0x03
    3e1e:	81 ff       	sbrs	r24, 1
    3e20:	cc c1       	rjmp	.+920    	; 0x41ba <vfprintf+0x3d8>
    3e22:	ce 01       	movw	r24, r28
    3e24:	01 96       	adiw	r24, 0x01	; 1
    3e26:	3c 01       	movw	r6, r24
    3e28:	f6 01       	movw	r30, r12
    3e2a:	93 81       	ldd	r25, Z+3	; 0x03
    3e2c:	f7 01       	movw	r30, r14
    3e2e:	93 fd       	sbrc	r25, 3
    3e30:	85 91       	lpm	r24, Z+
    3e32:	93 ff       	sbrs	r25, 3
    3e34:	81 91       	ld	r24, Z+
    3e36:	7f 01       	movw	r14, r30
    3e38:	88 23       	and	r24, r24
    3e3a:	09 f4       	brne	.+2      	; 0x3e3e <vfprintf+0x5c>
    3e3c:	ba c1       	rjmp	.+884    	; 0x41b2 <vfprintf+0x3d0>
    3e3e:	85 32       	cpi	r24, 0x25	; 37
    3e40:	39 f4       	brne	.+14     	; 0x3e50 <vfprintf+0x6e>
    3e42:	93 fd       	sbrc	r25, 3
    3e44:	85 91       	lpm	r24, Z+
    3e46:	93 ff       	sbrs	r25, 3
    3e48:	81 91       	ld	r24, Z+
    3e4a:	7f 01       	movw	r14, r30
    3e4c:	85 32       	cpi	r24, 0x25	; 37
    3e4e:	29 f4       	brne	.+10     	; 0x3e5a <vfprintf+0x78>
    3e50:	b6 01       	movw	r22, r12
    3e52:	90 e0       	ldi	r25, 0x00	; 0
    3e54:	0e 94 2e 21 	call	0x425c	; 0x425c <fputc>
    3e58:	e7 cf       	rjmp	.-50     	; 0x3e28 <vfprintf+0x46>
    3e5a:	91 2c       	mov	r9, r1
    3e5c:	21 2c       	mov	r2, r1
    3e5e:	31 2c       	mov	r3, r1
    3e60:	ff e1       	ldi	r31, 0x1F	; 31
    3e62:	f3 15       	cp	r31, r3
    3e64:	d8 f0       	brcs	.+54     	; 0x3e9c <vfprintf+0xba>
    3e66:	8b 32       	cpi	r24, 0x2B	; 43
    3e68:	79 f0       	breq	.+30     	; 0x3e88 <vfprintf+0xa6>
    3e6a:	38 f4       	brcc	.+14     	; 0x3e7a <vfprintf+0x98>
    3e6c:	80 32       	cpi	r24, 0x20	; 32
    3e6e:	79 f0       	breq	.+30     	; 0x3e8e <vfprintf+0xac>
    3e70:	83 32       	cpi	r24, 0x23	; 35
    3e72:	a1 f4       	brne	.+40     	; 0x3e9c <vfprintf+0xba>
    3e74:	23 2d       	mov	r18, r3
    3e76:	20 61       	ori	r18, 0x10	; 16
    3e78:	1d c0       	rjmp	.+58     	; 0x3eb4 <vfprintf+0xd2>
    3e7a:	8d 32       	cpi	r24, 0x2D	; 45
    3e7c:	61 f0       	breq	.+24     	; 0x3e96 <vfprintf+0xb4>
    3e7e:	80 33       	cpi	r24, 0x30	; 48
    3e80:	69 f4       	brne	.+26     	; 0x3e9c <vfprintf+0xba>
    3e82:	23 2d       	mov	r18, r3
    3e84:	21 60       	ori	r18, 0x01	; 1
    3e86:	16 c0       	rjmp	.+44     	; 0x3eb4 <vfprintf+0xd2>
    3e88:	83 2d       	mov	r24, r3
    3e8a:	82 60       	ori	r24, 0x02	; 2
    3e8c:	38 2e       	mov	r3, r24
    3e8e:	e3 2d       	mov	r30, r3
    3e90:	e4 60       	ori	r30, 0x04	; 4
    3e92:	3e 2e       	mov	r3, r30
    3e94:	2a c0       	rjmp	.+84     	; 0x3eea <vfprintf+0x108>
    3e96:	f3 2d       	mov	r31, r3
    3e98:	f8 60       	ori	r31, 0x08	; 8
    3e9a:	1d c0       	rjmp	.+58     	; 0x3ed6 <vfprintf+0xf4>
    3e9c:	37 fc       	sbrc	r3, 7
    3e9e:	2d c0       	rjmp	.+90     	; 0x3efa <vfprintf+0x118>
    3ea0:	20 ed       	ldi	r18, 0xD0	; 208
    3ea2:	28 0f       	add	r18, r24
    3ea4:	2a 30       	cpi	r18, 0x0A	; 10
    3ea6:	40 f0       	brcs	.+16     	; 0x3eb8 <vfprintf+0xd6>
    3ea8:	8e 32       	cpi	r24, 0x2E	; 46
    3eaa:	b9 f4       	brne	.+46     	; 0x3eda <vfprintf+0xf8>
    3eac:	36 fc       	sbrc	r3, 6
    3eae:	81 c1       	rjmp	.+770    	; 0x41b2 <vfprintf+0x3d0>
    3eb0:	23 2d       	mov	r18, r3
    3eb2:	20 64       	ori	r18, 0x40	; 64
    3eb4:	32 2e       	mov	r3, r18
    3eb6:	19 c0       	rjmp	.+50     	; 0x3eea <vfprintf+0x108>
    3eb8:	36 fe       	sbrs	r3, 6
    3eba:	06 c0       	rjmp	.+12     	; 0x3ec8 <vfprintf+0xe6>
    3ebc:	8a e0       	ldi	r24, 0x0A	; 10
    3ebe:	98 9e       	mul	r9, r24
    3ec0:	20 0d       	add	r18, r0
    3ec2:	11 24       	eor	r1, r1
    3ec4:	92 2e       	mov	r9, r18
    3ec6:	11 c0       	rjmp	.+34     	; 0x3eea <vfprintf+0x108>
    3ec8:	ea e0       	ldi	r30, 0x0A	; 10
    3eca:	2e 9e       	mul	r2, r30
    3ecc:	20 0d       	add	r18, r0
    3ece:	11 24       	eor	r1, r1
    3ed0:	22 2e       	mov	r2, r18
    3ed2:	f3 2d       	mov	r31, r3
    3ed4:	f0 62       	ori	r31, 0x20	; 32
    3ed6:	3f 2e       	mov	r3, r31
    3ed8:	08 c0       	rjmp	.+16     	; 0x3eea <vfprintf+0x108>
    3eda:	8c 36       	cpi	r24, 0x6C	; 108
    3edc:	21 f4       	brne	.+8      	; 0x3ee6 <vfprintf+0x104>
    3ede:	83 2d       	mov	r24, r3
    3ee0:	80 68       	ori	r24, 0x80	; 128
    3ee2:	38 2e       	mov	r3, r24
    3ee4:	02 c0       	rjmp	.+4      	; 0x3eea <vfprintf+0x108>
    3ee6:	88 36       	cpi	r24, 0x68	; 104
    3ee8:	41 f4       	brne	.+16     	; 0x3efa <vfprintf+0x118>
    3eea:	f7 01       	movw	r30, r14
    3eec:	93 fd       	sbrc	r25, 3
    3eee:	85 91       	lpm	r24, Z+
    3ef0:	93 ff       	sbrs	r25, 3
    3ef2:	81 91       	ld	r24, Z+
    3ef4:	7f 01       	movw	r14, r30
    3ef6:	81 11       	cpse	r24, r1
    3ef8:	b3 cf       	rjmp	.-154    	; 0x3e60 <vfprintf+0x7e>
    3efa:	98 2f       	mov	r25, r24
    3efc:	9f 7d       	andi	r25, 0xDF	; 223
    3efe:	95 54       	subi	r25, 0x45	; 69
    3f00:	93 30       	cpi	r25, 0x03	; 3
    3f02:	28 f4       	brcc	.+10     	; 0x3f0e <vfprintf+0x12c>
    3f04:	0c 5f       	subi	r16, 0xFC	; 252
    3f06:	1f 4f       	sbci	r17, 0xFF	; 255
    3f08:	9f e3       	ldi	r25, 0x3F	; 63
    3f0a:	99 83       	std	Y+1, r25	; 0x01
    3f0c:	0d c0       	rjmp	.+26     	; 0x3f28 <vfprintf+0x146>
    3f0e:	83 36       	cpi	r24, 0x63	; 99
    3f10:	31 f0       	breq	.+12     	; 0x3f1e <vfprintf+0x13c>
    3f12:	83 37       	cpi	r24, 0x73	; 115
    3f14:	71 f0       	breq	.+28     	; 0x3f32 <vfprintf+0x150>
    3f16:	83 35       	cpi	r24, 0x53	; 83
    3f18:	09 f0       	breq	.+2      	; 0x3f1c <vfprintf+0x13a>
    3f1a:	59 c0       	rjmp	.+178    	; 0x3fce <vfprintf+0x1ec>
    3f1c:	21 c0       	rjmp	.+66     	; 0x3f60 <vfprintf+0x17e>
    3f1e:	f8 01       	movw	r30, r16
    3f20:	80 81       	ld	r24, Z
    3f22:	89 83       	std	Y+1, r24	; 0x01
    3f24:	0e 5f       	subi	r16, 0xFE	; 254
    3f26:	1f 4f       	sbci	r17, 0xFF	; 255
    3f28:	88 24       	eor	r8, r8
    3f2a:	83 94       	inc	r8
    3f2c:	91 2c       	mov	r9, r1
    3f2e:	53 01       	movw	r10, r6
    3f30:	13 c0       	rjmp	.+38     	; 0x3f58 <vfprintf+0x176>
    3f32:	28 01       	movw	r4, r16
    3f34:	f2 e0       	ldi	r31, 0x02	; 2
    3f36:	4f 0e       	add	r4, r31
    3f38:	51 1c       	adc	r5, r1
    3f3a:	f8 01       	movw	r30, r16
    3f3c:	a0 80       	ld	r10, Z
    3f3e:	b1 80       	ldd	r11, Z+1	; 0x01
    3f40:	36 fe       	sbrs	r3, 6
    3f42:	03 c0       	rjmp	.+6      	; 0x3f4a <vfprintf+0x168>
    3f44:	69 2d       	mov	r22, r9
    3f46:	70 e0       	ldi	r23, 0x00	; 0
    3f48:	02 c0       	rjmp	.+4      	; 0x3f4e <vfprintf+0x16c>
    3f4a:	6f ef       	ldi	r22, 0xFF	; 255
    3f4c:	7f ef       	ldi	r23, 0xFF	; 255
    3f4e:	c5 01       	movw	r24, r10
    3f50:	0e 94 23 21 	call	0x4246	; 0x4246 <strnlen>
    3f54:	4c 01       	movw	r8, r24
    3f56:	82 01       	movw	r16, r4
    3f58:	f3 2d       	mov	r31, r3
    3f5a:	ff 77       	andi	r31, 0x7F	; 127
    3f5c:	3f 2e       	mov	r3, r31
    3f5e:	16 c0       	rjmp	.+44     	; 0x3f8c <vfprintf+0x1aa>
    3f60:	28 01       	movw	r4, r16
    3f62:	22 e0       	ldi	r18, 0x02	; 2
    3f64:	42 0e       	add	r4, r18
    3f66:	51 1c       	adc	r5, r1
    3f68:	f8 01       	movw	r30, r16
    3f6a:	a0 80       	ld	r10, Z
    3f6c:	b1 80       	ldd	r11, Z+1	; 0x01
    3f6e:	36 fe       	sbrs	r3, 6
    3f70:	03 c0       	rjmp	.+6      	; 0x3f78 <vfprintf+0x196>
    3f72:	69 2d       	mov	r22, r9
    3f74:	70 e0       	ldi	r23, 0x00	; 0
    3f76:	02 c0       	rjmp	.+4      	; 0x3f7c <vfprintf+0x19a>
    3f78:	6f ef       	ldi	r22, 0xFF	; 255
    3f7a:	7f ef       	ldi	r23, 0xFF	; 255
    3f7c:	c5 01       	movw	r24, r10
    3f7e:	0e 94 11 21 	call	0x4222	; 0x4222 <strnlen_P>
    3f82:	4c 01       	movw	r8, r24
    3f84:	f3 2d       	mov	r31, r3
    3f86:	f0 68       	ori	r31, 0x80	; 128
    3f88:	3f 2e       	mov	r3, r31
    3f8a:	82 01       	movw	r16, r4
    3f8c:	33 fc       	sbrc	r3, 3
    3f8e:	1b c0       	rjmp	.+54     	; 0x3fc6 <vfprintf+0x1e4>
    3f90:	82 2d       	mov	r24, r2
    3f92:	90 e0       	ldi	r25, 0x00	; 0
    3f94:	88 16       	cp	r8, r24
    3f96:	99 06       	cpc	r9, r25
    3f98:	b0 f4       	brcc	.+44     	; 0x3fc6 <vfprintf+0x1e4>
    3f9a:	b6 01       	movw	r22, r12
    3f9c:	80 e2       	ldi	r24, 0x20	; 32
    3f9e:	90 e0       	ldi	r25, 0x00	; 0
    3fa0:	0e 94 2e 21 	call	0x425c	; 0x425c <fputc>
    3fa4:	2a 94       	dec	r2
    3fa6:	f4 cf       	rjmp	.-24     	; 0x3f90 <vfprintf+0x1ae>
    3fa8:	f5 01       	movw	r30, r10
    3faa:	37 fc       	sbrc	r3, 7
    3fac:	85 91       	lpm	r24, Z+
    3fae:	37 fe       	sbrs	r3, 7
    3fb0:	81 91       	ld	r24, Z+
    3fb2:	5f 01       	movw	r10, r30
    3fb4:	b6 01       	movw	r22, r12
    3fb6:	90 e0       	ldi	r25, 0x00	; 0
    3fb8:	0e 94 2e 21 	call	0x425c	; 0x425c <fputc>
    3fbc:	21 10       	cpse	r2, r1
    3fbe:	2a 94       	dec	r2
    3fc0:	21 e0       	ldi	r18, 0x01	; 1
    3fc2:	82 1a       	sub	r8, r18
    3fc4:	91 08       	sbc	r9, r1
    3fc6:	81 14       	cp	r8, r1
    3fc8:	91 04       	cpc	r9, r1
    3fca:	71 f7       	brne	.-36     	; 0x3fa8 <vfprintf+0x1c6>
    3fcc:	e8 c0       	rjmp	.+464    	; 0x419e <vfprintf+0x3bc>
    3fce:	84 36       	cpi	r24, 0x64	; 100
    3fd0:	11 f0       	breq	.+4      	; 0x3fd6 <vfprintf+0x1f4>
    3fd2:	89 36       	cpi	r24, 0x69	; 105
    3fd4:	41 f5       	brne	.+80     	; 0x4026 <vfprintf+0x244>
    3fd6:	f8 01       	movw	r30, r16
    3fd8:	37 fe       	sbrs	r3, 7
    3fda:	07 c0       	rjmp	.+14     	; 0x3fea <vfprintf+0x208>
    3fdc:	60 81       	ld	r22, Z
    3fde:	71 81       	ldd	r23, Z+1	; 0x01
    3fe0:	82 81       	ldd	r24, Z+2	; 0x02
    3fe2:	93 81       	ldd	r25, Z+3	; 0x03
    3fe4:	0c 5f       	subi	r16, 0xFC	; 252
    3fe6:	1f 4f       	sbci	r17, 0xFF	; 255
    3fe8:	08 c0       	rjmp	.+16     	; 0x3ffa <vfprintf+0x218>
    3fea:	60 81       	ld	r22, Z
    3fec:	71 81       	ldd	r23, Z+1	; 0x01
    3fee:	07 2e       	mov	r0, r23
    3ff0:	00 0c       	add	r0, r0
    3ff2:	88 0b       	sbc	r24, r24
    3ff4:	99 0b       	sbc	r25, r25
    3ff6:	0e 5f       	subi	r16, 0xFE	; 254
    3ff8:	1f 4f       	sbci	r17, 0xFF	; 255
    3ffa:	f3 2d       	mov	r31, r3
    3ffc:	ff 76       	andi	r31, 0x6F	; 111
    3ffe:	3f 2e       	mov	r3, r31
    4000:	97 ff       	sbrs	r25, 7
    4002:	09 c0       	rjmp	.+18     	; 0x4016 <vfprintf+0x234>
    4004:	90 95       	com	r25
    4006:	80 95       	com	r24
    4008:	70 95       	com	r23
    400a:	61 95       	neg	r22
    400c:	7f 4f       	sbci	r23, 0xFF	; 255
    400e:	8f 4f       	sbci	r24, 0xFF	; 255
    4010:	9f 4f       	sbci	r25, 0xFF	; 255
    4012:	f0 68       	ori	r31, 0x80	; 128
    4014:	3f 2e       	mov	r3, r31
    4016:	2a e0       	ldi	r18, 0x0A	; 10
    4018:	30 e0       	ldi	r19, 0x00	; 0
    401a:	a3 01       	movw	r20, r6
    401c:	0e 94 6a 21 	call	0x42d4	; 0x42d4 <__ultoa_invert>
    4020:	88 2e       	mov	r8, r24
    4022:	86 18       	sub	r8, r6
    4024:	45 c0       	rjmp	.+138    	; 0x40b0 <vfprintf+0x2ce>
    4026:	85 37       	cpi	r24, 0x75	; 117
    4028:	31 f4       	brne	.+12     	; 0x4036 <vfprintf+0x254>
    402a:	23 2d       	mov	r18, r3
    402c:	2f 7e       	andi	r18, 0xEF	; 239
    402e:	b2 2e       	mov	r11, r18
    4030:	2a e0       	ldi	r18, 0x0A	; 10
    4032:	30 e0       	ldi	r19, 0x00	; 0
    4034:	25 c0       	rjmp	.+74     	; 0x4080 <vfprintf+0x29e>
    4036:	93 2d       	mov	r25, r3
    4038:	99 7f       	andi	r25, 0xF9	; 249
    403a:	b9 2e       	mov	r11, r25
    403c:	8f 36       	cpi	r24, 0x6F	; 111
    403e:	c1 f0       	breq	.+48     	; 0x4070 <vfprintf+0x28e>
    4040:	18 f4       	brcc	.+6      	; 0x4048 <vfprintf+0x266>
    4042:	88 35       	cpi	r24, 0x58	; 88
    4044:	79 f0       	breq	.+30     	; 0x4064 <vfprintf+0x282>
    4046:	b5 c0       	rjmp	.+362    	; 0x41b2 <vfprintf+0x3d0>
    4048:	80 37       	cpi	r24, 0x70	; 112
    404a:	19 f0       	breq	.+6      	; 0x4052 <vfprintf+0x270>
    404c:	88 37       	cpi	r24, 0x78	; 120
    404e:	21 f0       	breq	.+8      	; 0x4058 <vfprintf+0x276>
    4050:	b0 c0       	rjmp	.+352    	; 0x41b2 <vfprintf+0x3d0>
    4052:	e9 2f       	mov	r30, r25
    4054:	e0 61       	ori	r30, 0x10	; 16
    4056:	be 2e       	mov	r11, r30
    4058:	b4 fe       	sbrs	r11, 4
    405a:	0d c0       	rjmp	.+26     	; 0x4076 <vfprintf+0x294>
    405c:	fb 2d       	mov	r31, r11
    405e:	f4 60       	ori	r31, 0x04	; 4
    4060:	bf 2e       	mov	r11, r31
    4062:	09 c0       	rjmp	.+18     	; 0x4076 <vfprintf+0x294>
    4064:	34 fe       	sbrs	r3, 4
    4066:	0a c0       	rjmp	.+20     	; 0x407c <vfprintf+0x29a>
    4068:	29 2f       	mov	r18, r25
    406a:	26 60       	ori	r18, 0x06	; 6
    406c:	b2 2e       	mov	r11, r18
    406e:	06 c0       	rjmp	.+12     	; 0x407c <vfprintf+0x29a>
    4070:	28 e0       	ldi	r18, 0x08	; 8
    4072:	30 e0       	ldi	r19, 0x00	; 0
    4074:	05 c0       	rjmp	.+10     	; 0x4080 <vfprintf+0x29e>
    4076:	20 e1       	ldi	r18, 0x10	; 16
    4078:	30 e0       	ldi	r19, 0x00	; 0
    407a:	02 c0       	rjmp	.+4      	; 0x4080 <vfprintf+0x29e>
    407c:	20 e1       	ldi	r18, 0x10	; 16
    407e:	32 e0       	ldi	r19, 0x02	; 2
    4080:	f8 01       	movw	r30, r16
    4082:	b7 fe       	sbrs	r11, 7
    4084:	07 c0       	rjmp	.+14     	; 0x4094 <vfprintf+0x2b2>
    4086:	60 81       	ld	r22, Z
    4088:	71 81       	ldd	r23, Z+1	; 0x01
    408a:	82 81       	ldd	r24, Z+2	; 0x02
    408c:	93 81       	ldd	r25, Z+3	; 0x03
    408e:	0c 5f       	subi	r16, 0xFC	; 252
    4090:	1f 4f       	sbci	r17, 0xFF	; 255
    4092:	06 c0       	rjmp	.+12     	; 0x40a0 <vfprintf+0x2be>
    4094:	60 81       	ld	r22, Z
    4096:	71 81       	ldd	r23, Z+1	; 0x01
    4098:	80 e0       	ldi	r24, 0x00	; 0
    409a:	90 e0       	ldi	r25, 0x00	; 0
    409c:	0e 5f       	subi	r16, 0xFE	; 254
    409e:	1f 4f       	sbci	r17, 0xFF	; 255
    40a0:	a3 01       	movw	r20, r6
    40a2:	0e 94 6a 21 	call	0x42d4	; 0x42d4 <__ultoa_invert>
    40a6:	88 2e       	mov	r8, r24
    40a8:	86 18       	sub	r8, r6
    40aa:	fb 2d       	mov	r31, r11
    40ac:	ff 77       	andi	r31, 0x7F	; 127
    40ae:	3f 2e       	mov	r3, r31
    40b0:	36 fe       	sbrs	r3, 6
    40b2:	0d c0       	rjmp	.+26     	; 0x40ce <vfprintf+0x2ec>
    40b4:	23 2d       	mov	r18, r3
    40b6:	2e 7f       	andi	r18, 0xFE	; 254
    40b8:	a2 2e       	mov	r10, r18
    40ba:	89 14       	cp	r8, r9
    40bc:	58 f4       	brcc	.+22     	; 0x40d4 <vfprintf+0x2f2>
    40be:	34 fe       	sbrs	r3, 4
    40c0:	0b c0       	rjmp	.+22     	; 0x40d8 <vfprintf+0x2f6>
    40c2:	32 fc       	sbrc	r3, 2
    40c4:	09 c0       	rjmp	.+18     	; 0x40d8 <vfprintf+0x2f6>
    40c6:	83 2d       	mov	r24, r3
    40c8:	8e 7e       	andi	r24, 0xEE	; 238
    40ca:	a8 2e       	mov	r10, r24
    40cc:	05 c0       	rjmp	.+10     	; 0x40d8 <vfprintf+0x2f6>
    40ce:	b8 2c       	mov	r11, r8
    40d0:	a3 2c       	mov	r10, r3
    40d2:	03 c0       	rjmp	.+6      	; 0x40da <vfprintf+0x2f8>
    40d4:	b8 2c       	mov	r11, r8
    40d6:	01 c0       	rjmp	.+2      	; 0x40da <vfprintf+0x2f8>
    40d8:	b9 2c       	mov	r11, r9
    40da:	a4 fe       	sbrs	r10, 4
    40dc:	0f c0       	rjmp	.+30     	; 0x40fc <vfprintf+0x31a>
    40de:	fe 01       	movw	r30, r28
    40e0:	e8 0d       	add	r30, r8
    40e2:	f1 1d       	adc	r31, r1
    40e4:	80 81       	ld	r24, Z
    40e6:	80 33       	cpi	r24, 0x30	; 48
    40e8:	21 f4       	brne	.+8      	; 0x40f2 <vfprintf+0x310>
    40ea:	9a 2d       	mov	r25, r10
    40ec:	99 7e       	andi	r25, 0xE9	; 233
    40ee:	a9 2e       	mov	r10, r25
    40f0:	09 c0       	rjmp	.+18     	; 0x4104 <vfprintf+0x322>
    40f2:	a2 fe       	sbrs	r10, 2
    40f4:	06 c0       	rjmp	.+12     	; 0x4102 <vfprintf+0x320>
    40f6:	b3 94       	inc	r11
    40f8:	b3 94       	inc	r11
    40fa:	04 c0       	rjmp	.+8      	; 0x4104 <vfprintf+0x322>
    40fc:	8a 2d       	mov	r24, r10
    40fe:	86 78       	andi	r24, 0x86	; 134
    4100:	09 f0       	breq	.+2      	; 0x4104 <vfprintf+0x322>
    4102:	b3 94       	inc	r11
    4104:	a3 fc       	sbrc	r10, 3
    4106:	11 c0       	rjmp	.+34     	; 0x412a <vfprintf+0x348>
    4108:	a0 fe       	sbrs	r10, 0
    410a:	06 c0       	rjmp	.+12     	; 0x4118 <vfprintf+0x336>
    410c:	b2 14       	cp	r11, r2
    410e:	88 f4       	brcc	.+34     	; 0x4132 <vfprintf+0x350>
    4110:	28 0c       	add	r2, r8
    4112:	92 2c       	mov	r9, r2
    4114:	9b 18       	sub	r9, r11
    4116:	0e c0       	rjmp	.+28     	; 0x4134 <vfprintf+0x352>
    4118:	b2 14       	cp	r11, r2
    411a:	60 f4       	brcc	.+24     	; 0x4134 <vfprintf+0x352>
    411c:	b6 01       	movw	r22, r12
    411e:	80 e2       	ldi	r24, 0x20	; 32
    4120:	90 e0       	ldi	r25, 0x00	; 0
    4122:	0e 94 2e 21 	call	0x425c	; 0x425c <fputc>
    4126:	b3 94       	inc	r11
    4128:	f7 cf       	rjmp	.-18     	; 0x4118 <vfprintf+0x336>
    412a:	b2 14       	cp	r11, r2
    412c:	18 f4       	brcc	.+6      	; 0x4134 <vfprintf+0x352>
    412e:	2b 18       	sub	r2, r11
    4130:	02 c0       	rjmp	.+4      	; 0x4136 <vfprintf+0x354>
    4132:	98 2c       	mov	r9, r8
    4134:	21 2c       	mov	r2, r1
    4136:	a4 fe       	sbrs	r10, 4
    4138:	10 c0       	rjmp	.+32     	; 0x415a <vfprintf+0x378>
    413a:	b6 01       	movw	r22, r12
    413c:	80 e3       	ldi	r24, 0x30	; 48
    413e:	90 e0       	ldi	r25, 0x00	; 0
    4140:	0e 94 2e 21 	call	0x425c	; 0x425c <fputc>
    4144:	a2 fe       	sbrs	r10, 2
    4146:	17 c0       	rjmp	.+46     	; 0x4176 <vfprintf+0x394>
    4148:	a1 fc       	sbrc	r10, 1
    414a:	03 c0       	rjmp	.+6      	; 0x4152 <vfprintf+0x370>
    414c:	88 e7       	ldi	r24, 0x78	; 120
    414e:	90 e0       	ldi	r25, 0x00	; 0
    4150:	02 c0       	rjmp	.+4      	; 0x4156 <vfprintf+0x374>
    4152:	88 e5       	ldi	r24, 0x58	; 88
    4154:	90 e0       	ldi	r25, 0x00	; 0
    4156:	b6 01       	movw	r22, r12
    4158:	0c c0       	rjmp	.+24     	; 0x4172 <vfprintf+0x390>
    415a:	8a 2d       	mov	r24, r10
    415c:	86 78       	andi	r24, 0x86	; 134
    415e:	59 f0       	breq	.+22     	; 0x4176 <vfprintf+0x394>
    4160:	a1 fe       	sbrs	r10, 1
    4162:	02 c0       	rjmp	.+4      	; 0x4168 <vfprintf+0x386>
    4164:	8b e2       	ldi	r24, 0x2B	; 43
    4166:	01 c0       	rjmp	.+2      	; 0x416a <vfprintf+0x388>
    4168:	80 e2       	ldi	r24, 0x20	; 32
    416a:	a7 fc       	sbrc	r10, 7
    416c:	8d e2       	ldi	r24, 0x2D	; 45
    416e:	b6 01       	movw	r22, r12
    4170:	90 e0       	ldi	r25, 0x00	; 0
    4172:	0e 94 2e 21 	call	0x425c	; 0x425c <fputc>
    4176:	89 14       	cp	r8, r9
    4178:	38 f4       	brcc	.+14     	; 0x4188 <vfprintf+0x3a6>
    417a:	b6 01       	movw	r22, r12
    417c:	80 e3       	ldi	r24, 0x30	; 48
    417e:	90 e0       	ldi	r25, 0x00	; 0
    4180:	0e 94 2e 21 	call	0x425c	; 0x425c <fputc>
    4184:	9a 94       	dec	r9
    4186:	f7 cf       	rjmp	.-18     	; 0x4176 <vfprintf+0x394>
    4188:	8a 94       	dec	r8
    418a:	f3 01       	movw	r30, r6
    418c:	e8 0d       	add	r30, r8
    418e:	f1 1d       	adc	r31, r1
    4190:	80 81       	ld	r24, Z
    4192:	b6 01       	movw	r22, r12
    4194:	90 e0       	ldi	r25, 0x00	; 0
    4196:	0e 94 2e 21 	call	0x425c	; 0x425c <fputc>
    419a:	81 10       	cpse	r8, r1
    419c:	f5 cf       	rjmp	.-22     	; 0x4188 <vfprintf+0x3a6>
    419e:	22 20       	and	r2, r2
    41a0:	09 f4       	brne	.+2      	; 0x41a4 <vfprintf+0x3c2>
    41a2:	42 ce       	rjmp	.-892    	; 0x3e28 <vfprintf+0x46>
    41a4:	b6 01       	movw	r22, r12
    41a6:	80 e2       	ldi	r24, 0x20	; 32
    41a8:	90 e0       	ldi	r25, 0x00	; 0
    41aa:	0e 94 2e 21 	call	0x425c	; 0x425c <fputc>
    41ae:	2a 94       	dec	r2
    41b0:	f6 cf       	rjmp	.-20     	; 0x419e <vfprintf+0x3bc>
    41b2:	f6 01       	movw	r30, r12
    41b4:	86 81       	ldd	r24, Z+6	; 0x06
    41b6:	97 81       	ldd	r25, Z+7	; 0x07
    41b8:	02 c0       	rjmp	.+4      	; 0x41be <vfprintf+0x3dc>
    41ba:	8f ef       	ldi	r24, 0xFF	; 255
    41bc:	9f ef       	ldi	r25, 0xFF	; 255
    41be:	2b 96       	adiw	r28, 0x0b	; 11
    41c0:	cd bf       	out	0x3d, r28	; 61
    41c2:	de bf       	out	0x3e, r29	; 62
    41c4:	df 91       	pop	r29
    41c6:	cf 91       	pop	r28
    41c8:	1f 91       	pop	r17
    41ca:	0f 91       	pop	r16
    41cc:	ff 90       	pop	r15
    41ce:	ef 90       	pop	r14
    41d0:	df 90       	pop	r13
    41d2:	cf 90       	pop	r12
    41d4:	bf 90       	pop	r11
    41d6:	af 90       	pop	r10
    41d8:	9f 90       	pop	r9
    41da:	8f 90       	pop	r8
    41dc:	7f 90       	pop	r7
    41de:	6f 90       	pop	r6
    41e0:	5f 90       	pop	r5
    41e2:	4f 90       	pop	r4
    41e4:	3f 90       	pop	r3
    41e6:	2f 90       	pop	r2
    41e8:	08 95       	ret

000041ea <calloc>:
    41ea:	0f 93       	push	r16
    41ec:	1f 93       	push	r17
    41ee:	cf 93       	push	r28
    41f0:	df 93       	push	r29
    41f2:	86 9f       	mul	r24, r22
    41f4:	80 01       	movw	r16, r0
    41f6:	87 9f       	mul	r24, r23
    41f8:	10 0d       	add	r17, r0
    41fa:	96 9f       	mul	r25, r22
    41fc:	10 0d       	add	r17, r0
    41fe:	11 24       	eor	r1, r1
    4200:	c8 01       	movw	r24, r16
    4202:	0e 94 85 1d 	call	0x3b0a	; 0x3b0a <malloc>
    4206:	ec 01       	movw	r28, r24
    4208:	00 97       	sbiw	r24, 0x00	; 0
    420a:	29 f0       	breq	.+10     	; 0x4216 <calloc+0x2c>
    420c:	a8 01       	movw	r20, r16
    420e:	60 e0       	ldi	r22, 0x00	; 0
    4210:	70 e0       	ldi	r23, 0x00	; 0
    4212:	0e 94 1c 21 	call	0x4238	; 0x4238 <memset>
    4216:	ce 01       	movw	r24, r28
    4218:	df 91       	pop	r29
    421a:	cf 91       	pop	r28
    421c:	1f 91       	pop	r17
    421e:	0f 91       	pop	r16
    4220:	08 95       	ret

00004222 <strnlen_P>:
    4222:	fc 01       	movw	r30, r24
    4224:	05 90       	lpm	r0, Z+
    4226:	61 50       	subi	r22, 0x01	; 1
    4228:	70 40       	sbci	r23, 0x00	; 0
    422a:	01 10       	cpse	r0, r1
    422c:	d8 f7       	brcc	.-10     	; 0x4224 <strnlen_P+0x2>
    422e:	80 95       	com	r24
    4230:	90 95       	com	r25
    4232:	8e 0f       	add	r24, r30
    4234:	9f 1f       	adc	r25, r31
    4236:	08 95       	ret

00004238 <memset>:
    4238:	dc 01       	movw	r26, r24
    423a:	01 c0       	rjmp	.+2      	; 0x423e <memset+0x6>
    423c:	6d 93       	st	X+, r22
    423e:	41 50       	subi	r20, 0x01	; 1
    4240:	50 40       	sbci	r21, 0x00	; 0
    4242:	e0 f7       	brcc	.-8      	; 0x423c <memset+0x4>
    4244:	08 95       	ret

00004246 <strnlen>:
    4246:	fc 01       	movw	r30, r24
    4248:	61 50       	subi	r22, 0x01	; 1
    424a:	70 40       	sbci	r23, 0x00	; 0
    424c:	01 90       	ld	r0, Z+
    424e:	01 10       	cpse	r0, r1
    4250:	d8 f7       	brcc	.-10     	; 0x4248 <strnlen+0x2>
    4252:	80 95       	com	r24
    4254:	90 95       	com	r25
    4256:	8e 0f       	add	r24, r30
    4258:	9f 1f       	adc	r25, r31
    425a:	08 95       	ret

0000425c <fputc>:
    425c:	0f 93       	push	r16
    425e:	1f 93       	push	r17
    4260:	cf 93       	push	r28
    4262:	df 93       	push	r29
    4264:	fb 01       	movw	r30, r22
    4266:	23 81       	ldd	r18, Z+3	; 0x03
    4268:	21 fd       	sbrc	r18, 1
    426a:	03 c0       	rjmp	.+6      	; 0x4272 <fputc+0x16>
    426c:	8f ef       	ldi	r24, 0xFF	; 255
    426e:	9f ef       	ldi	r25, 0xFF	; 255
    4270:	2c c0       	rjmp	.+88     	; 0x42ca <fputc+0x6e>
    4272:	22 ff       	sbrs	r18, 2
    4274:	16 c0       	rjmp	.+44     	; 0x42a2 <fputc+0x46>
    4276:	46 81       	ldd	r20, Z+6	; 0x06
    4278:	57 81       	ldd	r21, Z+7	; 0x07
    427a:	24 81       	ldd	r18, Z+4	; 0x04
    427c:	35 81       	ldd	r19, Z+5	; 0x05
    427e:	42 17       	cp	r20, r18
    4280:	53 07       	cpc	r21, r19
    4282:	44 f4       	brge	.+16     	; 0x4294 <fputc+0x38>
    4284:	a0 81       	ld	r26, Z
    4286:	b1 81       	ldd	r27, Z+1	; 0x01
    4288:	9d 01       	movw	r18, r26
    428a:	2f 5f       	subi	r18, 0xFF	; 255
    428c:	3f 4f       	sbci	r19, 0xFF	; 255
    428e:	20 83       	st	Z, r18
    4290:	31 83       	std	Z+1, r19	; 0x01
    4292:	8c 93       	st	X, r24
    4294:	26 81       	ldd	r18, Z+6	; 0x06
    4296:	37 81       	ldd	r19, Z+7	; 0x07
    4298:	2f 5f       	subi	r18, 0xFF	; 255
    429a:	3f 4f       	sbci	r19, 0xFF	; 255
    429c:	26 83       	std	Z+6, r18	; 0x06
    429e:	37 83       	std	Z+7, r19	; 0x07
    42a0:	14 c0       	rjmp	.+40     	; 0x42ca <fputc+0x6e>
    42a2:	8b 01       	movw	r16, r22
    42a4:	ec 01       	movw	r28, r24
    42a6:	fb 01       	movw	r30, r22
    42a8:	00 84       	ldd	r0, Z+8	; 0x08
    42aa:	f1 85       	ldd	r31, Z+9	; 0x09
    42ac:	e0 2d       	mov	r30, r0
    42ae:	19 95       	eicall
    42b0:	89 2b       	or	r24, r25
    42b2:	e1 f6       	brne	.-72     	; 0x426c <fputc+0x10>
    42b4:	d8 01       	movw	r26, r16
    42b6:	16 96       	adiw	r26, 0x06	; 6
    42b8:	8d 91       	ld	r24, X+
    42ba:	9c 91       	ld	r25, X
    42bc:	17 97       	sbiw	r26, 0x07	; 7
    42be:	01 96       	adiw	r24, 0x01	; 1
    42c0:	16 96       	adiw	r26, 0x06	; 6
    42c2:	8d 93       	st	X+, r24
    42c4:	9c 93       	st	X, r25
    42c6:	17 97       	sbiw	r26, 0x07	; 7
    42c8:	ce 01       	movw	r24, r28
    42ca:	df 91       	pop	r29
    42cc:	cf 91       	pop	r28
    42ce:	1f 91       	pop	r17
    42d0:	0f 91       	pop	r16
    42d2:	08 95       	ret

000042d4 <__ultoa_invert>:
    42d4:	fa 01       	movw	r30, r20
    42d6:	aa 27       	eor	r26, r26
    42d8:	28 30       	cpi	r18, 0x08	; 8
    42da:	51 f1       	breq	.+84     	; 0x4330 <__ultoa_invert+0x5c>
    42dc:	20 31       	cpi	r18, 0x10	; 16
    42de:	81 f1       	breq	.+96     	; 0x4340 <__ultoa_invert+0x6c>
    42e0:	e8 94       	clt
    42e2:	6f 93       	push	r22
    42e4:	6e 7f       	andi	r22, 0xFE	; 254
    42e6:	6e 5f       	subi	r22, 0xFE	; 254
    42e8:	7f 4f       	sbci	r23, 0xFF	; 255
    42ea:	8f 4f       	sbci	r24, 0xFF	; 255
    42ec:	9f 4f       	sbci	r25, 0xFF	; 255
    42ee:	af 4f       	sbci	r26, 0xFF	; 255
    42f0:	b1 e0       	ldi	r27, 0x01	; 1
    42f2:	3e d0       	rcall	.+124    	; 0x4370 <__ultoa_invert+0x9c>
    42f4:	b4 e0       	ldi	r27, 0x04	; 4
    42f6:	3c d0       	rcall	.+120    	; 0x4370 <__ultoa_invert+0x9c>
    42f8:	67 0f       	add	r22, r23
    42fa:	78 1f       	adc	r23, r24
    42fc:	89 1f       	adc	r24, r25
    42fe:	9a 1f       	adc	r25, r26
    4300:	a1 1d       	adc	r26, r1
    4302:	68 0f       	add	r22, r24
    4304:	79 1f       	adc	r23, r25
    4306:	8a 1f       	adc	r24, r26
    4308:	91 1d       	adc	r25, r1
    430a:	a1 1d       	adc	r26, r1
    430c:	6a 0f       	add	r22, r26
    430e:	71 1d       	adc	r23, r1
    4310:	81 1d       	adc	r24, r1
    4312:	91 1d       	adc	r25, r1
    4314:	a1 1d       	adc	r26, r1
    4316:	20 d0       	rcall	.+64     	; 0x4358 <__ultoa_invert+0x84>
    4318:	09 f4       	brne	.+2      	; 0x431c <__ultoa_invert+0x48>
    431a:	68 94       	set
    431c:	3f 91       	pop	r19
    431e:	2a e0       	ldi	r18, 0x0A	; 10
    4320:	26 9f       	mul	r18, r22
    4322:	11 24       	eor	r1, r1
    4324:	30 19       	sub	r19, r0
    4326:	30 5d       	subi	r19, 0xD0	; 208
    4328:	31 93       	st	Z+, r19
    432a:	de f6       	brtc	.-74     	; 0x42e2 <__ultoa_invert+0xe>
    432c:	cf 01       	movw	r24, r30
    432e:	08 95       	ret
    4330:	46 2f       	mov	r20, r22
    4332:	47 70       	andi	r20, 0x07	; 7
    4334:	40 5d       	subi	r20, 0xD0	; 208
    4336:	41 93       	st	Z+, r20
    4338:	b3 e0       	ldi	r27, 0x03	; 3
    433a:	0f d0       	rcall	.+30     	; 0x435a <__ultoa_invert+0x86>
    433c:	c9 f7       	brne	.-14     	; 0x4330 <__ultoa_invert+0x5c>
    433e:	f6 cf       	rjmp	.-20     	; 0x432c <__ultoa_invert+0x58>
    4340:	46 2f       	mov	r20, r22
    4342:	4f 70       	andi	r20, 0x0F	; 15
    4344:	40 5d       	subi	r20, 0xD0	; 208
    4346:	4a 33       	cpi	r20, 0x3A	; 58
    4348:	18 f0       	brcs	.+6      	; 0x4350 <__ultoa_invert+0x7c>
    434a:	49 5d       	subi	r20, 0xD9	; 217
    434c:	31 fd       	sbrc	r19, 1
    434e:	40 52       	subi	r20, 0x20	; 32
    4350:	41 93       	st	Z+, r20
    4352:	02 d0       	rcall	.+4      	; 0x4358 <__ultoa_invert+0x84>
    4354:	a9 f7       	brne	.-22     	; 0x4340 <__ultoa_invert+0x6c>
    4356:	ea cf       	rjmp	.-44     	; 0x432c <__ultoa_invert+0x58>
    4358:	b4 e0       	ldi	r27, 0x04	; 4
    435a:	a6 95       	lsr	r26
    435c:	97 95       	ror	r25
    435e:	87 95       	ror	r24
    4360:	77 95       	ror	r23
    4362:	67 95       	ror	r22
    4364:	ba 95       	dec	r27
    4366:	c9 f7       	brne	.-14     	; 0x435a <__ultoa_invert+0x86>
    4368:	00 97       	sbiw	r24, 0x00	; 0
    436a:	61 05       	cpc	r22, r1
    436c:	71 05       	cpc	r23, r1
    436e:	08 95       	ret
    4370:	9b 01       	movw	r18, r22
    4372:	ac 01       	movw	r20, r24
    4374:	0a 2e       	mov	r0, r26
    4376:	06 94       	lsr	r0
    4378:	57 95       	ror	r21
    437a:	47 95       	ror	r20
    437c:	37 95       	ror	r19
    437e:	27 95       	ror	r18
    4380:	ba 95       	dec	r27
    4382:	c9 f7       	brne	.-14     	; 0x4376 <__ultoa_invert+0xa2>
    4384:	62 0f       	add	r22, r18
    4386:	73 1f       	adc	r23, r19
    4388:	84 1f       	adc	r24, r20
    438a:	95 1f       	adc	r25, r21
    438c:	a0 1d       	adc	r26, r0
    438e:	08 95       	ret

00004390 <_exit>:
    4390:	f8 94       	cli

00004392 <__stop_program>:
    4392:	ff cf       	rjmp	.-2      	; 0x4392 <__stop_program>
